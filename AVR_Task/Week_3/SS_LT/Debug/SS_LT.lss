
SS_LT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000034e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000042  00800060  000034e6  0000355a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000017c4  00000000  00000000  0000359c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d62  00000000  00000000  00004d60  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00005ac2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00005c02  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00005d72  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  000079bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000088a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00009654  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  000097b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00009a41  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000a20f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ee       	ldi	r30, 0xE6	; 230
      68:	f4 e3       	ldi	r31, 0x34	; 52
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3a       	cpi	r26, 0xA2	; 162
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 a1 19 	call	0x3342	; 0x3342 <main>
      7a:	0c 94 71 1a 	jmp	0x34e2	; 0x34e2 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 3a 1a 	jmp	0x3474	; 0x3474 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 56 1a 	jmp	0x34ac	; 0x34ac <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 46 1a 	jmp	0x348c	; 0x348c <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 62 1a 	jmp	0x34c4	; 0x34c4 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 46 1a 	jmp	0x348c	; 0x348c <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 62 1a 	jmp	0x34c4	; 0x34c4 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 3a 1a 	jmp	0x3474	; 0x3474 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 56 1a 	jmp	0x34ac	; 0x34ac <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 46 1a 	jmp	0x348c	; 0x348c <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 62 1a 	jmp	0x34c4	; 0x34c4 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 46 1a 	jmp	0x348c	; 0x348c <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 62 1a 	jmp	0x34c4	; 0x34c4 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 46 1a 	jmp	0x348c	; 0x348c <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 62 1a 	jmp	0x34c4	; 0x34c4 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 4a 1a 	jmp	0x3494	; 0x3494 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 66 1a 	jmp	0x34cc	; 0x34cc <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_enuInit>:
#include "DIO_private.h"
#include "DIO_config.h"


ES_t DIO_enuInit(void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	0f 92       	push	r0
     b3c:	cd b7       	in	r28, 0x3d	; 61
     b3e:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
     b40:	81 e0       	ldi	r24, 0x01	; 1
     b42:	89 83       	std	Y+1, r24	; 0x01

	DDRA=Conc(PORTA_PIN7_DIR,PORTA_PIN6_DIR,PORTA_PIN5_DIR,PORTA_PIN4_DIR,PORTA_PIN3_DIR,PORTA_PIN2_DIR,PORTA_PIN1_DIR,PORTA_PIN0_DIR);
     b44:	ea e3       	ldi	r30, 0x3A	; 58
     b46:	f0 e0       	ldi	r31, 0x00	; 0
     b48:	8c e4       	ldi	r24, 0x4C	; 76
     b4a:	80 83       	st	Z, r24

	DDRB=Conc(PORTB_PIN7_DIR,PORTB_PIN6_DIR,PORTB_PIN5_DIR,PORTB_PIN4_DIR,PORTB_PIN3_DIR,PORTB_PIN2_DIR,PORTB_PIN1_DIR,PORTB_PIN0_DIR);
     b4c:	e7 e3       	ldi	r30, 0x37	; 55
     b4e:	f0 e0       	ldi	r31, 0x00	; 0
     b50:	8c e4       	ldi	r24, 0x4C	; 76
     b52:	80 83       	st	Z, r24

	DDRC=Conc(PORTC_PIN7_DIR,PORTC_PIN6_DIR,PORTC_PIN5_DIR,PORTC_PIN4_DIR,PORTC_PIN3_DIR,PORTC_PIN2_DIR,PORTC_PIN1_DIR,PORTC_PIN0_DIR);
     b54:	e4 e3       	ldi	r30, 0x34	; 52
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	8c e4       	ldi	r24, 0x4C	; 76
     b5a:	80 83       	st	Z, r24

	DDRD=Conc(PORTD_PIN7_DIR,PORTD_PIN6_DIR,PORTD_PIN5_DIR,PORTD_PIN4_DIR,PORTD_PIN3_DIR,PORTD_PIN2_DIR,PORTD_PIN1_DIR,PORTD_PIN0_DIR);
     b5c:	e1 e3       	ldi	r30, 0x31	; 49
     b5e:	f0 e0       	ldi	r31, 0x00	; 0
     b60:	8c e4       	ldi	r24, 0x4C	; 76
     b62:	80 83       	st	Z, r24

	PORTA=Conc(PORTA_PIN7_VAL,PORTA_PIN6_VAL,PORTA_PIN5_VAL,PORTA_PIN4_VAL,PORTA_PIN3_VAL,PORTA_PIN2_VAL,PORTA_PIN1_VAL,PORTA_PIN0_VAL);
     b64:	eb e3       	ldi	r30, 0x3B	; 59
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	84 e7       	ldi	r24, 0x74	; 116
     b6a:	80 83       	st	Z, r24

	PORTB=Conc(PORTB_PIN7_VAL,PORTB_PIN6_VAL,PORTB_PIN5_VAL,PORTB_PIN4_VAL,PORTB_PIN3_VAL,PORTB_PIN2_VAL,PORTB_PIN1_VAL,PORTB_PIN0_VAL);
     b6c:	e8 e3       	ldi	r30, 0x38	; 56
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	84 e7       	ldi	r24, 0x74	; 116
     b72:	80 83       	st	Z, r24

	PORTC=Conc(PORTC_PIN7_VAL,PORTC_PIN6_VAL,PORTC_PIN5_VAL,PORTC_PIN4_VAL,PORTC_PIN3_VAL,PORTC_PIN2_VAL,PORTC_PIN1_VAL,PORTC_PIN0_VAL);
     b74:	e5 e3       	ldi	r30, 0x35	; 53
     b76:	f0 e0       	ldi	r31, 0x00	; 0
     b78:	84 e7       	ldi	r24, 0x74	; 116
     b7a:	80 83       	st	Z, r24

	PORTD=Conc(PORTD_PIN7_VAL,PORTD_PIN6_VAL,PORTD_PIN5_VAL,PORTD_PIN4_VAL,PORTD_PIN3_VAL,PORTD_PIN2_VAL,PORTD_PIN1_VAL,PORTD_PIN0_VAL);
     b7c:	e2 e3       	ldi	r30, 0x32	; 50
     b7e:	f0 e0       	ldi	r31, 0x00	; 0
     b80:	84 e7       	ldi	r24, 0x74	; 116
     b82:	80 83       	st	Z, r24

	Local_enuErrorState=ES_OK;
     b84:	19 82       	std	Y+1, r1	; 0x01
	return Local_enuErrorState;
     b86:	89 81       	ldd	r24, Y+1	; 0x01
}
     b88:	0f 90       	pop	r0
     b8a:	cf 91       	pop	r28
     b8c:	df 91       	pop	r29
     b8e:	08 95       	ret

00000b90 <DIO_enuSet_PortValue>:

ES_t DIO_enuSet_PortValue(u8 copy_u8PortId,u8 copy_u8PortValue)//copy_u8PortValue-->HIGH-->LOW
{
     b90:	df 93       	push	r29
     b92:	cf 93       	push	r28
     b94:	00 d0       	rcall	.+0      	; 0xb96 <DIO_enuSet_PortValue+0x6>
     b96:	00 d0       	rcall	.+0      	; 0xb98 <DIO_enuSet_PortValue+0x8>
     b98:	0f 92       	push	r0
     b9a:	cd b7       	in	r28, 0x3d	; 61
     b9c:	de b7       	in	r29, 0x3e	; 62
     b9e:	8a 83       	std	Y+2, r24	; 0x02
     ba0:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
     ba2:	81 e0       	ldi	r24, 0x01	; 1
     ba4:	89 83       	std	Y+1, r24	; 0x01

	if(copy_u8PortId<=DIO_PORTD)
     ba6:	8a 81       	ldd	r24, Y+2	; 0x02
     ba8:	84 30       	cpi	r24, 0x04	; 4
     baa:	a0 f5       	brcc	.+104    	; 0xc14 <DIO_enuSet_PortValue+0x84>
	{
		switch(copy_u8PortId)
     bac:	8a 81       	ldd	r24, Y+2	; 0x02
     bae:	28 2f       	mov	r18, r24
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	3d 83       	std	Y+5, r19	; 0x05
     bb4:	2c 83       	std	Y+4, r18	; 0x04
     bb6:	8c 81       	ldd	r24, Y+4	; 0x04
     bb8:	9d 81       	ldd	r25, Y+5	; 0x05
     bba:	81 30       	cpi	r24, 0x01	; 1
     bbc:	91 05       	cpc	r25, r1
     bbe:	d1 f0       	breq	.+52     	; 0xbf4 <DIO_enuSet_PortValue+0x64>
     bc0:	2c 81       	ldd	r18, Y+4	; 0x04
     bc2:	3d 81       	ldd	r19, Y+5	; 0x05
     bc4:	22 30       	cpi	r18, 0x02	; 2
     bc6:	31 05       	cpc	r19, r1
     bc8:	2c f4       	brge	.+10     	; 0xbd4 <DIO_enuSet_PortValue+0x44>
     bca:	8c 81       	ldd	r24, Y+4	; 0x04
     bcc:	9d 81       	ldd	r25, Y+5	; 0x05
     bce:	00 97       	sbiw	r24, 0x00	; 0
     bd0:	61 f0       	breq	.+24     	; 0xbea <DIO_enuSet_PortValue+0x5a>
     bd2:	1e c0       	rjmp	.+60     	; 0xc10 <DIO_enuSet_PortValue+0x80>
     bd4:	2c 81       	ldd	r18, Y+4	; 0x04
     bd6:	3d 81       	ldd	r19, Y+5	; 0x05
     bd8:	22 30       	cpi	r18, 0x02	; 2
     bda:	31 05       	cpc	r19, r1
     bdc:	81 f0       	breq	.+32     	; 0xbfe <DIO_enuSet_PortValue+0x6e>
     bde:	8c 81       	ldd	r24, Y+4	; 0x04
     be0:	9d 81       	ldd	r25, Y+5	; 0x05
     be2:	83 30       	cpi	r24, 0x03	; 3
     be4:	91 05       	cpc	r25, r1
     be6:	81 f0       	breq	.+32     	; 0xc08 <DIO_enuSet_PortValue+0x78>
     be8:	13 c0       	rjmp	.+38     	; 0xc10 <DIO_enuSet_PortValue+0x80>
		{
		case(DIO_PORTA):
			PORTA=copy_u8PortValue;
     bea:	eb e3       	ldi	r30, 0x3B	; 59
     bec:	f0 e0       	ldi	r31, 0x00	; 0
     bee:	8b 81       	ldd	r24, Y+3	; 0x03
     bf0:	80 83       	st	Z, r24
     bf2:	0e c0       	rjmp	.+28     	; 0xc10 <DIO_enuSet_PortValue+0x80>
			break;
		case(DIO_PORTB):
			PORTB=copy_u8PortValue;
     bf4:	e8 e3       	ldi	r30, 0x38	; 56
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	8b 81       	ldd	r24, Y+3	; 0x03
     bfa:	80 83       	st	Z, r24
     bfc:	09 c0       	rjmp	.+18     	; 0xc10 <DIO_enuSet_PortValue+0x80>
			break;
		case(DIO_PORTC):
			PORTC=copy_u8PortValue;
     bfe:	e5 e3       	ldi	r30, 0x35	; 53
     c00:	f0 e0       	ldi	r31, 0x00	; 0
     c02:	8b 81       	ldd	r24, Y+3	; 0x03
     c04:	80 83       	st	Z, r24
     c06:	04 c0       	rjmp	.+8      	; 0xc10 <DIO_enuSet_PortValue+0x80>
			break;
		case(DIO_PORTD):
			PORTD=copy_u8PortValue;
     c08:	e2 e3       	ldi	r30, 0x32	; 50
     c0a:	f0 e0       	ldi	r31, 0x00	; 0
     c0c:	8b 81       	ldd	r24, Y+3	; 0x03
     c0e:	80 83       	st	Z, r24
		    break;
		}
		Local_enuErrorState=ES_OK;
     c10:	19 82       	std	Y+1, r1	; 0x01
     c12:	02 c0       	rjmp	.+4      	; 0xc18 <DIO_enuSet_PortValue+0x88>

	}
	else
	{
		Local_enuErrorState=ES_OUT_OF_RANGE;
     c14:	83 e0       	ldi	r24, 0x03	; 3
     c16:	89 83       	std	Y+1, r24	; 0x01
	}



	return Local_enuErrorState;
     c18:	89 81       	ldd	r24, Y+1	; 0x01
}
     c1a:	0f 90       	pop	r0
     c1c:	0f 90       	pop	r0
     c1e:	0f 90       	pop	r0
     c20:	0f 90       	pop	r0
     c22:	0f 90       	pop	r0
     c24:	cf 91       	pop	r28
     c26:	df 91       	pop	r29
     c28:	08 95       	ret

00000c2a <DIO_enuSet_PortDirection>:


ES_t DIO_enuSet_PortDirection(u8 copy_u8PortId,u8 copy_u8PortValue)//copy_u8PortValue-->INPUT-->OUTPUT
{
     c2a:	df 93       	push	r29
     c2c:	cf 93       	push	r28
     c2e:	00 d0       	rcall	.+0      	; 0xc30 <DIO_enuSet_PortDirection+0x6>
     c30:	00 d0       	rcall	.+0      	; 0xc32 <DIO_enuSet_PortDirection+0x8>
     c32:	0f 92       	push	r0
     c34:	cd b7       	in	r28, 0x3d	; 61
     c36:	de b7       	in	r29, 0x3e	; 62
     c38:	8a 83       	std	Y+2, r24	; 0x02
     c3a:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
     c3c:	81 e0       	ldi	r24, 0x01	; 1
     c3e:	89 83       	std	Y+1, r24	; 0x01

	if(copy_u8PortId<=DIO_PORTD)
     c40:	8a 81       	ldd	r24, Y+2	; 0x02
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	a0 f5       	brcc	.+104    	; 0xcae <DIO_enuSet_PortDirection+0x84>
	{
		switch(copy_u8PortId)
     c46:	8a 81       	ldd	r24, Y+2	; 0x02
     c48:	28 2f       	mov	r18, r24
     c4a:	30 e0       	ldi	r19, 0x00	; 0
     c4c:	3d 83       	std	Y+5, r19	; 0x05
     c4e:	2c 83       	std	Y+4, r18	; 0x04
     c50:	8c 81       	ldd	r24, Y+4	; 0x04
     c52:	9d 81       	ldd	r25, Y+5	; 0x05
     c54:	81 30       	cpi	r24, 0x01	; 1
     c56:	91 05       	cpc	r25, r1
     c58:	d1 f0       	breq	.+52     	; 0xc8e <DIO_enuSet_PortDirection+0x64>
     c5a:	2c 81       	ldd	r18, Y+4	; 0x04
     c5c:	3d 81       	ldd	r19, Y+5	; 0x05
     c5e:	22 30       	cpi	r18, 0x02	; 2
     c60:	31 05       	cpc	r19, r1
     c62:	2c f4       	brge	.+10     	; 0xc6e <DIO_enuSet_PortDirection+0x44>
     c64:	8c 81       	ldd	r24, Y+4	; 0x04
     c66:	9d 81       	ldd	r25, Y+5	; 0x05
     c68:	00 97       	sbiw	r24, 0x00	; 0
     c6a:	61 f0       	breq	.+24     	; 0xc84 <DIO_enuSet_PortDirection+0x5a>
     c6c:	1e c0       	rjmp	.+60     	; 0xcaa <DIO_enuSet_PortDirection+0x80>
     c6e:	2c 81       	ldd	r18, Y+4	; 0x04
     c70:	3d 81       	ldd	r19, Y+5	; 0x05
     c72:	22 30       	cpi	r18, 0x02	; 2
     c74:	31 05       	cpc	r19, r1
     c76:	81 f0       	breq	.+32     	; 0xc98 <DIO_enuSet_PortDirection+0x6e>
     c78:	8c 81       	ldd	r24, Y+4	; 0x04
     c7a:	9d 81       	ldd	r25, Y+5	; 0x05
     c7c:	83 30       	cpi	r24, 0x03	; 3
     c7e:	91 05       	cpc	r25, r1
     c80:	81 f0       	breq	.+32     	; 0xca2 <DIO_enuSet_PortDirection+0x78>
     c82:	13 c0       	rjmp	.+38     	; 0xcaa <DIO_enuSet_PortDirection+0x80>
		{
		case(DIO_PORTA):
			DDRA=copy_u8PortValue;
     c84:	ea e3       	ldi	r30, 0x3A	; 58
     c86:	f0 e0       	ldi	r31, 0x00	; 0
     c88:	8b 81       	ldd	r24, Y+3	; 0x03
     c8a:	80 83       	st	Z, r24
     c8c:	0e c0       	rjmp	.+28     	; 0xcaa <DIO_enuSet_PortDirection+0x80>
			break;
		case(DIO_PORTB):
			DDRB=copy_u8PortValue;
     c8e:	e7 e3       	ldi	r30, 0x37	; 55
     c90:	f0 e0       	ldi	r31, 0x00	; 0
     c92:	8b 81       	ldd	r24, Y+3	; 0x03
     c94:	80 83       	st	Z, r24
     c96:	09 c0       	rjmp	.+18     	; 0xcaa <DIO_enuSet_PortDirection+0x80>
			break;
		case(DIO_PORTC):
			DDRC=copy_u8PortValue;
     c98:	e4 e3       	ldi	r30, 0x34	; 52
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	8b 81       	ldd	r24, Y+3	; 0x03
     c9e:	80 83       	st	Z, r24
     ca0:	04 c0       	rjmp	.+8      	; 0xcaa <DIO_enuSet_PortDirection+0x80>
			break;
		case(DIO_PORTD):
			DDRD=copy_u8PortValue;
     ca2:	e1 e3       	ldi	r30, 0x31	; 49
     ca4:	f0 e0       	ldi	r31, 0x00	; 0
     ca6:	8b 81       	ldd	r24, Y+3	; 0x03
     ca8:	80 83       	st	Z, r24
		    break;
		}
		Local_enuErrorState=ES_OK;
     caa:	19 82       	std	Y+1, r1	; 0x01
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <DIO_enuSet_PortDirection+0x88>
	}
	else
	{
		Local_enuErrorState=ES_OUT_OF_RANGE;
     cae:	83 e0       	ldi	r24, 0x03	; 3
     cb0:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
     cb2:	89 81       	ldd	r24, Y+1	; 0x01
}
     cb4:	0f 90       	pop	r0
     cb6:	0f 90       	pop	r0
     cb8:	0f 90       	pop	r0
     cba:	0f 90       	pop	r0
     cbc:	0f 90       	pop	r0
     cbe:	cf 91       	pop	r28
     cc0:	df 91       	pop	r29
     cc2:	08 95       	ret

00000cc4 <DIO_enuget_PortValue>:


ES_t DIO_enuget_PortValue(u8 copy_u8PortId,u8 *copy_pu8PortValue)
{
     cc4:	df 93       	push	r29
     cc6:	cf 93       	push	r28
     cc8:	00 d0       	rcall	.+0      	; 0xcca <DIO_enuget_PortValue+0x6>
     cca:	00 d0       	rcall	.+0      	; 0xccc <DIO_enuget_PortValue+0x8>
     ccc:	00 d0       	rcall	.+0      	; 0xcce <DIO_enuget_PortValue+0xa>
     cce:	cd b7       	in	r28, 0x3d	; 61
     cd0:	de b7       	in	r29, 0x3e	; 62
     cd2:	8a 83       	std	Y+2, r24	; 0x02
     cd4:	7c 83       	std	Y+4, r23	; 0x04
     cd6:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
     cd8:	81 e0       	ldi	r24, 0x01	; 1
     cda:	89 83       	std	Y+1, r24	; 0x01
	if(copy_pu8PortValue!=NULL )
     cdc:	8b 81       	ldd	r24, Y+3	; 0x03
     cde:	9c 81       	ldd	r25, Y+4	; 0x04
     ce0:	00 97       	sbiw	r24, 0x00	; 0
     ce2:	09 f4       	brne	.+2      	; 0xce6 <DIO_enuget_PortValue+0x22>
     ce4:	42 c0       	rjmp	.+132    	; 0xd6a <DIO_enuget_PortValue+0xa6>
	{
		if(copy_u8PortId<=DIO_PORTD)
     ce6:	8a 81       	ldd	r24, Y+2	; 0x02
     ce8:	84 30       	cpi	r24, 0x04	; 4
     cea:	e0 f5       	brcc	.+120    	; 0xd64 <DIO_enuget_PortValue+0xa0>
			{
				switch(copy_u8PortId)
     cec:	8a 81       	ldd	r24, Y+2	; 0x02
     cee:	28 2f       	mov	r18, r24
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	3e 83       	std	Y+6, r19	; 0x06
     cf4:	2d 83       	std	Y+5, r18	; 0x05
     cf6:	8d 81       	ldd	r24, Y+5	; 0x05
     cf8:	9e 81       	ldd	r25, Y+6	; 0x06
     cfa:	81 30       	cpi	r24, 0x01	; 1
     cfc:	91 05       	cpc	r25, r1
     cfe:	e1 f0       	breq	.+56     	; 0xd38 <DIO_enuget_PortValue+0x74>
     d00:	2d 81       	ldd	r18, Y+5	; 0x05
     d02:	3e 81       	ldd	r19, Y+6	; 0x06
     d04:	22 30       	cpi	r18, 0x02	; 2
     d06:	31 05       	cpc	r19, r1
     d08:	2c f4       	brge	.+10     	; 0xd14 <DIO_enuget_PortValue+0x50>
     d0a:	8d 81       	ldd	r24, Y+5	; 0x05
     d0c:	9e 81       	ldd	r25, Y+6	; 0x06
     d0e:	00 97       	sbiw	r24, 0x00	; 0
     d10:	61 f0       	breq	.+24     	; 0xd2a <DIO_enuget_PortValue+0x66>
     d12:	26 c0       	rjmp	.+76     	; 0xd60 <DIO_enuget_PortValue+0x9c>
     d14:	2d 81       	ldd	r18, Y+5	; 0x05
     d16:	3e 81       	ldd	r19, Y+6	; 0x06
     d18:	22 30       	cpi	r18, 0x02	; 2
     d1a:	31 05       	cpc	r19, r1
     d1c:	a1 f0       	breq	.+40     	; 0xd46 <DIO_enuget_PortValue+0x82>
     d1e:	8d 81       	ldd	r24, Y+5	; 0x05
     d20:	9e 81       	ldd	r25, Y+6	; 0x06
     d22:	83 30       	cpi	r24, 0x03	; 3
     d24:	91 05       	cpc	r25, r1
     d26:	b1 f0       	breq	.+44     	; 0xd54 <DIO_enuget_PortValue+0x90>
     d28:	1b c0       	rjmp	.+54     	; 0xd60 <DIO_enuget_PortValue+0x9c>
				{
				case(DIO_PORTA):
					*copy_pu8PortValue=PINA;
     d2a:	e9 e3       	ldi	r30, 0x39	; 57
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	80 81       	ld	r24, Z
     d30:	eb 81       	ldd	r30, Y+3	; 0x03
     d32:	fc 81       	ldd	r31, Y+4	; 0x04
     d34:	80 83       	st	Z, r24
     d36:	14 c0       	rjmp	.+40     	; 0xd60 <DIO_enuget_PortValue+0x9c>
					break;
				case(DIO_PORTB):
					*copy_pu8PortValue=PINB;
     d38:	e6 e3       	ldi	r30, 0x36	; 54
     d3a:	f0 e0       	ldi	r31, 0x00	; 0
     d3c:	80 81       	ld	r24, Z
     d3e:	eb 81       	ldd	r30, Y+3	; 0x03
     d40:	fc 81       	ldd	r31, Y+4	; 0x04
     d42:	80 83       	st	Z, r24
     d44:	0d c0       	rjmp	.+26     	; 0xd60 <DIO_enuget_PortValue+0x9c>
					break;
				case(DIO_PORTC):
					*copy_pu8PortValue=PINC;
     d46:	e3 e3       	ldi	r30, 0x33	; 51
     d48:	f0 e0       	ldi	r31, 0x00	; 0
     d4a:	80 81       	ld	r24, Z
     d4c:	eb 81       	ldd	r30, Y+3	; 0x03
     d4e:	fc 81       	ldd	r31, Y+4	; 0x04
     d50:	80 83       	st	Z, r24
     d52:	06 c0       	rjmp	.+12     	; 0xd60 <DIO_enuget_PortValue+0x9c>
					break;
				case(DIO_PORTD):
					*copy_pu8PortValue=PIND;
     d54:	e0 e3       	ldi	r30, 0x30	; 48
     d56:	f0 e0       	ldi	r31, 0x00	; 0
     d58:	80 81       	ld	r24, Z
     d5a:	eb 81       	ldd	r30, Y+3	; 0x03
     d5c:	fc 81       	ldd	r31, Y+4	; 0x04
     d5e:	80 83       	st	Z, r24
				    break;
				}
				Local_enuErrorState=ES_OK;
     d60:	19 82       	std	Y+1, r1	; 0x01
     d62:	05 c0       	rjmp	.+10     	; 0xd6e <DIO_enuget_PortValue+0xaa>

			}
		else
		{
			Local_enuErrorState=ES_OUT_OF_RANGE;
     d64:	83 e0       	ldi	r24, 0x03	; 3
     d66:	89 83       	std	Y+1, r24	; 0x01
     d68:	02 c0       	rjmp	.+4      	; 0xd6e <DIO_enuget_PortValue+0xaa>
		}
	}
	else
	{
		Local_enuErrorState=ES_NULL_POINTER;
     d6a:	82 e0       	ldi	r24, 0x02	; 2
     d6c:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
     d6e:	89 81       	ldd	r24, Y+1	; 0x01
}
     d70:	26 96       	adiw	r28, 0x06	; 6
     d72:	0f b6       	in	r0, 0x3f	; 63
     d74:	f8 94       	cli
     d76:	de bf       	out	0x3e, r29	; 62
     d78:	0f be       	out	0x3f, r0	; 63
     d7a:	cd bf       	out	0x3d, r28	; 61
     d7c:	cf 91       	pop	r28
     d7e:	df 91       	pop	r29
     d80:	08 95       	ret

00000d82 <DIO_enuToggle_PortValue>:


ES_t DIO_enuToggle_PortValue(u8 copy_u8PortId)
{
     d82:	df 93       	push	r29
     d84:	cf 93       	push	r28
     d86:	00 d0       	rcall	.+0      	; 0xd88 <DIO_enuToggle_PortValue+0x6>
     d88:	00 d0       	rcall	.+0      	; 0xd8a <DIO_enuToggle_PortValue+0x8>
     d8a:	cd b7       	in	r28, 0x3d	; 61
     d8c:	de b7       	in	r29, 0x3e	; 62
     d8e:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
     d90:	81 e0       	ldi	r24, 0x01	; 1
     d92:	89 83       	std	Y+1, r24	; 0x01
	if(copy_u8PortId<=DIO_PORTD)
     d94:	8a 81       	ldd	r24, Y+2	; 0x02
     d96:	84 30       	cpi	r24, 0x04	; 4
     d98:	08 f0       	brcs	.+2      	; 0xd9c <DIO_enuToggle_PortValue+0x1a>
     d9a:	40 c0       	rjmp	.+128    	; 0xe1c <DIO_enuToggle_PortValue+0x9a>
		{
			switch(copy_u8PortId)
     d9c:	8a 81       	ldd	r24, Y+2	; 0x02
     d9e:	28 2f       	mov	r18, r24
     da0:	30 e0       	ldi	r19, 0x00	; 0
     da2:	3c 83       	std	Y+4, r19	; 0x04
     da4:	2b 83       	std	Y+3, r18	; 0x03
     da6:	8b 81       	ldd	r24, Y+3	; 0x03
     da8:	9c 81       	ldd	r25, Y+4	; 0x04
     daa:	81 30       	cpi	r24, 0x01	; 1
     dac:	91 05       	cpc	r25, r1
     dae:	e9 f0       	breq	.+58     	; 0xdea <DIO_enuToggle_PortValue+0x68>
     db0:	2b 81       	ldd	r18, Y+3	; 0x03
     db2:	3c 81       	ldd	r19, Y+4	; 0x04
     db4:	22 30       	cpi	r18, 0x02	; 2
     db6:	31 05       	cpc	r19, r1
     db8:	2c f4       	brge	.+10     	; 0xdc4 <DIO_enuToggle_PortValue+0x42>
     dba:	8b 81       	ldd	r24, Y+3	; 0x03
     dbc:	9c 81       	ldd	r25, Y+4	; 0x04
     dbe:	00 97       	sbiw	r24, 0x00	; 0
     dc0:	61 f0       	breq	.+24     	; 0xdda <DIO_enuToggle_PortValue+0x58>
     dc2:	2a c0       	rjmp	.+84     	; 0xe18 <DIO_enuToggle_PortValue+0x96>
     dc4:	2b 81       	ldd	r18, Y+3	; 0x03
     dc6:	3c 81       	ldd	r19, Y+4	; 0x04
     dc8:	22 30       	cpi	r18, 0x02	; 2
     dca:	31 05       	cpc	r19, r1
     dcc:	b1 f0       	breq	.+44     	; 0xdfa <DIO_enuToggle_PortValue+0x78>
     dce:	8b 81       	ldd	r24, Y+3	; 0x03
     dd0:	9c 81       	ldd	r25, Y+4	; 0x04
     dd2:	83 30       	cpi	r24, 0x03	; 3
     dd4:	91 05       	cpc	r25, r1
     dd6:	c9 f0       	breq	.+50     	; 0xe0a <DIO_enuToggle_PortValue+0x88>
     dd8:	1f c0       	rjmp	.+62     	; 0xe18 <DIO_enuToggle_PortValue+0x96>
			{
			case(DIO_PORTA):
				PORTA=~PORTA;
     dda:	ab e3       	ldi	r26, 0x3B	; 59
     ddc:	b0 e0       	ldi	r27, 0x00	; 0
     dde:	eb e3       	ldi	r30, 0x3B	; 59
     de0:	f0 e0       	ldi	r31, 0x00	; 0
     de2:	80 81       	ld	r24, Z
     de4:	80 95       	com	r24
     de6:	8c 93       	st	X, r24
     de8:	17 c0       	rjmp	.+46     	; 0xe18 <DIO_enuToggle_PortValue+0x96>
				break;
			case(DIO_PORTB):
				PORTB=~PORTB;
     dea:	a8 e3       	ldi	r26, 0x38	; 56
     dec:	b0 e0       	ldi	r27, 0x00	; 0
     dee:	e8 e3       	ldi	r30, 0x38	; 56
     df0:	f0 e0       	ldi	r31, 0x00	; 0
     df2:	80 81       	ld	r24, Z
     df4:	80 95       	com	r24
     df6:	8c 93       	st	X, r24
     df8:	0f c0       	rjmp	.+30     	; 0xe18 <DIO_enuToggle_PortValue+0x96>
				break;
			case(DIO_PORTC):
				PORTC=~PORTC;
     dfa:	a5 e3       	ldi	r26, 0x35	; 53
     dfc:	b0 e0       	ldi	r27, 0x00	; 0
     dfe:	e5 e3       	ldi	r30, 0x35	; 53
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	80 81       	ld	r24, Z
     e04:	80 95       	com	r24
     e06:	8c 93       	st	X, r24
     e08:	07 c0       	rjmp	.+14     	; 0xe18 <DIO_enuToggle_PortValue+0x96>
				break;
			case(DIO_PORTD):
				PORTD=~PORTD;
     e0a:	a2 e3       	ldi	r26, 0x32	; 50
     e0c:	b0 e0       	ldi	r27, 0x00	; 0
     e0e:	e2 e3       	ldi	r30, 0x32	; 50
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	80 81       	ld	r24, Z
     e14:	80 95       	com	r24
     e16:	8c 93       	st	X, r24
			    break;
			}
			Local_enuErrorState=ES_OK;
     e18:	19 82       	std	Y+1, r1	; 0x01
     e1a:	02 c0       	rjmp	.+4      	; 0xe20 <DIO_enuToggle_PortValue+0x9e>
		}
		else
		{
			Local_enuErrorState=ES_OUT_OF_RANGE;
     e1c:	83 e0       	ldi	r24, 0x03	; 3
     e1e:	89 83       	std	Y+1, r24	; 0x01
		}

	return Local_enuErrorState;
     e20:	89 81       	ldd	r24, Y+1	; 0x01
}
     e22:	0f 90       	pop	r0
     e24:	0f 90       	pop	r0
     e26:	0f 90       	pop	r0
     e28:	0f 90       	pop	r0
     e2a:	cf 91       	pop	r28
     e2c:	df 91       	pop	r29
     e2e:	08 95       	ret

00000e30 <DIO_enuSet_PinValue>:



ES_t DIO_enuSet_PinValue(u8 copy_u8PortId,u8 copy_u8PinId,u8 copy_u8PinValue)

{
     e30:	df 93       	push	r29
     e32:	cf 93       	push	r28
     e34:	00 d0       	rcall	.+0      	; 0xe36 <DIO_enuSet_PinValue+0x6>
     e36:	00 d0       	rcall	.+0      	; 0xe38 <DIO_enuSet_PinValue+0x8>
     e38:	00 d0       	rcall	.+0      	; 0xe3a <DIO_enuSet_PinValue+0xa>
     e3a:	cd b7       	in	r28, 0x3d	; 61
     e3c:	de b7       	in	r29, 0x3e	; 62
     e3e:	8a 83       	std	Y+2, r24	; 0x02
     e40:	6b 83       	std	Y+3, r22	; 0x03
     e42:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	89 83       	std	Y+1, r24	; 0x01

	if(copy_u8PortId <= DIO_PORTD && copy_u8PinId <= DIO_PIN7 && copy_u8PinValue <= OUTPUT)
     e48:	8a 81       	ldd	r24, Y+2	; 0x02
     e4a:	84 30       	cpi	r24, 0x04	; 4
     e4c:	08 f0       	brcs	.+2      	; 0xe50 <DIO_enuSet_PinValue+0x20>
     e4e:	d0 c0       	rjmp	.+416    	; 0xff0 <DIO_enuSet_PinValue+0x1c0>
     e50:	8b 81       	ldd	r24, Y+3	; 0x03
     e52:	88 30       	cpi	r24, 0x08	; 8
     e54:	08 f0       	brcs	.+2      	; 0xe58 <DIO_enuSet_PinValue+0x28>
     e56:	cc c0       	rjmp	.+408    	; 0xff0 <DIO_enuSet_PinValue+0x1c0>
     e58:	8c 81       	ldd	r24, Y+4	; 0x04
     e5a:	82 30       	cpi	r24, 0x02	; 2
     e5c:	08 f0       	brcs	.+2      	; 0xe60 <DIO_enuSet_PinValue+0x30>
     e5e:	c8 c0       	rjmp	.+400    	; 0xff0 <DIO_enuSet_PinValue+0x1c0>
	{
		switch(copy_u8PortId)
     e60:	8a 81       	ldd	r24, Y+2	; 0x02
     e62:	28 2f       	mov	r18, r24
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	3e 83       	std	Y+6, r19	; 0x06
     e68:	2d 83       	std	Y+5, r18	; 0x05
     e6a:	6d 81       	ldd	r22, Y+5	; 0x05
     e6c:	7e 81       	ldd	r23, Y+6	; 0x06
     e6e:	61 30       	cpi	r22, 0x01	; 1
     e70:	71 05       	cpc	r23, r1
     e72:	09 f4       	brne	.+2      	; 0xe76 <DIO_enuSet_PinValue+0x46>
     e74:	41 c0       	rjmp	.+130    	; 0xef8 <DIO_enuSet_PinValue+0xc8>
     e76:	8d 81       	ldd	r24, Y+5	; 0x05
     e78:	9e 81       	ldd	r25, Y+6	; 0x06
     e7a:	82 30       	cpi	r24, 0x02	; 2
     e7c:	91 05       	cpc	r25, r1
     e7e:	34 f4       	brge	.+12     	; 0xe8c <DIO_enuSet_PinValue+0x5c>
     e80:	2d 81       	ldd	r18, Y+5	; 0x05
     e82:	3e 81       	ldd	r19, Y+6	; 0x06
     e84:	21 15       	cp	r18, r1
     e86:	31 05       	cpc	r19, r1
     e88:	71 f0       	breq	.+28     	; 0xea6 <DIO_enuSet_PinValue+0x76>
     e8a:	b0 c0       	rjmp	.+352    	; 0xfec <DIO_enuSet_PinValue+0x1bc>
     e8c:	6d 81       	ldd	r22, Y+5	; 0x05
     e8e:	7e 81       	ldd	r23, Y+6	; 0x06
     e90:	62 30       	cpi	r22, 0x02	; 2
     e92:	71 05       	cpc	r23, r1
     e94:	09 f4       	brne	.+2      	; 0xe98 <DIO_enuSet_PinValue+0x68>
     e96:	59 c0       	rjmp	.+178    	; 0xf4a <DIO_enuSet_PinValue+0x11a>
     e98:	8d 81       	ldd	r24, Y+5	; 0x05
     e9a:	9e 81       	ldd	r25, Y+6	; 0x06
     e9c:	83 30       	cpi	r24, 0x03	; 3
     e9e:	91 05       	cpc	r25, r1
     ea0:	09 f4       	brne	.+2      	; 0xea4 <DIO_enuSet_PinValue+0x74>
     ea2:	7c c0       	rjmp	.+248    	; 0xf9c <DIO_enuSet_PinValue+0x16c>
     ea4:	a3 c0       	rjmp	.+326    	; 0xfec <DIO_enuSet_PinValue+0x1bc>
		{
			case(DIO_PORTA):
			PORTA&=~(DIO_BIT_MUSK<<copy_u8PinId);
     ea6:	ab e3       	ldi	r26, 0x3B	; 59
     ea8:	b0 e0       	ldi	r27, 0x00	; 0
     eaa:	eb e3       	ldi	r30, 0x3B	; 59
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	80 81       	ld	r24, Z
     eb0:	48 2f       	mov	r20, r24
     eb2:	8b 81       	ldd	r24, Y+3	; 0x03
     eb4:	28 2f       	mov	r18, r24
     eb6:	30 e0       	ldi	r19, 0x00	; 0
     eb8:	81 e0       	ldi	r24, 0x01	; 1
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <DIO_enuSet_PinValue+0x92>
     ebe:	88 0f       	add	r24, r24
     ec0:	99 1f       	adc	r25, r25
     ec2:	2a 95       	dec	r18
     ec4:	e2 f7       	brpl	.-8      	; 0xebe <DIO_enuSet_PinValue+0x8e>
     ec6:	80 95       	com	r24
     ec8:	84 23       	and	r24, r20
     eca:	8c 93       	st	X, r24
			PORTA|=(copy_u8PinValue<<copy_u8PinId);
     ecc:	ab e3       	ldi	r26, 0x3B	; 59
     ece:	b0 e0       	ldi	r27, 0x00	; 0
     ed0:	eb e3       	ldi	r30, 0x3B	; 59
     ed2:	f0 e0       	ldi	r31, 0x00	; 0
     ed4:	80 81       	ld	r24, Z
     ed6:	48 2f       	mov	r20, r24
     ed8:	8c 81       	ldd	r24, Y+4	; 0x04
     eda:	28 2f       	mov	r18, r24
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	8b 81       	ldd	r24, Y+3	; 0x03
     ee0:	88 2f       	mov	r24, r24
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	b9 01       	movw	r22, r18
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <DIO_enuSet_PinValue+0xbc>
     ee8:	66 0f       	add	r22, r22
     eea:	77 1f       	adc	r23, r23
     eec:	8a 95       	dec	r24
     eee:	e2 f7       	brpl	.-8      	; 0xee8 <DIO_enuSet_PinValue+0xb8>
     ef0:	cb 01       	movw	r24, r22
     ef2:	84 2b       	or	r24, r20
     ef4:	8c 93       	st	X, r24
     ef6:	7a c0       	rjmp	.+244    	; 0xfec <DIO_enuSet_PinValue+0x1bc>
			break;
			case(DIO_PORTB):
			PORTB&=~(DIO_BIT_MUSK<<copy_u8PinId);
     ef8:	a8 e3       	ldi	r26, 0x38	; 56
     efa:	b0 e0       	ldi	r27, 0x00	; 0
     efc:	e8 e3       	ldi	r30, 0x38	; 56
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	80 81       	ld	r24, Z
     f02:	48 2f       	mov	r20, r24
     f04:	8b 81       	ldd	r24, Y+3	; 0x03
     f06:	28 2f       	mov	r18, r24
     f08:	30 e0       	ldi	r19, 0x00	; 0
     f0a:	81 e0       	ldi	r24, 0x01	; 1
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	02 c0       	rjmp	.+4      	; 0xf14 <DIO_enuSet_PinValue+0xe4>
     f10:	88 0f       	add	r24, r24
     f12:	99 1f       	adc	r25, r25
     f14:	2a 95       	dec	r18
     f16:	e2 f7       	brpl	.-8      	; 0xf10 <DIO_enuSet_PinValue+0xe0>
     f18:	80 95       	com	r24
     f1a:	84 23       	and	r24, r20
     f1c:	8c 93       	st	X, r24
			PORTB|=(copy_u8PinValue<<copy_u8PinId);
     f1e:	a8 e3       	ldi	r26, 0x38	; 56
     f20:	b0 e0       	ldi	r27, 0x00	; 0
     f22:	e8 e3       	ldi	r30, 0x38	; 56
     f24:	f0 e0       	ldi	r31, 0x00	; 0
     f26:	80 81       	ld	r24, Z
     f28:	48 2f       	mov	r20, r24
     f2a:	8c 81       	ldd	r24, Y+4	; 0x04
     f2c:	28 2f       	mov	r18, r24
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	8b 81       	ldd	r24, Y+3	; 0x03
     f32:	88 2f       	mov	r24, r24
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	b9 01       	movw	r22, r18
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <DIO_enuSet_PinValue+0x10e>
     f3a:	66 0f       	add	r22, r22
     f3c:	77 1f       	adc	r23, r23
     f3e:	8a 95       	dec	r24
     f40:	e2 f7       	brpl	.-8      	; 0xf3a <DIO_enuSet_PinValue+0x10a>
     f42:	cb 01       	movw	r24, r22
     f44:	84 2b       	or	r24, r20
     f46:	8c 93       	st	X, r24
     f48:	51 c0       	rjmp	.+162    	; 0xfec <DIO_enuSet_PinValue+0x1bc>
			break;
			case(DIO_PORTC):
			PORTC&=~(DIO_BIT_MUSK<<copy_u8PinId);
     f4a:	a5 e3       	ldi	r26, 0x35	; 53
     f4c:	b0 e0       	ldi	r27, 0x00	; 0
     f4e:	e5 e3       	ldi	r30, 0x35	; 53
     f50:	f0 e0       	ldi	r31, 0x00	; 0
     f52:	80 81       	ld	r24, Z
     f54:	48 2f       	mov	r20, r24
     f56:	8b 81       	ldd	r24, Y+3	; 0x03
     f58:	28 2f       	mov	r18, r24
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	81 e0       	ldi	r24, 0x01	; 1
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	02 c0       	rjmp	.+4      	; 0xf66 <DIO_enuSet_PinValue+0x136>
     f62:	88 0f       	add	r24, r24
     f64:	99 1f       	adc	r25, r25
     f66:	2a 95       	dec	r18
     f68:	e2 f7       	brpl	.-8      	; 0xf62 <DIO_enuSet_PinValue+0x132>
     f6a:	80 95       	com	r24
     f6c:	84 23       	and	r24, r20
     f6e:	8c 93       	st	X, r24
			PORTC|=(copy_u8PinValue<<copy_u8PinId);
     f70:	a5 e3       	ldi	r26, 0x35	; 53
     f72:	b0 e0       	ldi	r27, 0x00	; 0
     f74:	e5 e3       	ldi	r30, 0x35	; 53
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	80 81       	ld	r24, Z
     f7a:	48 2f       	mov	r20, r24
     f7c:	8c 81       	ldd	r24, Y+4	; 0x04
     f7e:	28 2f       	mov	r18, r24
     f80:	30 e0       	ldi	r19, 0x00	; 0
     f82:	8b 81       	ldd	r24, Y+3	; 0x03
     f84:	88 2f       	mov	r24, r24
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	b9 01       	movw	r22, r18
     f8a:	02 c0       	rjmp	.+4      	; 0xf90 <DIO_enuSet_PinValue+0x160>
     f8c:	66 0f       	add	r22, r22
     f8e:	77 1f       	adc	r23, r23
     f90:	8a 95       	dec	r24
     f92:	e2 f7       	brpl	.-8      	; 0xf8c <DIO_enuSet_PinValue+0x15c>
     f94:	cb 01       	movw	r24, r22
     f96:	84 2b       	or	r24, r20
     f98:	8c 93       	st	X, r24
     f9a:	28 c0       	rjmp	.+80     	; 0xfec <DIO_enuSet_PinValue+0x1bc>
			break;
			case(DIO_PORTD):
			PORTD&=~(DIO_BIT_MUSK<<copy_u8PinId);
     f9c:	a2 e3       	ldi	r26, 0x32	; 50
     f9e:	b0 e0       	ldi	r27, 0x00	; 0
     fa0:	e2 e3       	ldi	r30, 0x32	; 50
     fa2:	f0 e0       	ldi	r31, 0x00	; 0
     fa4:	80 81       	ld	r24, Z
     fa6:	48 2f       	mov	r20, r24
     fa8:	8b 81       	ldd	r24, Y+3	; 0x03
     faa:	28 2f       	mov	r18, r24
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	02 c0       	rjmp	.+4      	; 0xfb8 <DIO_enuSet_PinValue+0x188>
     fb4:	88 0f       	add	r24, r24
     fb6:	99 1f       	adc	r25, r25
     fb8:	2a 95       	dec	r18
     fba:	e2 f7       	brpl	.-8      	; 0xfb4 <DIO_enuSet_PinValue+0x184>
     fbc:	80 95       	com	r24
     fbe:	84 23       	and	r24, r20
     fc0:	8c 93       	st	X, r24
			PORTD|=(copy_u8PinValue<<copy_u8PinId);
     fc2:	a2 e3       	ldi	r26, 0x32	; 50
     fc4:	b0 e0       	ldi	r27, 0x00	; 0
     fc6:	e2 e3       	ldi	r30, 0x32	; 50
     fc8:	f0 e0       	ldi	r31, 0x00	; 0
     fca:	80 81       	ld	r24, Z
     fcc:	48 2f       	mov	r20, r24
     fce:	8c 81       	ldd	r24, Y+4	; 0x04
     fd0:	28 2f       	mov	r18, r24
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	8b 81       	ldd	r24, Y+3	; 0x03
     fd6:	88 2f       	mov	r24, r24
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	b9 01       	movw	r22, r18
     fdc:	02 c0       	rjmp	.+4      	; 0xfe2 <DIO_enuSet_PinValue+0x1b2>
     fde:	66 0f       	add	r22, r22
     fe0:	77 1f       	adc	r23, r23
     fe2:	8a 95       	dec	r24
     fe4:	e2 f7       	brpl	.-8      	; 0xfde <DIO_enuSet_PinValue+0x1ae>
     fe6:	cb 01       	movw	r24, r22
     fe8:	84 2b       	or	r24, r20
     fea:	8c 93       	st	X, r24
			break;
		}
		Local_enuErrorState=ES_OK;
     fec:	19 82       	std	Y+1, r1	; 0x01
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <DIO_enuSet_PinValue+0x1c4>
	}
	else
	{
		Local_enuErrorState=ES_OUT_OF_RANGE;
     ff0:	83 e0       	ldi	r24, 0x03	; 3
     ff2:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_enuErrorState;
     ff4:	89 81       	ldd	r24, Y+1	; 0x01
}
     ff6:	26 96       	adiw	r28, 0x06	; 6
     ff8:	0f b6       	in	r0, 0x3f	; 63
     ffa:	f8 94       	cli
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	0f be       	out	0x3f, r0	; 63
    1000:	cd bf       	out	0x3d, r28	; 61
    1002:	cf 91       	pop	r28
    1004:	df 91       	pop	r29
    1006:	08 95       	ret

00001008 <DIO_enuSet_PinDirection>:

ES_t DIO_enuSet_PinDirection(u8 copy_u8PortId,u8 copy_u8PinId,u8 copy_u8PinValue)

{
    1008:	df 93       	push	r29
    100a:	cf 93       	push	r28
    100c:	00 d0       	rcall	.+0      	; 0x100e <DIO_enuSet_PinDirection+0x6>
    100e:	00 d0       	rcall	.+0      	; 0x1010 <DIO_enuSet_PinDirection+0x8>
    1010:	00 d0       	rcall	.+0      	; 0x1012 <DIO_enuSet_PinDirection+0xa>
    1012:	cd b7       	in	r28, 0x3d	; 61
    1014:	de b7       	in	r29, 0x3e	; 62
    1016:	8a 83       	std	Y+2, r24	; 0x02
    1018:	6b 83       	std	Y+3, r22	; 0x03
    101a:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    101c:	81 e0       	ldi	r24, 0x01	; 1
    101e:	89 83       	std	Y+1, r24	; 0x01
	if(copy_u8PortId <= DIO_PORTD && copy_u8PinId <= DIO_PIN7 && copy_u8PinValue <= OUTPUT)
    1020:	8a 81       	ldd	r24, Y+2	; 0x02
    1022:	84 30       	cpi	r24, 0x04	; 4
    1024:	08 f0       	brcs	.+2      	; 0x1028 <DIO_enuSet_PinDirection+0x20>
    1026:	d0 c0       	rjmp	.+416    	; 0x11c8 <DIO_enuSet_PinDirection+0x1c0>
    1028:	8b 81       	ldd	r24, Y+3	; 0x03
    102a:	88 30       	cpi	r24, 0x08	; 8
    102c:	08 f0       	brcs	.+2      	; 0x1030 <DIO_enuSet_PinDirection+0x28>
    102e:	cc c0       	rjmp	.+408    	; 0x11c8 <DIO_enuSet_PinDirection+0x1c0>
    1030:	8c 81       	ldd	r24, Y+4	; 0x04
    1032:	82 30       	cpi	r24, 0x02	; 2
    1034:	08 f0       	brcs	.+2      	; 0x1038 <DIO_enuSet_PinDirection+0x30>
    1036:	c8 c0       	rjmp	.+400    	; 0x11c8 <DIO_enuSet_PinDirection+0x1c0>
	{
		switch(copy_u8PortId)
    1038:	8a 81       	ldd	r24, Y+2	; 0x02
    103a:	28 2f       	mov	r18, r24
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	3e 83       	std	Y+6, r19	; 0x06
    1040:	2d 83       	std	Y+5, r18	; 0x05
    1042:	6d 81       	ldd	r22, Y+5	; 0x05
    1044:	7e 81       	ldd	r23, Y+6	; 0x06
    1046:	61 30       	cpi	r22, 0x01	; 1
    1048:	71 05       	cpc	r23, r1
    104a:	09 f4       	brne	.+2      	; 0x104e <DIO_enuSet_PinDirection+0x46>
    104c:	41 c0       	rjmp	.+130    	; 0x10d0 <DIO_enuSet_PinDirection+0xc8>
    104e:	8d 81       	ldd	r24, Y+5	; 0x05
    1050:	9e 81       	ldd	r25, Y+6	; 0x06
    1052:	82 30       	cpi	r24, 0x02	; 2
    1054:	91 05       	cpc	r25, r1
    1056:	34 f4       	brge	.+12     	; 0x1064 <DIO_enuSet_PinDirection+0x5c>
    1058:	2d 81       	ldd	r18, Y+5	; 0x05
    105a:	3e 81       	ldd	r19, Y+6	; 0x06
    105c:	21 15       	cp	r18, r1
    105e:	31 05       	cpc	r19, r1
    1060:	71 f0       	breq	.+28     	; 0x107e <DIO_enuSet_PinDirection+0x76>
    1062:	b0 c0       	rjmp	.+352    	; 0x11c4 <DIO_enuSet_PinDirection+0x1bc>
    1064:	6d 81       	ldd	r22, Y+5	; 0x05
    1066:	7e 81       	ldd	r23, Y+6	; 0x06
    1068:	62 30       	cpi	r22, 0x02	; 2
    106a:	71 05       	cpc	r23, r1
    106c:	09 f4       	brne	.+2      	; 0x1070 <DIO_enuSet_PinDirection+0x68>
    106e:	59 c0       	rjmp	.+178    	; 0x1122 <DIO_enuSet_PinDirection+0x11a>
    1070:	8d 81       	ldd	r24, Y+5	; 0x05
    1072:	9e 81       	ldd	r25, Y+6	; 0x06
    1074:	83 30       	cpi	r24, 0x03	; 3
    1076:	91 05       	cpc	r25, r1
    1078:	09 f4       	brne	.+2      	; 0x107c <DIO_enuSet_PinDirection+0x74>
    107a:	7c c0       	rjmp	.+248    	; 0x1174 <DIO_enuSet_PinDirection+0x16c>
    107c:	a3 c0       	rjmp	.+326    	; 0x11c4 <DIO_enuSet_PinDirection+0x1bc>
		{
			case(DIO_PORTA):
				DDRA&=~(DIO_BIT_MUSK<<copy_u8PinId);
    107e:	aa e3       	ldi	r26, 0x3A	; 58
    1080:	b0 e0       	ldi	r27, 0x00	; 0
    1082:	ea e3       	ldi	r30, 0x3A	; 58
    1084:	f0 e0       	ldi	r31, 0x00	; 0
    1086:	80 81       	ld	r24, Z
    1088:	48 2f       	mov	r20, r24
    108a:	8b 81       	ldd	r24, Y+3	; 0x03
    108c:	28 2f       	mov	r18, r24
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	81 e0       	ldi	r24, 0x01	; 1
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	02 c0       	rjmp	.+4      	; 0x109a <DIO_enuSet_PinDirection+0x92>
    1096:	88 0f       	add	r24, r24
    1098:	99 1f       	adc	r25, r25
    109a:	2a 95       	dec	r18
    109c:	e2 f7       	brpl	.-8      	; 0x1096 <DIO_enuSet_PinDirection+0x8e>
    109e:	80 95       	com	r24
    10a0:	84 23       	and	r24, r20
    10a2:	8c 93       	st	X, r24
				DDRA|=(copy_u8PinValue<<copy_u8PinId);
    10a4:	aa e3       	ldi	r26, 0x3A	; 58
    10a6:	b0 e0       	ldi	r27, 0x00	; 0
    10a8:	ea e3       	ldi	r30, 0x3A	; 58
    10aa:	f0 e0       	ldi	r31, 0x00	; 0
    10ac:	80 81       	ld	r24, Z
    10ae:	48 2f       	mov	r20, r24
    10b0:	8c 81       	ldd	r24, Y+4	; 0x04
    10b2:	28 2f       	mov	r18, r24
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	8b 81       	ldd	r24, Y+3	; 0x03
    10b8:	88 2f       	mov	r24, r24
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	b9 01       	movw	r22, r18
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <DIO_enuSet_PinDirection+0xbc>
    10c0:	66 0f       	add	r22, r22
    10c2:	77 1f       	adc	r23, r23
    10c4:	8a 95       	dec	r24
    10c6:	e2 f7       	brpl	.-8      	; 0x10c0 <DIO_enuSet_PinDirection+0xb8>
    10c8:	cb 01       	movw	r24, r22
    10ca:	84 2b       	or	r24, r20
    10cc:	8c 93       	st	X, r24
    10ce:	7a c0       	rjmp	.+244    	; 0x11c4 <DIO_enuSet_PinDirection+0x1bc>
			break;
			case(DIO_PORTB):
				DDRB&=~(DIO_BIT_MUSK<<copy_u8PinId);
    10d0:	a7 e3       	ldi	r26, 0x37	; 55
    10d2:	b0 e0       	ldi	r27, 0x00	; 0
    10d4:	e7 e3       	ldi	r30, 0x37	; 55
    10d6:	f0 e0       	ldi	r31, 0x00	; 0
    10d8:	80 81       	ld	r24, Z
    10da:	48 2f       	mov	r20, r24
    10dc:	8b 81       	ldd	r24, Y+3	; 0x03
    10de:	28 2f       	mov	r18, r24
    10e0:	30 e0       	ldi	r19, 0x00	; 0
    10e2:	81 e0       	ldi	r24, 0x01	; 1
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	02 c0       	rjmp	.+4      	; 0x10ec <DIO_enuSet_PinDirection+0xe4>
    10e8:	88 0f       	add	r24, r24
    10ea:	99 1f       	adc	r25, r25
    10ec:	2a 95       	dec	r18
    10ee:	e2 f7       	brpl	.-8      	; 0x10e8 <DIO_enuSet_PinDirection+0xe0>
    10f0:	80 95       	com	r24
    10f2:	84 23       	and	r24, r20
    10f4:	8c 93       	st	X, r24
				DDRB|=(copy_u8PinValue<<copy_u8PinId);
    10f6:	a7 e3       	ldi	r26, 0x37	; 55
    10f8:	b0 e0       	ldi	r27, 0x00	; 0
    10fa:	e7 e3       	ldi	r30, 0x37	; 55
    10fc:	f0 e0       	ldi	r31, 0x00	; 0
    10fe:	80 81       	ld	r24, Z
    1100:	48 2f       	mov	r20, r24
    1102:	8c 81       	ldd	r24, Y+4	; 0x04
    1104:	28 2f       	mov	r18, r24
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	8b 81       	ldd	r24, Y+3	; 0x03
    110a:	88 2f       	mov	r24, r24
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	b9 01       	movw	r22, r18
    1110:	02 c0       	rjmp	.+4      	; 0x1116 <DIO_enuSet_PinDirection+0x10e>
    1112:	66 0f       	add	r22, r22
    1114:	77 1f       	adc	r23, r23
    1116:	8a 95       	dec	r24
    1118:	e2 f7       	brpl	.-8      	; 0x1112 <DIO_enuSet_PinDirection+0x10a>
    111a:	cb 01       	movw	r24, r22
    111c:	84 2b       	or	r24, r20
    111e:	8c 93       	st	X, r24
    1120:	51 c0       	rjmp	.+162    	; 0x11c4 <DIO_enuSet_PinDirection+0x1bc>
			break;
			case(DIO_PORTC):
				DDRC&=~(DIO_BIT_MUSK<<copy_u8PinId);
    1122:	a4 e3       	ldi	r26, 0x34	; 52
    1124:	b0 e0       	ldi	r27, 0x00	; 0
    1126:	e4 e3       	ldi	r30, 0x34	; 52
    1128:	f0 e0       	ldi	r31, 0x00	; 0
    112a:	80 81       	ld	r24, Z
    112c:	48 2f       	mov	r20, r24
    112e:	8b 81       	ldd	r24, Y+3	; 0x03
    1130:	28 2f       	mov	r18, r24
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	81 e0       	ldi	r24, 0x01	; 1
    1136:	90 e0       	ldi	r25, 0x00	; 0
    1138:	02 c0       	rjmp	.+4      	; 0x113e <DIO_enuSet_PinDirection+0x136>
    113a:	88 0f       	add	r24, r24
    113c:	99 1f       	adc	r25, r25
    113e:	2a 95       	dec	r18
    1140:	e2 f7       	brpl	.-8      	; 0x113a <DIO_enuSet_PinDirection+0x132>
    1142:	80 95       	com	r24
    1144:	84 23       	and	r24, r20
    1146:	8c 93       	st	X, r24
				DDRC|=(copy_u8PinValue<<copy_u8PinId);
    1148:	a4 e3       	ldi	r26, 0x34	; 52
    114a:	b0 e0       	ldi	r27, 0x00	; 0
    114c:	e4 e3       	ldi	r30, 0x34	; 52
    114e:	f0 e0       	ldi	r31, 0x00	; 0
    1150:	80 81       	ld	r24, Z
    1152:	48 2f       	mov	r20, r24
    1154:	8c 81       	ldd	r24, Y+4	; 0x04
    1156:	28 2f       	mov	r18, r24
    1158:	30 e0       	ldi	r19, 0x00	; 0
    115a:	8b 81       	ldd	r24, Y+3	; 0x03
    115c:	88 2f       	mov	r24, r24
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	b9 01       	movw	r22, r18
    1162:	02 c0       	rjmp	.+4      	; 0x1168 <DIO_enuSet_PinDirection+0x160>
    1164:	66 0f       	add	r22, r22
    1166:	77 1f       	adc	r23, r23
    1168:	8a 95       	dec	r24
    116a:	e2 f7       	brpl	.-8      	; 0x1164 <DIO_enuSet_PinDirection+0x15c>
    116c:	cb 01       	movw	r24, r22
    116e:	84 2b       	or	r24, r20
    1170:	8c 93       	st	X, r24
    1172:	28 c0       	rjmp	.+80     	; 0x11c4 <DIO_enuSet_PinDirection+0x1bc>
			break;
			case(DIO_PORTD):
				DDRD&=~(DIO_BIT_MUSK<<copy_u8PinId);
    1174:	a1 e3       	ldi	r26, 0x31	; 49
    1176:	b0 e0       	ldi	r27, 0x00	; 0
    1178:	e1 e3       	ldi	r30, 0x31	; 49
    117a:	f0 e0       	ldi	r31, 0x00	; 0
    117c:	80 81       	ld	r24, Z
    117e:	48 2f       	mov	r20, r24
    1180:	8b 81       	ldd	r24, Y+3	; 0x03
    1182:	28 2f       	mov	r18, r24
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	81 e0       	ldi	r24, 0x01	; 1
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	02 c0       	rjmp	.+4      	; 0x1190 <DIO_enuSet_PinDirection+0x188>
    118c:	88 0f       	add	r24, r24
    118e:	99 1f       	adc	r25, r25
    1190:	2a 95       	dec	r18
    1192:	e2 f7       	brpl	.-8      	; 0x118c <DIO_enuSet_PinDirection+0x184>
    1194:	80 95       	com	r24
    1196:	84 23       	and	r24, r20
    1198:	8c 93       	st	X, r24
				DDRD|=(copy_u8PinValue<<copy_u8PinId);
    119a:	a1 e3       	ldi	r26, 0x31	; 49
    119c:	b0 e0       	ldi	r27, 0x00	; 0
    119e:	e1 e3       	ldi	r30, 0x31	; 49
    11a0:	f0 e0       	ldi	r31, 0x00	; 0
    11a2:	80 81       	ld	r24, Z
    11a4:	48 2f       	mov	r20, r24
    11a6:	8c 81       	ldd	r24, Y+4	; 0x04
    11a8:	28 2f       	mov	r18, r24
    11aa:	30 e0       	ldi	r19, 0x00	; 0
    11ac:	8b 81       	ldd	r24, Y+3	; 0x03
    11ae:	88 2f       	mov	r24, r24
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	b9 01       	movw	r22, r18
    11b4:	02 c0       	rjmp	.+4      	; 0x11ba <DIO_enuSet_PinDirection+0x1b2>
    11b6:	66 0f       	add	r22, r22
    11b8:	77 1f       	adc	r23, r23
    11ba:	8a 95       	dec	r24
    11bc:	e2 f7       	brpl	.-8      	; 0x11b6 <DIO_enuSet_PinDirection+0x1ae>
    11be:	cb 01       	movw	r24, r22
    11c0:	84 2b       	or	r24, r20
    11c2:	8c 93       	st	X, r24
			break;
		}
		Local_enuErrorState=ES_OK;
    11c4:	19 82       	std	Y+1, r1	; 0x01
    11c6:	02 c0       	rjmp	.+4      	; 0x11cc <DIO_enuSet_PinDirection+0x1c4>
	}
	else
	{
		Local_enuErrorState=ES_OUT_OF_RANGE;
    11c8:	83 e0       	ldi	r24, 0x03	; 3
    11ca:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_enuErrorState;
    11cc:	89 81       	ldd	r24, Y+1	; 0x01
}
    11ce:	26 96       	adiw	r28, 0x06	; 6
    11d0:	0f b6       	in	r0, 0x3f	; 63
    11d2:	f8 94       	cli
    11d4:	de bf       	out	0x3e, r29	; 62
    11d6:	0f be       	out	0x3f, r0	; 63
    11d8:	cd bf       	out	0x3d, r28	; 61
    11da:	cf 91       	pop	r28
    11dc:	df 91       	pop	r29
    11de:	08 95       	ret

000011e0 <DIO_enuget_PinValue>:

ES_t DIO_enuget_PinValue(u8 copy_u8PortId,u8 copy_u8PinId,u8 *copy_pu8PinValue)

{
    11e0:	df 93       	push	r29
    11e2:	cf 93       	push	r28
    11e4:	cd b7       	in	r28, 0x3d	; 61
    11e6:	de b7       	in	r29, 0x3e	; 62
    11e8:	27 97       	sbiw	r28, 0x07	; 7
    11ea:	0f b6       	in	r0, 0x3f	; 63
    11ec:	f8 94       	cli
    11ee:	de bf       	out	0x3e, r29	; 62
    11f0:	0f be       	out	0x3f, r0	; 63
    11f2:	cd bf       	out	0x3d, r28	; 61
    11f4:	8a 83       	std	Y+2, r24	; 0x02
    11f6:	6b 83       	std	Y+3, r22	; 0x03
    11f8:	5d 83       	std	Y+5, r21	; 0x05
    11fa:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    11fc:	81 e0       	ldi	r24, 0x01	; 1
    11fe:	89 83       	std	Y+1, r24	; 0x01
	if(copy_pu8PinValue==NULL){
    1200:	8c 81       	ldd	r24, Y+4	; 0x04
    1202:	9d 81       	ldd	r25, Y+5	; 0x05
    1204:	00 97       	sbiw	r24, 0x00	; 0
    1206:	09 f0       	breq	.+2      	; 0x120a <DIO_enuget_PinValue+0x2a>
    1208:	7d c0       	rjmp	.+250    	; 0x1304 <DIO_enuget_PinValue+0x124>
	if(copy_u8PortId <= DIO_PORTD && copy_u8PinId <= DIO_PIN7 )
    120a:	8a 81       	ldd	r24, Y+2	; 0x02
    120c:	84 30       	cpi	r24, 0x04	; 4
    120e:	08 f0       	brcs	.+2      	; 0x1212 <DIO_enuget_PinValue+0x32>
    1210:	76 c0       	rjmp	.+236    	; 0x12fe <DIO_enuget_PinValue+0x11e>
    1212:	8b 81       	ldd	r24, Y+3	; 0x03
    1214:	88 30       	cpi	r24, 0x08	; 8
    1216:	08 f0       	brcs	.+2      	; 0x121a <DIO_enuget_PinValue+0x3a>
    1218:	72 c0       	rjmp	.+228    	; 0x12fe <DIO_enuget_PinValue+0x11e>
		{
		  switch(copy_u8PortId)
    121a:	8a 81       	ldd	r24, Y+2	; 0x02
    121c:	28 2f       	mov	r18, r24
    121e:	30 e0       	ldi	r19, 0x00	; 0
    1220:	3f 83       	std	Y+7, r19	; 0x07
    1222:	2e 83       	std	Y+6, r18	; 0x06
    1224:	4e 81       	ldd	r20, Y+6	; 0x06
    1226:	5f 81       	ldd	r21, Y+7	; 0x07
    1228:	41 30       	cpi	r20, 0x01	; 1
    122a:	51 05       	cpc	r21, r1
    122c:	59 f1       	breq	.+86     	; 0x1284 <DIO_enuget_PinValue+0xa4>
    122e:	8e 81       	ldd	r24, Y+6	; 0x06
    1230:	9f 81       	ldd	r25, Y+7	; 0x07
    1232:	82 30       	cpi	r24, 0x02	; 2
    1234:	91 05       	cpc	r25, r1
    1236:	34 f4       	brge	.+12     	; 0x1244 <DIO_enuget_PinValue+0x64>
    1238:	2e 81       	ldd	r18, Y+6	; 0x06
    123a:	3f 81       	ldd	r19, Y+7	; 0x07
    123c:	21 15       	cp	r18, r1
    123e:	31 05       	cpc	r19, r1
    1240:	69 f0       	breq	.+26     	; 0x125c <DIO_enuget_PinValue+0x7c>
    1242:	5b c0       	rjmp	.+182    	; 0x12fa <DIO_enuget_PinValue+0x11a>
    1244:	4e 81       	ldd	r20, Y+6	; 0x06
    1246:	5f 81       	ldd	r21, Y+7	; 0x07
    1248:	42 30       	cpi	r20, 0x02	; 2
    124a:	51 05       	cpc	r21, r1
    124c:	79 f1       	breq	.+94     	; 0x12ac <DIO_enuget_PinValue+0xcc>
    124e:	8e 81       	ldd	r24, Y+6	; 0x06
    1250:	9f 81       	ldd	r25, Y+7	; 0x07
    1252:	83 30       	cpi	r24, 0x03	; 3
    1254:	91 05       	cpc	r25, r1
    1256:	09 f4       	brne	.+2      	; 0x125a <DIO_enuget_PinValue+0x7a>
    1258:	3d c0       	rjmp	.+122    	; 0x12d4 <DIO_enuget_PinValue+0xf4>
    125a:	4f c0       	rjmp	.+158    	; 0x12fa <DIO_enuget_PinValue+0x11a>
		{
		 case(DIO_PORTA):
			*copy_pu8PinValue=((PINA>>copy_u8PinId)&DIO_BIT_MUSK);
    125c:	e9 e3       	ldi	r30, 0x39	; 57
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	80 81       	ld	r24, Z
    1262:	28 2f       	mov	r18, r24
    1264:	30 e0       	ldi	r19, 0x00	; 0
    1266:	8b 81       	ldd	r24, Y+3	; 0x03
    1268:	88 2f       	mov	r24, r24
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	a9 01       	movw	r20, r18
    126e:	02 c0       	rjmp	.+4      	; 0x1274 <DIO_enuget_PinValue+0x94>
    1270:	55 95       	asr	r21
    1272:	47 95       	ror	r20
    1274:	8a 95       	dec	r24
    1276:	e2 f7       	brpl	.-8      	; 0x1270 <DIO_enuget_PinValue+0x90>
    1278:	ca 01       	movw	r24, r20
    127a:	81 70       	andi	r24, 0x01	; 1
    127c:	ec 81       	ldd	r30, Y+4	; 0x04
    127e:	fd 81       	ldd	r31, Y+5	; 0x05
    1280:	80 83       	st	Z, r24
    1282:	3b c0       	rjmp	.+118    	; 0x12fa <DIO_enuget_PinValue+0x11a>
		    break;
		 case(DIO_PORTB):
			*copy_pu8PinValue=((PINB>>copy_u8PinId)&DIO_BIT_MUSK);
    1284:	e6 e3       	ldi	r30, 0x36	; 54
    1286:	f0 e0       	ldi	r31, 0x00	; 0
    1288:	80 81       	ld	r24, Z
    128a:	28 2f       	mov	r18, r24
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	8b 81       	ldd	r24, Y+3	; 0x03
    1290:	88 2f       	mov	r24, r24
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	a9 01       	movw	r20, r18
    1296:	02 c0       	rjmp	.+4      	; 0x129c <DIO_enuget_PinValue+0xbc>
    1298:	55 95       	asr	r21
    129a:	47 95       	ror	r20
    129c:	8a 95       	dec	r24
    129e:	e2 f7       	brpl	.-8      	; 0x1298 <DIO_enuget_PinValue+0xb8>
    12a0:	ca 01       	movw	r24, r20
    12a2:	81 70       	andi	r24, 0x01	; 1
    12a4:	ec 81       	ldd	r30, Y+4	; 0x04
    12a6:	fd 81       	ldd	r31, Y+5	; 0x05
    12a8:	80 83       	st	Z, r24
    12aa:	27 c0       	rjmp	.+78     	; 0x12fa <DIO_enuget_PinValue+0x11a>
		    break;
		 case(DIO_PORTC):
			*copy_pu8PinValue=((PINC>>copy_u8PinId)&DIO_BIT_MUSK);
    12ac:	e3 e3       	ldi	r30, 0x33	; 51
    12ae:	f0 e0       	ldi	r31, 0x00	; 0
    12b0:	80 81       	ld	r24, Z
    12b2:	28 2f       	mov	r18, r24
    12b4:	30 e0       	ldi	r19, 0x00	; 0
    12b6:	8b 81       	ldd	r24, Y+3	; 0x03
    12b8:	88 2f       	mov	r24, r24
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	a9 01       	movw	r20, r18
    12be:	02 c0       	rjmp	.+4      	; 0x12c4 <DIO_enuget_PinValue+0xe4>
    12c0:	55 95       	asr	r21
    12c2:	47 95       	ror	r20
    12c4:	8a 95       	dec	r24
    12c6:	e2 f7       	brpl	.-8      	; 0x12c0 <DIO_enuget_PinValue+0xe0>
    12c8:	ca 01       	movw	r24, r20
    12ca:	81 70       	andi	r24, 0x01	; 1
    12cc:	ec 81       	ldd	r30, Y+4	; 0x04
    12ce:	fd 81       	ldd	r31, Y+5	; 0x05
    12d0:	80 83       	st	Z, r24
    12d2:	13 c0       	rjmp	.+38     	; 0x12fa <DIO_enuget_PinValue+0x11a>
			break;
		 case(DIO_PORTD):
			*copy_pu8PinValue=((PIND>>copy_u8PinId)&DIO_BIT_MUSK);
    12d4:	e0 e3       	ldi	r30, 0x30	; 48
    12d6:	f0 e0       	ldi	r31, 0x00	; 0
    12d8:	80 81       	ld	r24, Z
    12da:	28 2f       	mov	r18, r24
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	8b 81       	ldd	r24, Y+3	; 0x03
    12e0:	88 2f       	mov	r24, r24
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	a9 01       	movw	r20, r18
    12e6:	02 c0       	rjmp	.+4      	; 0x12ec <DIO_enuget_PinValue+0x10c>
    12e8:	55 95       	asr	r21
    12ea:	47 95       	ror	r20
    12ec:	8a 95       	dec	r24
    12ee:	e2 f7       	brpl	.-8      	; 0x12e8 <DIO_enuget_PinValue+0x108>
    12f0:	ca 01       	movw	r24, r20
    12f2:	81 70       	andi	r24, 0x01	; 1
    12f4:	ec 81       	ldd	r30, Y+4	; 0x04
    12f6:	fd 81       	ldd	r31, Y+5	; 0x05
    12f8:	80 83       	st	Z, r24
			break;
		}
		Local_enuErrorState=ES_OK;
    12fa:	19 82       	std	Y+1, r1	; 0x01
    12fc:	05 c0       	rjmp	.+10     	; 0x1308 <DIO_enuget_PinValue+0x128>
		}
	else
		{
			Local_enuErrorState=ES_OUT_OF_RANGE;
    12fe:	83 e0       	ldi	r24, 0x03	; 3
    1300:	89 83       	std	Y+1, r24	; 0x01
    1302:	02 c0       	rjmp	.+4      	; 0x1308 <DIO_enuget_PinValue+0x128>
		}
	}
	else
	{
		Local_enuErrorState=ES_NULL_POINTER;
    1304:	82 e0       	ldi	r24, 0x02	; 2
    1306:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_enuErrorState;
    1308:	89 81       	ldd	r24, Y+1	; 0x01
}
    130a:	27 96       	adiw	r28, 0x07	; 7
    130c:	0f b6       	in	r0, 0x3f	; 63
    130e:	f8 94       	cli
    1310:	de bf       	out	0x3e, r29	; 62
    1312:	0f be       	out	0x3f, r0	; 63
    1314:	cd bf       	out	0x3d, r28	; 61
    1316:	cf 91       	pop	r28
    1318:	df 91       	pop	r29
    131a:	08 95       	ret

0000131c <DIO_enuToggle_PinValue>:
ES_t DIO_enuToggle_PinValue(u8 copy_u8PortId,u8 copy_u8PinId)
{
    131c:	df 93       	push	r29
    131e:	cf 93       	push	r28
    1320:	00 d0       	rcall	.+0      	; 0x1322 <DIO_enuToggle_PinValue+0x6>
    1322:	00 d0       	rcall	.+0      	; 0x1324 <DIO_enuToggle_PinValue+0x8>
    1324:	0f 92       	push	r0
    1326:	cd b7       	in	r28, 0x3d	; 61
    1328:	de b7       	in	r29, 0x3e	; 62
    132a:	8a 83       	std	Y+2, r24	; 0x02
    132c:	6b 83       	std	Y+3, r22	; 0x03

	ES_t Local_enuErrorState = ES_NOK;
    132e:	81 e0       	ldi	r24, 0x01	; 1
    1330:	89 83       	std	Y+1, r24	; 0x01
	if(copy_u8PortId <= DIO_PORTD && copy_u8PinId <= DIO_PIN7 )
    1332:	8a 81       	ldd	r24, Y+2	; 0x02
    1334:	84 30       	cpi	r24, 0x04	; 4
    1336:	08 f0       	brcs	.+2      	; 0x133a <DIO_enuToggle_PinValue+0x1e>
    1338:	74 c0       	rjmp	.+232    	; 0x1422 <DIO_enuToggle_PinValue+0x106>
    133a:	8b 81       	ldd	r24, Y+3	; 0x03
    133c:	88 30       	cpi	r24, 0x08	; 8
    133e:	08 f0       	brcs	.+2      	; 0x1342 <DIO_enuToggle_PinValue+0x26>
    1340:	70 c0       	rjmp	.+224    	; 0x1422 <DIO_enuToggle_PinValue+0x106>
	{
		switch(copy_u8PortId)
    1342:	8a 81       	ldd	r24, Y+2	; 0x02
    1344:	28 2f       	mov	r18, r24
    1346:	30 e0       	ldi	r19, 0x00	; 0
    1348:	3d 83       	std	Y+5, r19	; 0x05
    134a:	2c 83       	std	Y+4, r18	; 0x04
    134c:	8c 81       	ldd	r24, Y+4	; 0x04
    134e:	9d 81       	ldd	r25, Y+5	; 0x05
    1350:	81 30       	cpi	r24, 0x01	; 1
    1352:	91 05       	cpc	r25, r1
    1354:	49 f1       	breq	.+82     	; 0x13a8 <DIO_enuToggle_PinValue+0x8c>
    1356:	2c 81       	ldd	r18, Y+4	; 0x04
    1358:	3d 81       	ldd	r19, Y+5	; 0x05
    135a:	22 30       	cpi	r18, 0x02	; 2
    135c:	31 05       	cpc	r19, r1
    135e:	2c f4       	brge	.+10     	; 0x136a <DIO_enuToggle_PinValue+0x4e>
    1360:	8c 81       	ldd	r24, Y+4	; 0x04
    1362:	9d 81       	ldd	r25, Y+5	; 0x05
    1364:	00 97       	sbiw	r24, 0x00	; 0
    1366:	61 f0       	breq	.+24     	; 0x1380 <DIO_enuToggle_PinValue+0x64>
    1368:	5a c0       	rjmp	.+180    	; 0x141e <DIO_enuToggle_PinValue+0x102>
    136a:	2c 81       	ldd	r18, Y+4	; 0x04
    136c:	3d 81       	ldd	r19, Y+5	; 0x05
    136e:	22 30       	cpi	r18, 0x02	; 2
    1370:	31 05       	cpc	r19, r1
    1372:	71 f1       	breq	.+92     	; 0x13d0 <DIO_enuToggle_PinValue+0xb4>
    1374:	8c 81       	ldd	r24, Y+4	; 0x04
    1376:	9d 81       	ldd	r25, Y+5	; 0x05
    1378:	83 30       	cpi	r24, 0x03	; 3
    137a:	91 05       	cpc	r25, r1
    137c:	e9 f1       	breq	.+122    	; 0x13f8 <DIO_enuToggle_PinValue+0xdc>
    137e:	4f c0       	rjmp	.+158    	; 0x141e <DIO_enuToggle_PinValue+0x102>
		{
		case(DIO_PORTA):
		  PORTA^=(DIO_BIT_MUSK<<copy_u8PinId);
    1380:	ab e3       	ldi	r26, 0x3B	; 59
    1382:	b0 e0       	ldi	r27, 0x00	; 0
    1384:	eb e3       	ldi	r30, 0x3B	; 59
    1386:	f0 e0       	ldi	r31, 0x00	; 0
    1388:	80 81       	ld	r24, Z
    138a:	48 2f       	mov	r20, r24
    138c:	8b 81       	ldd	r24, Y+3	; 0x03
    138e:	28 2f       	mov	r18, r24
    1390:	30 e0       	ldi	r19, 0x00	; 0
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	02 2e       	mov	r0, r18
    1398:	02 c0       	rjmp	.+4      	; 0x139e <DIO_enuToggle_PinValue+0x82>
    139a:	88 0f       	add	r24, r24
    139c:	99 1f       	adc	r25, r25
    139e:	0a 94       	dec	r0
    13a0:	e2 f7       	brpl	.-8      	; 0x139a <DIO_enuToggle_PinValue+0x7e>
    13a2:	84 27       	eor	r24, r20
    13a4:	8c 93       	st	X, r24
    13a6:	3b c0       	rjmp	.+118    	; 0x141e <DIO_enuToggle_PinValue+0x102>
		  break;
		case(DIO_PORTB):
		 PORTB^=(DIO_BIT_MUSK<<copy_u8PinId);
    13a8:	a8 e3       	ldi	r26, 0x38	; 56
    13aa:	b0 e0       	ldi	r27, 0x00	; 0
    13ac:	e8 e3       	ldi	r30, 0x38	; 56
    13ae:	f0 e0       	ldi	r31, 0x00	; 0
    13b0:	80 81       	ld	r24, Z
    13b2:	48 2f       	mov	r20, r24
    13b4:	8b 81       	ldd	r24, Y+3	; 0x03
    13b6:	28 2f       	mov	r18, r24
    13b8:	30 e0       	ldi	r19, 0x00	; 0
    13ba:	81 e0       	ldi	r24, 0x01	; 1
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	02 2e       	mov	r0, r18
    13c0:	02 c0       	rjmp	.+4      	; 0x13c6 <DIO_enuToggle_PinValue+0xaa>
    13c2:	88 0f       	add	r24, r24
    13c4:	99 1f       	adc	r25, r25
    13c6:	0a 94       	dec	r0
    13c8:	e2 f7       	brpl	.-8      	; 0x13c2 <DIO_enuToggle_PinValue+0xa6>
    13ca:	84 27       	eor	r24, r20
    13cc:	8c 93       	st	X, r24
    13ce:	27 c0       	rjmp	.+78     	; 0x141e <DIO_enuToggle_PinValue+0x102>
		  break;
		case(DIO_PORTC):
		 PORTC^=(DIO_BIT_MUSK<<copy_u8PinId);
    13d0:	a5 e3       	ldi	r26, 0x35	; 53
    13d2:	b0 e0       	ldi	r27, 0x00	; 0
    13d4:	e5 e3       	ldi	r30, 0x35	; 53
    13d6:	f0 e0       	ldi	r31, 0x00	; 0
    13d8:	80 81       	ld	r24, Z
    13da:	48 2f       	mov	r20, r24
    13dc:	8b 81       	ldd	r24, Y+3	; 0x03
    13de:	28 2f       	mov	r18, r24
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	81 e0       	ldi	r24, 0x01	; 1
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	02 2e       	mov	r0, r18
    13e8:	02 c0       	rjmp	.+4      	; 0x13ee <DIO_enuToggle_PinValue+0xd2>
    13ea:	88 0f       	add	r24, r24
    13ec:	99 1f       	adc	r25, r25
    13ee:	0a 94       	dec	r0
    13f0:	e2 f7       	brpl	.-8      	; 0x13ea <DIO_enuToggle_PinValue+0xce>
    13f2:	84 27       	eor	r24, r20
    13f4:	8c 93       	st	X, r24
    13f6:	13 c0       	rjmp	.+38     	; 0x141e <DIO_enuToggle_PinValue+0x102>
		  break;
		case(DIO_PORTD):
		 PORTD^=(DIO_BIT_MUSK<<copy_u8PinId);
    13f8:	a2 e3       	ldi	r26, 0x32	; 50
    13fa:	b0 e0       	ldi	r27, 0x00	; 0
    13fc:	e2 e3       	ldi	r30, 0x32	; 50
    13fe:	f0 e0       	ldi	r31, 0x00	; 0
    1400:	80 81       	ld	r24, Z
    1402:	48 2f       	mov	r20, r24
    1404:	8b 81       	ldd	r24, Y+3	; 0x03
    1406:	28 2f       	mov	r18, r24
    1408:	30 e0       	ldi	r19, 0x00	; 0
    140a:	81 e0       	ldi	r24, 0x01	; 1
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	02 2e       	mov	r0, r18
    1410:	02 c0       	rjmp	.+4      	; 0x1416 <DIO_enuToggle_PinValue+0xfa>
    1412:	88 0f       	add	r24, r24
    1414:	99 1f       	adc	r25, r25
    1416:	0a 94       	dec	r0
    1418:	e2 f7       	brpl	.-8      	; 0x1412 <DIO_enuToggle_PinValue+0xf6>
    141a:	84 27       	eor	r24, r20
    141c:	8c 93       	st	X, r24
		  break;
		}
		Local_enuErrorState=ES_OK;
    141e:	19 82       	std	Y+1, r1	; 0x01
    1420:	02 c0       	rjmp	.+4      	; 0x1426 <DIO_enuToggle_PinValue+0x10a>
	}
	else
	{
		Local_enuErrorState=ES_OUT_OF_RANGE;
    1422:	83 e0       	ldi	r24, 0x03	; 3
    1424:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_enuErrorState;
    1426:	89 81       	ldd	r24, Y+1	; 0x01
}
    1428:	0f 90       	pop	r0
    142a:	0f 90       	pop	r0
    142c:	0f 90       	pop	r0
    142e:	0f 90       	pop	r0
    1430:	0f 90       	pop	r0
    1432:	cf 91       	pop	r28
    1434:	df 91       	pop	r29
    1436:	08 95       	ret

00001438 <S_Segment_enuInit>:
#include "S_Segment_config.h"
#include "S_Segment_priv.h"

extern SS_t S_SEGMENT_AstrSegconfig[SS_Num];
ES_t S_Segment_enuInit(SS_t * Copy_pstrSegConfig)
{
    1438:	df 93       	push	r29
    143a:	cf 93       	push	r28
    143c:	cd b7       	in	r28, 0x3d	; 61
    143e:	de b7       	in	r29, 0x3e	; 62
    1440:	2a 97       	sbiw	r28, 0x0a	; 10
    1442:	0f b6       	in	r0, 0x3f	; 63
    1444:	f8 94       	cli
    1446:	de bf       	out	0x3e, r29	; 62
    1448:	0f be       	out	0x3f, r0	; 63
    144a:	cd bf       	out	0x3d, r28	; 61
    144c:	99 87       	std	Y+9, r25	; 0x09
    144e:	88 87       	std	Y+8, r24	; 0x08
	ES_t Local_enuErrorState=ES_NOK;
    1450:	81 e0       	ldi	r24, 0x01	; 1
    1452:	8f 83       	std	Y+7, r24	; 0x07
	if(Copy_pstrSegConfig != NULL)
    1454:	88 85       	ldd	r24, Y+8	; 0x08
    1456:	99 85       	ldd	r25, Y+9	; 0x09
    1458:	00 97       	sbiw	r24, 0x00	; 0
    145a:	09 f4       	brne	.+2      	; 0x145e <S_Segment_enuInit+0x26>
    145c:	38 c3       	rjmp	.+1648   	; 0x1ace <S_Segment_enuInit+0x696>
	{
		u8 Local_u8Iter=0;
    145e:	1e 82       	std	Y+6, r1	; 0x06
		u8 Local_u8IterLoop=0;
    1460:	1d 82       	std	Y+5, r1	; 0x05
		u32 Local_u32CheckError;
		for(Local_u8Iter=0;Local_u8Iter<SS_Num;Local_u8Iter++)
    1462:	1e 82       	std	Y+6, r1	; 0x06
    1464:	2f c3       	rjmp	.+1630   	; 0x1ac4 <S_Segment_enuInit+0x68c>
		{
			Local_u32CheckError=(DIO_enuSet_PinDirection(Copy_pstrSegConfig [Local_u8Iter].SEG_APORT ,Copy_pstrSegConfig[Local_u8Iter].SEG_APIN , DIO_u8OUTPUT));
    1466:	8e 81       	ldd	r24, Y+6	; 0x06
    1468:	48 2f       	mov	r20, r24
    146a:	50 e0       	ldi	r21, 0x00	; 0
    146c:	ca 01       	movw	r24, r20
    146e:	88 0f       	add	r24, r24
    1470:	99 1f       	adc	r25, r25
    1472:	9c 01       	movw	r18, r24
    1474:	22 0f       	add	r18, r18
    1476:	33 1f       	adc	r19, r19
    1478:	22 0f       	add	r18, r18
    147a:	33 1f       	adc	r19, r19
    147c:	22 0f       	add	r18, r18
    147e:	33 1f       	adc	r19, r19
    1480:	82 0f       	add	r24, r18
    1482:	93 1f       	adc	r25, r19
    1484:	9c 01       	movw	r18, r24
    1486:	24 0f       	add	r18, r20
    1488:	35 1f       	adc	r19, r21
    148a:	88 85       	ldd	r24, Y+8	; 0x08
    148c:	99 85       	ldd	r25, Y+9	; 0x09
    148e:	fc 01       	movw	r30, r24
    1490:	e2 0f       	add	r30, r18
    1492:	f3 1f       	adc	r31, r19
    1494:	60 81       	ld	r22, Z
    1496:	8e 81       	ldd	r24, Y+6	; 0x06
    1498:	48 2f       	mov	r20, r24
    149a:	50 e0       	ldi	r21, 0x00	; 0
    149c:	ca 01       	movw	r24, r20
    149e:	88 0f       	add	r24, r24
    14a0:	99 1f       	adc	r25, r25
    14a2:	9c 01       	movw	r18, r24
    14a4:	22 0f       	add	r18, r18
    14a6:	33 1f       	adc	r19, r19
    14a8:	22 0f       	add	r18, r18
    14aa:	33 1f       	adc	r19, r19
    14ac:	22 0f       	add	r18, r18
    14ae:	33 1f       	adc	r19, r19
    14b0:	82 0f       	add	r24, r18
    14b2:	93 1f       	adc	r25, r19
    14b4:	9c 01       	movw	r18, r24
    14b6:	24 0f       	add	r18, r20
    14b8:	35 1f       	adc	r19, r21
    14ba:	88 85       	ldd	r24, Y+8	; 0x08
    14bc:	99 85       	ldd	r25, Y+9	; 0x09
    14be:	fc 01       	movw	r30, r24
    14c0:	e2 0f       	add	r30, r18
    14c2:	f3 1f       	adc	r31, r19
    14c4:	91 81       	ldd	r25, Z+1	; 0x01
    14c6:	86 2f       	mov	r24, r22
    14c8:	69 2f       	mov	r22, r25
    14ca:	41 e0       	ldi	r20, 0x01	; 1
    14cc:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO_enuSet_PinDirection>
    14d0:	88 2f       	mov	r24, r24
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	a0 e0       	ldi	r26, 0x00	; 0
    14d6:	b0 e0       	ldi	r27, 0x00	; 0
    14d8:	89 83       	std	Y+1, r24	; 0x01
    14da:	9a 83       	std	Y+2, r25	; 0x02
    14dc:	ab 83       	std	Y+3, r26	; 0x03
    14de:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=(DIO_enuSet_PinDirection(Copy_pstrSegConfig[Local_u8Iter].SEG_BPORT ,Copy_pstrSegConfig[Local_u8Iter].SEG_BPIN, DIO_u8OUTPUT)<<3);
    14e0:	8e 81       	ldd	r24, Y+6	; 0x06
    14e2:	48 2f       	mov	r20, r24
    14e4:	50 e0       	ldi	r21, 0x00	; 0
    14e6:	ca 01       	movw	r24, r20
    14e8:	88 0f       	add	r24, r24
    14ea:	99 1f       	adc	r25, r25
    14ec:	9c 01       	movw	r18, r24
    14ee:	22 0f       	add	r18, r18
    14f0:	33 1f       	adc	r19, r19
    14f2:	22 0f       	add	r18, r18
    14f4:	33 1f       	adc	r19, r19
    14f6:	22 0f       	add	r18, r18
    14f8:	33 1f       	adc	r19, r19
    14fa:	82 0f       	add	r24, r18
    14fc:	93 1f       	adc	r25, r19
    14fe:	9c 01       	movw	r18, r24
    1500:	24 0f       	add	r18, r20
    1502:	35 1f       	adc	r19, r21
    1504:	88 85       	ldd	r24, Y+8	; 0x08
    1506:	99 85       	ldd	r25, Y+9	; 0x09
    1508:	fc 01       	movw	r30, r24
    150a:	e2 0f       	add	r30, r18
    150c:	f3 1f       	adc	r31, r19
    150e:	62 81       	ldd	r22, Z+2	; 0x02
    1510:	8e 81       	ldd	r24, Y+6	; 0x06
    1512:	48 2f       	mov	r20, r24
    1514:	50 e0       	ldi	r21, 0x00	; 0
    1516:	ca 01       	movw	r24, r20
    1518:	88 0f       	add	r24, r24
    151a:	99 1f       	adc	r25, r25
    151c:	9c 01       	movw	r18, r24
    151e:	22 0f       	add	r18, r18
    1520:	33 1f       	adc	r19, r19
    1522:	22 0f       	add	r18, r18
    1524:	33 1f       	adc	r19, r19
    1526:	22 0f       	add	r18, r18
    1528:	33 1f       	adc	r19, r19
    152a:	82 0f       	add	r24, r18
    152c:	93 1f       	adc	r25, r19
    152e:	9c 01       	movw	r18, r24
    1530:	24 0f       	add	r18, r20
    1532:	35 1f       	adc	r19, r21
    1534:	88 85       	ldd	r24, Y+8	; 0x08
    1536:	99 85       	ldd	r25, Y+9	; 0x09
    1538:	fc 01       	movw	r30, r24
    153a:	e2 0f       	add	r30, r18
    153c:	f3 1f       	adc	r31, r19
    153e:	93 81       	ldd	r25, Z+3	; 0x03
    1540:	86 2f       	mov	r24, r22
    1542:	69 2f       	mov	r22, r25
    1544:	41 e0       	ldi	r20, 0x01	; 1
    1546:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO_enuSet_PinDirection>
    154a:	88 2f       	mov	r24, r24
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	88 0f       	add	r24, r24
    1550:	99 1f       	adc	r25, r25
    1552:	88 0f       	add	r24, r24
    1554:	99 1f       	adc	r25, r25
    1556:	88 0f       	add	r24, r24
    1558:	99 1f       	adc	r25, r25
    155a:	9c 01       	movw	r18, r24
    155c:	44 27       	eor	r20, r20
    155e:	37 fd       	sbrc	r19, 7
    1560:	40 95       	com	r20
    1562:	54 2f       	mov	r21, r20
    1564:	89 81       	ldd	r24, Y+1	; 0x01
    1566:	9a 81       	ldd	r25, Y+2	; 0x02
    1568:	ab 81       	ldd	r26, Y+3	; 0x03
    156a:	bc 81       	ldd	r27, Y+4	; 0x04
    156c:	82 2b       	or	r24, r18
    156e:	93 2b       	or	r25, r19
    1570:	a4 2b       	or	r26, r20
    1572:	b5 2b       	or	r27, r21
    1574:	89 83       	std	Y+1, r24	; 0x01
    1576:	9a 83       	std	Y+2, r25	; 0x02
    1578:	ab 83       	std	Y+3, r26	; 0x03
    157a:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=(DIO_enuSet_PinDirection(Copy_pstrSegConfig[Local_u8Iter].SEG_CPORT ,Copy_pstrSegConfig[Local_u8Iter].SEG_CPIN, DIO_u8OUTPUT)<<6);
    157c:	8e 81       	ldd	r24, Y+6	; 0x06
    157e:	48 2f       	mov	r20, r24
    1580:	50 e0       	ldi	r21, 0x00	; 0
    1582:	ca 01       	movw	r24, r20
    1584:	88 0f       	add	r24, r24
    1586:	99 1f       	adc	r25, r25
    1588:	9c 01       	movw	r18, r24
    158a:	22 0f       	add	r18, r18
    158c:	33 1f       	adc	r19, r19
    158e:	22 0f       	add	r18, r18
    1590:	33 1f       	adc	r19, r19
    1592:	22 0f       	add	r18, r18
    1594:	33 1f       	adc	r19, r19
    1596:	82 0f       	add	r24, r18
    1598:	93 1f       	adc	r25, r19
    159a:	9c 01       	movw	r18, r24
    159c:	24 0f       	add	r18, r20
    159e:	35 1f       	adc	r19, r21
    15a0:	88 85       	ldd	r24, Y+8	; 0x08
    15a2:	99 85       	ldd	r25, Y+9	; 0x09
    15a4:	fc 01       	movw	r30, r24
    15a6:	e2 0f       	add	r30, r18
    15a8:	f3 1f       	adc	r31, r19
    15aa:	64 81       	ldd	r22, Z+4	; 0x04
    15ac:	8e 81       	ldd	r24, Y+6	; 0x06
    15ae:	48 2f       	mov	r20, r24
    15b0:	50 e0       	ldi	r21, 0x00	; 0
    15b2:	ca 01       	movw	r24, r20
    15b4:	88 0f       	add	r24, r24
    15b6:	99 1f       	adc	r25, r25
    15b8:	9c 01       	movw	r18, r24
    15ba:	22 0f       	add	r18, r18
    15bc:	33 1f       	adc	r19, r19
    15be:	22 0f       	add	r18, r18
    15c0:	33 1f       	adc	r19, r19
    15c2:	22 0f       	add	r18, r18
    15c4:	33 1f       	adc	r19, r19
    15c6:	82 0f       	add	r24, r18
    15c8:	93 1f       	adc	r25, r19
    15ca:	9c 01       	movw	r18, r24
    15cc:	24 0f       	add	r18, r20
    15ce:	35 1f       	adc	r19, r21
    15d0:	88 85       	ldd	r24, Y+8	; 0x08
    15d2:	99 85       	ldd	r25, Y+9	; 0x09
    15d4:	fc 01       	movw	r30, r24
    15d6:	e2 0f       	add	r30, r18
    15d8:	f3 1f       	adc	r31, r19
    15da:	95 81       	ldd	r25, Z+5	; 0x05
    15dc:	86 2f       	mov	r24, r22
    15de:	69 2f       	mov	r22, r25
    15e0:	41 e0       	ldi	r20, 0x01	; 1
    15e2:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO_enuSet_PinDirection>
    15e6:	88 2f       	mov	r24, r24
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	00 24       	eor	r0, r0
    15ec:	96 95       	lsr	r25
    15ee:	87 95       	ror	r24
    15f0:	07 94       	ror	r0
    15f2:	96 95       	lsr	r25
    15f4:	87 95       	ror	r24
    15f6:	07 94       	ror	r0
    15f8:	98 2f       	mov	r25, r24
    15fa:	80 2d       	mov	r24, r0
    15fc:	9c 01       	movw	r18, r24
    15fe:	44 27       	eor	r20, r20
    1600:	37 fd       	sbrc	r19, 7
    1602:	40 95       	com	r20
    1604:	54 2f       	mov	r21, r20
    1606:	89 81       	ldd	r24, Y+1	; 0x01
    1608:	9a 81       	ldd	r25, Y+2	; 0x02
    160a:	ab 81       	ldd	r26, Y+3	; 0x03
    160c:	bc 81       	ldd	r27, Y+4	; 0x04
    160e:	82 2b       	or	r24, r18
    1610:	93 2b       	or	r25, r19
    1612:	a4 2b       	or	r26, r20
    1614:	b5 2b       	or	r27, r21
    1616:	89 83       	std	Y+1, r24	; 0x01
    1618:	9a 83       	std	Y+2, r25	; 0x02
    161a:	ab 83       	std	Y+3, r26	; 0x03
    161c:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=(DIO_enuSet_PinDirection(Copy_pstrSegConfig[Local_u8Iter].SEG_DPORT ,Copy_pstrSegConfig[Local_u8Iter].SEG_DPIN, DIO_u8OUTPUT)<<9);
    161e:	8e 81       	ldd	r24, Y+6	; 0x06
    1620:	48 2f       	mov	r20, r24
    1622:	50 e0       	ldi	r21, 0x00	; 0
    1624:	ca 01       	movw	r24, r20
    1626:	88 0f       	add	r24, r24
    1628:	99 1f       	adc	r25, r25
    162a:	9c 01       	movw	r18, r24
    162c:	22 0f       	add	r18, r18
    162e:	33 1f       	adc	r19, r19
    1630:	22 0f       	add	r18, r18
    1632:	33 1f       	adc	r19, r19
    1634:	22 0f       	add	r18, r18
    1636:	33 1f       	adc	r19, r19
    1638:	82 0f       	add	r24, r18
    163a:	93 1f       	adc	r25, r19
    163c:	9c 01       	movw	r18, r24
    163e:	24 0f       	add	r18, r20
    1640:	35 1f       	adc	r19, r21
    1642:	88 85       	ldd	r24, Y+8	; 0x08
    1644:	99 85       	ldd	r25, Y+9	; 0x09
    1646:	fc 01       	movw	r30, r24
    1648:	e2 0f       	add	r30, r18
    164a:	f3 1f       	adc	r31, r19
    164c:	66 81       	ldd	r22, Z+6	; 0x06
    164e:	8e 81       	ldd	r24, Y+6	; 0x06
    1650:	48 2f       	mov	r20, r24
    1652:	50 e0       	ldi	r21, 0x00	; 0
    1654:	ca 01       	movw	r24, r20
    1656:	88 0f       	add	r24, r24
    1658:	99 1f       	adc	r25, r25
    165a:	9c 01       	movw	r18, r24
    165c:	22 0f       	add	r18, r18
    165e:	33 1f       	adc	r19, r19
    1660:	22 0f       	add	r18, r18
    1662:	33 1f       	adc	r19, r19
    1664:	22 0f       	add	r18, r18
    1666:	33 1f       	adc	r19, r19
    1668:	82 0f       	add	r24, r18
    166a:	93 1f       	adc	r25, r19
    166c:	9c 01       	movw	r18, r24
    166e:	24 0f       	add	r18, r20
    1670:	35 1f       	adc	r19, r21
    1672:	88 85       	ldd	r24, Y+8	; 0x08
    1674:	99 85       	ldd	r25, Y+9	; 0x09
    1676:	fc 01       	movw	r30, r24
    1678:	e2 0f       	add	r30, r18
    167a:	f3 1f       	adc	r31, r19
    167c:	97 81       	ldd	r25, Z+7	; 0x07
    167e:	86 2f       	mov	r24, r22
    1680:	69 2f       	mov	r22, r25
    1682:	41 e0       	ldi	r20, 0x01	; 1
    1684:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO_enuSet_PinDirection>
    1688:	88 2f       	mov	r24, r24
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	98 2f       	mov	r25, r24
    168e:	88 27       	eor	r24, r24
    1690:	99 0f       	add	r25, r25
    1692:	9c 01       	movw	r18, r24
    1694:	44 27       	eor	r20, r20
    1696:	37 fd       	sbrc	r19, 7
    1698:	40 95       	com	r20
    169a:	54 2f       	mov	r21, r20
    169c:	89 81       	ldd	r24, Y+1	; 0x01
    169e:	9a 81       	ldd	r25, Y+2	; 0x02
    16a0:	ab 81       	ldd	r26, Y+3	; 0x03
    16a2:	bc 81       	ldd	r27, Y+4	; 0x04
    16a4:	82 2b       	or	r24, r18
    16a6:	93 2b       	or	r25, r19
    16a8:	a4 2b       	or	r26, r20
    16aa:	b5 2b       	or	r27, r21
    16ac:	89 83       	std	Y+1, r24	; 0x01
    16ae:	9a 83       	std	Y+2, r25	; 0x02
    16b0:	ab 83       	std	Y+3, r26	; 0x03
    16b2:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=(DIO_enuSet_PinDirection(Copy_pstrSegConfig[Local_u8Iter].SEG_EPORT ,Copy_pstrSegConfig[Local_u8Iter].SEG_EPIN, DIO_u8OUTPUT)<<12);
    16b4:	8e 81       	ldd	r24, Y+6	; 0x06
    16b6:	48 2f       	mov	r20, r24
    16b8:	50 e0       	ldi	r21, 0x00	; 0
    16ba:	ca 01       	movw	r24, r20
    16bc:	88 0f       	add	r24, r24
    16be:	99 1f       	adc	r25, r25
    16c0:	9c 01       	movw	r18, r24
    16c2:	22 0f       	add	r18, r18
    16c4:	33 1f       	adc	r19, r19
    16c6:	22 0f       	add	r18, r18
    16c8:	33 1f       	adc	r19, r19
    16ca:	22 0f       	add	r18, r18
    16cc:	33 1f       	adc	r19, r19
    16ce:	82 0f       	add	r24, r18
    16d0:	93 1f       	adc	r25, r19
    16d2:	9c 01       	movw	r18, r24
    16d4:	24 0f       	add	r18, r20
    16d6:	35 1f       	adc	r19, r21
    16d8:	88 85       	ldd	r24, Y+8	; 0x08
    16da:	99 85       	ldd	r25, Y+9	; 0x09
    16dc:	fc 01       	movw	r30, r24
    16de:	e2 0f       	add	r30, r18
    16e0:	f3 1f       	adc	r31, r19
    16e2:	60 85       	ldd	r22, Z+8	; 0x08
    16e4:	8e 81       	ldd	r24, Y+6	; 0x06
    16e6:	48 2f       	mov	r20, r24
    16e8:	50 e0       	ldi	r21, 0x00	; 0
    16ea:	ca 01       	movw	r24, r20
    16ec:	88 0f       	add	r24, r24
    16ee:	99 1f       	adc	r25, r25
    16f0:	9c 01       	movw	r18, r24
    16f2:	22 0f       	add	r18, r18
    16f4:	33 1f       	adc	r19, r19
    16f6:	22 0f       	add	r18, r18
    16f8:	33 1f       	adc	r19, r19
    16fa:	22 0f       	add	r18, r18
    16fc:	33 1f       	adc	r19, r19
    16fe:	82 0f       	add	r24, r18
    1700:	93 1f       	adc	r25, r19
    1702:	9c 01       	movw	r18, r24
    1704:	24 0f       	add	r18, r20
    1706:	35 1f       	adc	r19, r21
    1708:	88 85       	ldd	r24, Y+8	; 0x08
    170a:	99 85       	ldd	r25, Y+9	; 0x09
    170c:	fc 01       	movw	r30, r24
    170e:	e2 0f       	add	r30, r18
    1710:	f3 1f       	adc	r31, r19
    1712:	91 85       	ldd	r25, Z+9	; 0x09
    1714:	86 2f       	mov	r24, r22
    1716:	69 2f       	mov	r22, r25
    1718:	41 e0       	ldi	r20, 0x01	; 1
    171a:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO_enuSet_PinDirection>
    171e:	88 2f       	mov	r24, r24
    1720:	90 e0       	ldi	r25, 0x00	; 0
    1722:	98 2f       	mov	r25, r24
    1724:	88 27       	eor	r24, r24
    1726:	92 95       	swap	r25
    1728:	90 7f       	andi	r25, 0xF0	; 240
    172a:	9c 01       	movw	r18, r24
    172c:	44 27       	eor	r20, r20
    172e:	37 fd       	sbrc	r19, 7
    1730:	40 95       	com	r20
    1732:	54 2f       	mov	r21, r20
    1734:	89 81       	ldd	r24, Y+1	; 0x01
    1736:	9a 81       	ldd	r25, Y+2	; 0x02
    1738:	ab 81       	ldd	r26, Y+3	; 0x03
    173a:	bc 81       	ldd	r27, Y+4	; 0x04
    173c:	82 2b       	or	r24, r18
    173e:	93 2b       	or	r25, r19
    1740:	a4 2b       	or	r26, r20
    1742:	b5 2b       	or	r27, r21
    1744:	89 83       	std	Y+1, r24	; 0x01
    1746:	9a 83       	std	Y+2, r25	; 0x02
    1748:	ab 83       	std	Y+3, r26	; 0x03
    174a:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=(DIO_enuSet_PinDirection(Copy_pstrSegConfig[Local_u8Iter].SEG_FPORT ,Copy_pstrSegConfig[Local_u8Iter].SEG_FPIN, DIO_u8OUTPUT)<<15);
    174c:	8e 81       	ldd	r24, Y+6	; 0x06
    174e:	48 2f       	mov	r20, r24
    1750:	50 e0       	ldi	r21, 0x00	; 0
    1752:	ca 01       	movw	r24, r20
    1754:	88 0f       	add	r24, r24
    1756:	99 1f       	adc	r25, r25
    1758:	9c 01       	movw	r18, r24
    175a:	22 0f       	add	r18, r18
    175c:	33 1f       	adc	r19, r19
    175e:	22 0f       	add	r18, r18
    1760:	33 1f       	adc	r19, r19
    1762:	22 0f       	add	r18, r18
    1764:	33 1f       	adc	r19, r19
    1766:	82 0f       	add	r24, r18
    1768:	93 1f       	adc	r25, r19
    176a:	9c 01       	movw	r18, r24
    176c:	24 0f       	add	r18, r20
    176e:	35 1f       	adc	r19, r21
    1770:	88 85       	ldd	r24, Y+8	; 0x08
    1772:	99 85       	ldd	r25, Y+9	; 0x09
    1774:	fc 01       	movw	r30, r24
    1776:	e2 0f       	add	r30, r18
    1778:	f3 1f       	adc	r31, r19
    177a:	62 85       	ldd	r22, Z+10	; 0x0a
    177c:	8e 81       	ldd	r24, Y+6	; 0x06
    177e:	48 2f       	mov	r20, r24
    1780:	50 e0       	ldi	r21, 0x00	; 0
    1782:	ca 01       	movw	r24, r20
    1784:	88 0f       	add	r24, r24
    1786:	99 1f       	adc	r25, r25
    1788:	9c 01       	movw	r18, r24
    178a:	22 0f       	add	r18, r18
    178c:	33 1f       	adc	r19, r19
    178e:	22 0f       	add	r18, r18
    1790:	33 1f       	adc	r19, r19
    1792:	22 0f       	add	r18, r18
    1794:	33 1f       	adc	r19, r19
    1796:	82 0f       	add	r24, r18
    1798:	93 1f       	adc	r25, r19
    179a:	9c 01       	movw	r18, r24
    179c:	24 0f       	add	r18, r20
    179e:	35 1f       	adc	r19, r21
    17a0:	88 85       	ldd	r24, Y+8	; 0x08
    17a2:	99 85       	ldd	r25, Y+9	; 0x09
    17a4:	fc 01       	movw	r30, r24
    17a6:	e2 0f       	add	r30, r18
    17a8:	f3 1f       	adc	r31, r19
    17aa:	93 85       	ldd	r25, Z+11	; 0x0b
    17ac:	86 2f       	mov	r24, r22
    17ae:	69 2f       	mov	r22, r25
    17b0:	41 e0       	ldi	r20, 0x01	; 1
    17b2:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO_enuSet_PinDirection>
    17b6:	88 2f       	mov	r24, r24
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	99 27       	eor	r25, r25
    17bc:	86 95       	lsr	r24
    17be:	97 95       	ror	r25
    17c0:	88 27       	eor	r24, r24
    17c2:	9c 01       	movw	r18, r24
    17c4:	44 27       	eor	r20, r20
    17c6:	37 fd       	sbrc	r19, 7
    17c8:	40 95       	com	r20
    17ca:	54 2f       	mov	r21, r20
    17cc:	89 81       	ldd	r24, Y+1	; 0x01
    17ce:	9a 81       	ldd	r25, Y+2	; 0x02
    17d0:	ab 81       	ldd	r26, Y+3	; 0x03
    17d2:	bc 81       	ldd	r27, Y+4	; 0x04
    17d4:	82 2b       	or	r24, r18
    17d6:	93 2b       	or	r25, r19
    17d8:	a4 2b       	or	r26, r20
    17da:	b5 2b       	or	r27, r21
    17dc:	89 83       	std	Y+1, r24	; 0x01
    17de:	9a 83       	std	Y+2, r25	; 0x02
    17e0:	ab 83       	std	Y+3, r26	; 0x03
    17e2:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=(DIO_enuSet_PinDirection(Copy_pstrSegConfig[Local_u8Iter].SEG_GPORT ,Copy_pstrSegConfig[Local_u8Iter].SEG_GPIN, DIO_u8OUTPUT)<<18);
    17e4:	8e 81       	ldd	r24, Y+6	; 0x06
    17e6:	48 2f       	mov	r20, r24
    17e8:	50 e0       	ldi	r21, 0x00	; 0
    17ea:	ca 01       	movw	r24, r20
    17ec:	88 0f       	add	r24, r24
    17ee:	99 1f       	adc	r25, r25
    17f0:	9c 01       	movw	r18, r24
    17f2:	22 0f       	add	r18, r18
    17f4:	33 1f       	adc	r19, r19
    17f6:	22 0f       	add	r18, r18
    17f8:	33 1f       	adc	r19, r19
    17fa:	22 0f       	add	r18, r18
    17fc:	33 1f       	adc	r19, r19
    17fe:	82 0f       	add	r24, r18
    1800:	93 1f       	adc	r25, r19
    1802:	9c 01       	movw	r18, r24
    1804:	24 0f       	add	r18, r20
    1806:	35 1f       	adc	r19, r21
    1808:	88 85       	ldd	r24, Y+8	; 0x08
    180a:	99 85       	ldd	r25, Y+9	; 0x09
    180c:	fc 01       	movw	r30, r24
    180e:	e2 0f       	add	r30, r18
    1810:	f3 1f       	adc	r31, r19
    1812:	64 85       	ldd	r22, Z+12	; 0x0c
    1814:	8e 81       	ldd	r24, Y+6	; 0x06
    1816:	48 2f       	mov	r20, r24
    1818:	50 e0       	ldi	r21, 0x00	; 0
    181a:	ca 01       	movw	r24, r20
    181c:	88 0f       	add	r24, r24
    181e:	99 1f       	adc	r25, r25
    1820:	9c 01       	movw	r18, r24
    1822:	22 0f       	add	r18, r18
    1824:	33 1f       	adc	r19, r19
    1826:	22 0f       	add	r18, r18
    1828:	33 1f       	adc	r19, r19
    182a:	22 0f       	add	r18, r18
    182c:	33 1f       	adc	r19, r19
    182e:	82 0f       	add	r24, r18
    1830:	93 1f       	adc	r25, r19
    1832:	9c 01       	movw	r18, r24
    1834:	24 0f       	add	r18, r20
    1836:	35 1f       	adc	r19, r21
    1838:	88 85       	ldd	r24, Y+8	; 0x08
    183a:	99 85       	ldd	r25, Y+9	; 0x09
    183c:	fc 01       	movw	r30, r24
    183e:	e2 0f       	add	r30, r18
    1840:	f3 1f       	adc	r31, r19
    1842:	95 85       	ldd	r25, Z+13	; 0x0d
    1844:	86 2f       	mov	r24, r22
    1846:	69 2f       	mov	r22, r25
    1848:	41 e0       	ldi	r20, 0x01	; 1
    184a:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO_enuSet_PinDirection>
    184e:	88 2f       	mov	r24, r24
    1850:	90 e0       	ldi	r25, 0x00	; 0
    1852:	99 27       	eor	r25, r25
    1854:	88 27       	eor	r24, r24
    1856:	9c 01       	movw	r18, r24
    1858:	44 27       	eor	r20, r20
    185a:	37 fd       	sbrc	r19, 7
    185c:	40 95       	com	r20
    185e:	54 2f       	mov	r21, r20
    1860:	89 81       	ldd	r24, Y+1	; 0x01
    1862:	9a 81       	ldd	r25, Y+2	; 0x02
    1864:	ab 81       	ldd	r26, Y+3	; 0x03
    1866:	bc 81       	ldd	r27, Y+4	; 0x04
    1868:	82 2b       	or	r24, r18
    186a:	93 2b       	or	r25, r19
    186c:	a4 2b       	or	r26, r20
    186e:	b5 2b       	or	r27, r21
    1870:	89 83       	std	Y+1, r24	; 0x01
    1872:	9a 83       	std	Y+2, r25	; 0x02
    1874:	ab 83       	std	Y+3, r26	; 0x03
    1876:	bc 83       	std	Y+4, r27	; 0x04

			if(Copy_pstrSegConfig[Local_u8Iter].SEG_CMNPORT != NOT_CONNECTED && Copy_pstrSegConfig[Local_u8Iter].SEG_CMNPIN != NOT_CONNECTED )
    1878:	8e 81       	ldd	r24, Y+6	; 0x06
    187a:	48 2f       	mov	r20, r24
    187c:	50 e0       	ldi	r21, 0x00	; 0
    187e:	ca 01       	movw	r24, r20
    1880:	88 0f       	add	r24, r24
    1882:	99 1f       	adc	r25, r25
    1884:	9c 01       	movw	r18, r24
    1886:	22 0f       	add	r18, r18
    1888:	33 1f       	adc	r19, r19
    188a:	22 0f       	add	r18, r18
    188c:	33 1f       	adc	r19, r19
    188e:	22 0f       	add	r18, r18
    1890:	33 1f       	adc	r19, r19
    1892:	82 0f       	add	r24, r18
    1894:	93 1f       	adc	r25, r19
    1896:	9c 01       	movw	r18, r24
    1898:	24 0f       	add	r18, r20
    189a:	35 1f       	adc	r19, r21
    189c:	88 85       	ldd	r24, Y+8	; 0x08
    189e:	99 85       	ldd	r25, Y+9	; 0x09
    18a0:	fc 01       	movw	r30, r24
    18a2:	e2 0f       	add	r30, r18
    18a4:	f3 1f       	adc	r31, r19
    18a6:	86 85       	ldd	r24, Z+14	; 0x0e
    18a8:	8b 30       	cpi	r24, 0x0B	; 11
    18aa:	09 f4       	brne	.+2      	; 0x18ae <S_Segment_enuInit+0x476>
    18ac:	65 c0       	rjmp	.+202    	; 0x1978 <S_Segment_enuInit+0x540>
    18ae:	8e 81       	ldd	r24, Y+6	; 0x06
    18b0:	48 2f       	mov	r20, r24
    18b2:	50 e0       	ldi	r21, 0x00	; 0
    18b4:	ca 01       	movw	r24, r20
    18b6:	88 0f       	add	r24, r24
    18b8:	99 1f       	adc	r25, r25
    18ba:	9c 01       	movw	r18, r24
    18bc:	22 0f       	add	r18, r18
    18be:	33 1f       	adc	r19, r19
    18c0:	22 0f       	add	r18, r18
    18c2:	33 1f       	adc	r19, r19
    18c4:	22 0f       	add	r18, r18
    18c6:	33 1f       	adc	r19, r19
    18c8:	82 0f       	add	r24, r18
    18ca:	93 1f       	adc	r25, r19
    18cc:	9c 01       	movw	r18, r24
    18ce:	24 0f       	add	r18, r20
    18d0:	35 1f       	adc	r19, r21
    18d2:	88 85       	ldd	r24, Y+8	; 0x08
    18d4:	99 85       	ldd	r25, Y+9	; 0x09
    18d6:	fc 01       	movw	r30, r24
    18d8:	e2 0f       	add	r30, r18
    18da:	f3 1f       	adc	r31, r19
    18dc:	87 85       	ldd	r24, Z+15	; 0x0f
    18de:	8b 30       	cpi	r24, 0x0B	; 11
    18e0:	09 f4       	brne	.+2      	; 0x18e4 <S_Segment_enuInit+0x4ac>
    18e2:	4a c0       	rjmp	.+148    	; 0x1978 <S_Segment_enuInit+0x540>
			{
				Local_u32CheckError|=(DIO_enuSet_PinDirection(Copy_pstrSegConfig[Local_u8Iter].SEG_CMNPORT ,Copy_pstrSegConfig[Local_u8Iter].SEG_CMNPIN , DIO_u8OUTPUT)<<21);
    18e4:	8e 81       	ldd	r24, Y+6	; 0x06
    18e6:	48 2f       	mov	r20, r24
    18e8:	50 e0       	ldi	r21, 0x00	; 0
    18ea:	ca 01       	movw	r24, r20
    18ec:	88 0f       	add	r24, r24
    18ee:	99 1f       	adc	r25, r25
    18f0:	9c 01       	movw	r18, r24
    18f2:	22 0f       	add	r18, r18
    18f4:	33 1f       	adc	r19, r19
    18f6:	22 0f       	add	r18, r18
    18f8:	33 1f       	adc	r19, r19
    18fa:	22 0f       	add	r18, r18
    18fc:	33 1f       	adc	r19, r19
    18fe:	82 0f       	add	r24, r18
    1900:	93 1f       	adc	r25, r19
    1902:	9c 01       	movw	r18, r24
    1904:	24 0f       	add	r18, r20
    1906:	35 1f       	adc	r19, r21
    1908:	88 85       	ldd	r24, Y+8	; 0x08
    190a:	99 85       	ldd	r25, Y+9	; 0x09
    190c:	fc 01       	movw	r30, r24
    190e:	e2 0f       	add	r30, r18
    1910:	f3 1f       	adc	r31, r19
    1912:	66 85       	ldd	r22, Z+14	; 0x0e
    1914:	8e 81       	ldd	r24, Y+6	; 0x06
    1916:	48 2f       	mov	r20, r24
    1918:	50 e0       	ldi	r21, 0x00	; 0
    191a:	ca 01       	movw	r24, r20
    191c:	88 0f       	add	r24, r24
    191e:	99 1f       	adc	r25, r25
    1920:	9c 01       	movw	r18, r24
    1922:	22 0f       	add	r18, r18
    1924:	33 1f       	adc	r19, r19
    1926:	22 0f       	add	r18, r18
    1928:	33 1f       	adc	r19, r19
    192a:	22 0f       	add	r18, r18
    192c:	33 1f       	adc	r19, r19
    192e:	82 0f       	add	r24, r18
    1930:	93 1f       	adc	r25, r19
    1932:	9c 01       	movw	r18, r24
    1934:	24 0f       	add	r18, r20
    1936:	35 1f       	adc	r19, r21
    1938:	88 85       	ldd	r24, Y+8	; 0x08
    193a:	99 85       	ldd	r25, Y+9	; 0x09
    193c:	fc 01       	movw	r30, r24
    193e:	e2 0f       	add	r30, r18
    1940:	f3 1f       	adc	r31, r19
    1942:	97 85       	ldd	r25, Z+15	; 0x0f
    1944:	86 2f       	mov	r24, r22
    1946:	69 2f       	mov	r22, r25
    1948:	41 e0       	ldi	r20, 0x01	; 1
    194a:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO_enuSet_PinDirection>
    194e:	88 2f       	mov	r24, r24
    1950:	90 e0       	ldi	r25, 0x00	; 0
    1952:	99 27       	eor	r25, r25
    1954:	88 27       	eor	r24, r24
    1956:	9c 01       	movw	r18, r24
    1958:	44 27       	eor	r20, r20
    195a:	37 fd       	sbrc	r19, 7
    195c:	40 95       	com	r20
    195e:	54 2f       	mov	r21, r20
    1960:	89 81       	ldd	r24, Y+1	; 0x01
    1962:	9a 81       	ldd	r25, Y+2	; 0x02
    1964:	ab 81       	ldd	r26, Y+3	; 0x03
    1966:	bc 81       	ldd	r27, Y+4	; 0x04
    1968:	82 2b       	or	r24, r18
    196a:	93 2b       	or	r25, r19
    196c:	a4 2b       	or	r26, r20
    196e:	b5 2b       	or	r27, r21
    1970:	89 83       	std	Y+1, r24	; 0x01
    1972:	9a 83       	std	Y+2, r25	; 0x02
    1974:	ab 83       	std	Y+3, r26	; 0x03
    1976:	bc 83       	std	Y+4, r27	; 0x04
			}
			if(Copy_pstrSegConfig[Local_u8Iter].SEG_DOTPORT != NOT_CONNECTED && Copy_pstrSegConfig[Local_u8Iter].SEG_DOTPIN != NOT_CONNECTED )
    1978:	8e 81       	ldd	r24, Y+6	; 0x06
    197a:	48 2f       	mov	r20, r24
    197c:	50 e0       	ldi	r21, 0x00	; 0
    197e:	ca 01       	movw	r24, r20
    1980:	88 0f       	add	r24, r24
    1982:	99 1f       	adc	r25, r25
    1984:	9c 01       	movw	r18, r24
    1986:	22 0f       	add	r18, r18
    1988:	33 1f       	adc	r19, r19
    198a:	22 0f       	add	r18, r18
    198c:	33 1f       	adc	r19, r19
    198e:	22 0f       	add	r18, r18
    1990:	33 1f       	adc	r19, r19
    1992:	82 0f       	add	r24, r18
    1994:	93 1f       	adc	r25, r19
    1996:	9c 01       	movw	r18, r24
    1998:	24 0f       	add	r18, r20
    199a:	35 1f       	adc	r19, r21
    199c:	88 85       	ldd	r24, Y+8	; 0x08
    199e:	99 85       	ldd	r25, Y+9	; 0x09
    19a0:	fc 01       	movw	r30, r24
    19a2:	e2 0f       	add	r30, r18
    19a4:	f3 1f       	adc	r31, r19
    19a6:	80 89       	ldd	r24, Z+16	; 0x10
    19a8:	8b 30       	cpi	r24, 0x0B	; 11
    19aa:	09 f4       	brne	.+2      	; 0x19ae <S_Segment_enuInit+0x576>
    19ac:	65 c0       	rjmp	.+202    	; 0x1a78 <S_Segment_enuInit+0x640>
    19ae:	8e 81       	ldd	r24, Y+6	; 0x06
    19b0:	48 2f       	mov	r20, r24
    19b2:	50 e0       	ldi	r21, 0x00	; 0
    19b4:	ca 01       	movw	r24, r20
    19b6:	88 0f       	add	r24, r24
    19b8:	99 1f       	adc	r25, r25
    19ba:	9c 01       	movw	r18, r24
    19bc:	22 0f       	add	r18, r18
    19be:	33 1f       	adc	r19, r19
    19c0:	22 0f       	add	r18, r18
    19c2:	33 1f       	adc	r19, r19
    19c4:	22 0f       	add	r18, r18
    19c6:	33 1f       	adc	r19, r19
    19c8:	82 0f       	add	r24, r18
    19ca:	93 1f       	adc	r25, r19
    19cc:	9c 01       	movw	r18, r24
    19ce:	24 0f       	add	r18, r20
    19d0:	35 1f       	adc	r19, r21
    19d2:	88 85       	ldd	r24, Y+8	; 0x08
    19d4:	99 85       	ldd	r25, Y+9	; 0x09
    19d6:	fc 01       	movw	r30, r24
    19d8:	e2 0f       	add	r30, r18
    19da:	f3 1f       	adc	r31, r19
    19dc:	81 89       	ldd	r24, Z+17	; 0x11
    19de:	8b 30       	cpi	r24, 0x0B	; 11
    19e0:	09 f4       	brne	.+2      	; 0x19e4 <S_Segment_enuInit+0x5ac>
    19e2:	4a c0       	rjmp	.+148    	; 0x1a78 <S_Segment_enuInit+0x640>
			{
				Local_u32CheckError|=(DIO_enuSet_PinDirection(Copy_pstrSegConfig[Local_u8Iter].SEG_DOTPORT ,Copy_pstrSegConfig[Local_u8Iter].SEG_DOTPIN , DIO_u8OUTPUT)<<24);
    19e4:	8e 81       	ldd	r24, Y+6	; 0x06
    19e6:	48 2f       	mov	r20, r24
    19e8:	50 e0       	ldi	r21, 0x00	; 0
    19ea:	ca 01       	movw	r24, r20
    19ec:	88 0f       	add	r24, r24
    19ee:	99 1f       	adc	r25, r25
    19f0:	9c 01       	movw	r18, r24
    19f2:	22 0f       	add	r18, r18
    19f4:	33 1f       	adc	r19, r19
    19f6:	22 0f       	add	r18, r18
    19f8:	33 1f       	adc	r19, r19
    19fa:	22 0f       	add	r18, r18
    19fc:	33 1f       	adc	r19, r19
    19fe:	82 0f       	add	r24, r18
    1a00:	93 1f       	adc	r25, r19
    1a02:	9c 01       	movw	r18, r24
    1a04:	24 0f       	add	r18, r20
    1a06:	35 1f       	adc	r19, r21
    1a08:	88 85       	ldd	r24, Y+8	; 0x08
    1a0a:	99 85       	ldd	r25, Y+9	; 0x09
    1a0c:	fc 01       	movw	r30, r24
    1a0e:	e2 0f       	add	r30, r18
    1a10:	f3 1f       	adc	r31, r19
    1a12:	60 89       	ldd	r22, Z+16	; 0x10
    1a14:	8e 81       	ldd	r24, Y+6	; 0x06
    1a16:	48 2f       	mov	r20, r24
    1a18:	50 e0       	ldi	r21, 0x00	; 0
    1a1a:	ca 01       	movw	r24, r20
    1a1c:	88 0f       	add	r24, r24
    1a1e:	99 1f       	adc	r25, r25
    1a20:	9c 01       	movw	r18, r24
    1a22:	22 0f       	add	r18, r18
    1a24:	33 1f       	adc	r19, r19
    1a26:	22 0f       	add	r18, r18
    1a28:	33 1f       	adc	r19, r19
    1a2a:	22 0f       	add	r18, r18
    1a2c:	33 1f       	adc	r19, r19
    1a2e:	82 0f       	add	r24, r18
    1a30:	93 1f       	adc	r25, r19
    1a32:	9c 01       	movw	r18, r24
    1a34:	24 0f       	add	r18, r20
    1a36:	35 1f       	adc	r19, r21
    1a38:	88 85       	ldd	r24, Y+8	; 0x08
    1a3a:	99 85       	ldd	r25, Y+9	; 0x09
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	e2 0f       	add	r30, r18
    1a40:	f3 1f       	adc	r31, r19
    1a42:	91 89       	ldd	r25, Z+17	; 0x11
    1a44:	86 2f       	mov	r24, r22
    1a46:	69 2f       	mov	r22, r25
    1a48:	41 e0       	ldi	r20, 0x01	; 1
    1a4a:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO_enuSet_PinDirection>
    1a4e:	88 2f       	mov	r24, r24
    1a50:	90 e0       	ldi	r25, 0x00	; 0
    1a52:	99 27       	eor	r25, r25
    1a54:	88 27       	eor	r24, r24
    1a56:	9c 01       	movw	r18, r24
    1a58:	44 27       	eor	r20, r20
    1a5a:	37 fd       	sbrc	r19, 7
    1a5c:	40 95       	com	r20
    1a5e:	54 2f       	mov	r21, r20
    1a60:	89 81       	ldd	r24, Y+1	; 0x01
    1a62:	9a 81       	ldd	r25, Y+2	; 0x02
    1a64:	ab 81       	ldd	r26, Y+3	; 0x03
    1a66:	bc 81       	ldd	r27, Y+4	; 0x04
    1a68:	82 2b       	or	r24, r18
    1a6a:	93 2b       	or	r25, r19
    1a6c:	a4 2b       	or	r26, r20
    1a6e:	b5 2b       	or	r27, r21
    1a70:	89 83       	std	Y+1, r24	; 0x01
    1a72:	9a 83       	std	Y+2, r25	; 0x02
    1a74:	ab 83       	std	Y+3, r26	; 0x03
    1a76:	bc 83       	std	Y+4, r27	; 0x04
			}
			for(Local_u8IterLoop=0 ; Local_u8IterLoop < sizeof(Local_u8IterLoop)*8 ; Local_u8IterLoop+=3)
    1a78:	1d 82       	std	Y+5, r1	; 0x05
    1a7a:	1e c0       	rjmp	.+60     	; 0x1ab8 <S_Segment_enuInit+0x680>
			 {
				 if( ( ( (Local_u32CheckError)>>Local_u8IterLoop) &7 ) !=ES_OK )
    1a7c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a7e:	28 2f       	mov	r18, r24
    1a80:	30 e0       	ldi	r19, 0x00	; 0
    1a82:	89 81       	ldd	r24, Y+1	; 0x01
    1a84:	9a 81       	ldd	r25, Y+2	; 0x02
    1a86:	ab 81       	ldd	r26, Y+3	; 0x03
    1a88:	bc 81       	ldd	r27, Y+4	; 0x04
    1a8a:	02 2e       	mov	r0, r18
    1a8c:	04 c0       	rjmp	.+8      	; 0x1a96 <S_Segment_enuInit+0x65e>
    1a8e:	b6 95       	lsr	r27
    1a90:	a7 95       	ror	r26
    1a92:	97 95       	ror	r25
    1a94:	87 95       	ror	r24
    1a96:	0a 94       	dec	r0
    1a98:	d2 f7       	brpl	.-12     	; 0x1a8e <S_Segment_enuInit+0x656>
    1a9a:	87 70       	andi	r24, 0x07	; 7
    1a9c:	90 70       	andi	r25, 0x00	; 0
    1a9e:	a0 70       	andi	r26, 0x00	; 0
    1aa0:	b0 70       	andi	r27, 0x00	; 0
    1aa2:	00 97       	sbiw	r24, 0x00	; 0
    1aa4:	a1 05       	cpc	r26, r1
    1aa6:	b1 05       	cpc	r27, r1
    1aa8:	19 f0       	breq	.+6      	; 0x1ab0 <S_Segment_enuInit+0x678>
				 {
					 return Local_enuErrorState;
    1aaa:	8f 81       	ldd	r24, Y+7	; 0x07
    1aac:	8a 87       	std	Y+10, r24	; 0x0a
    1aae:	13 c0       	rjmp	.+38     	; 0x1ad6 <S_Segment_enuInit+0x69e>
				 }
				 else
				 {
					 Local_enuErrorState=ES_OK;
    1ab0:	1f 82       	std	Y+7, r1	; 0x07
			}
			if(Copy_pstrSegConfig[Local_u8Iter].SEG_DOTPORT != NOT_CONNECTED && Copy_pstrSegConfig[Local_u8Iter].SEG_DOTPIN != NOT_CONNECTED )
			{
				Local_u32CheckError|=(DIO_enuSet_PinDirection(Copy_pstrSegConfig[Local_u8Iter].SEG_DOTPORT ,Copy_pstrSegConfig[Local_u8Iter].SEG_DOTPIN , DIO_u8OUTPUT)<<24);
			}
			for(Local_u8IterLoop=0 ; Local_u8IterLoop < sizeof(Local_u8IterLoop)*8 ; Local_u8IterLoop+=3)
    1ab2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ab4:	8d 5f       	subi	r24, 0xFD	; 253
    1ab6:	8d 83       	std	Y+5, r24	; 0x05
    1ab8:	8d 81       	ldd	r24, Y+5	; 0x05
    1aba:	88 30       	cpi	r24, 0x08	; 8
    1abc:	f8 f2       	brcs	.-66     	; 0x1a7c <S_Segment_enuInit+0x644>
	if(Copy_pstrSegConfig != NULL)
	{
		u8 Local_u8Iter=0;
		u8 Local_u8IterLoop=0;
		u32 Local_u32CheckError;
		for(Local_u8Iter=0;Local_u8Iter<SS_Num;Local_u8Iter++)
    1abe:	8e 81       	ldd	r24, Y+6	; 0x06
    1ac0:	8f 5f       	subi	r24, 0xFF	; 255
    1ac2:	8e 83       	std	Y+6, r24	; 0x06
    1ac4:	8e 81       	ldd	r24, Y+6	; 0x06
    1ac6:	82 30       	cpi	r24, 0x02	; 2
    1ac8:	08 f4       	brcc	.+2      	; 0x1acc <S_Segment_enuInit+0x694>
    1aca:	cd cc       	rjmp	.-1638   	; 0x1466 <S_Segment_enuInit+0x2e>
    1acc:	02 c0       	rjmp	.+4      	; 0x1ad2 <S_Segment_enuInit+0x69a>


	}
	else
	{
		Local_enuErrorState=ES_NULL_POINTER;
    1ace:	82 e0       	ldi	r24, 0x02	; 2
    1ad0:	8f 83       	std	Y+7, r24	; 0x07
	}

	return Local_enuErrorState;
    1ad2:	8f 81       	ldd	r24, Y+7	; 0x07
    1ad4:	8a 87       	std	Y+10, r24	; 0x0a
    1ad6:	8a 85       	ldd	r24, Y+10	; 0x0a
}
    1ad8:	2a 96       	adiw	r28, 0x0a	; 10
    1ada:	0f b6       	in	r0, 0x3f	; 63
    1adc:	f8 94       	cli
    1ade:	de bf       	out	0x3e, r29	; 62
    1ae0:	0f be       	out	0x3f, r0	; 63
    1ae2:	cd bf       	out	0x3d, r28	; 61
    1ae4:	cf 91       	pop	r28
    1ae6:	df 91       	pop	r29
    1ae8:	08 95       	ret

00001aea <S_Segment_enuDisplayNum>:


ES_t S_Segment_enuDisplayNum(u8 Copy_u8SegID,u8 Copy_u8Num)
{
    1aea:	df 93       	push	r29
    1aec:	cf 93       	push	r28
    1aee:	cd b7       	in	r28, 0x3d	; 61
    1af0:	de b7       	in	r29, 0x3e	; 62
    1af2:	6e 97       	sbiw	r28, 0x1e	; 30
    1af4:	0f b6       	in	r0, 0x3f	; 63
    1af6:	f8 94       	cli
    1af8:	de bf       	out	0x3e, r29	; 62
    1afa:	0f be       	out	0x3f, r0	; 63
    1afc:	cd bf       	out	0x3d, r28	; 61
    1afe:	8f 83       	std	Y+7, r24	; 0x07
    1b00:	68 87       	std	Y+8, r22	; 0x08
	ES_t Local_enuErrorState=ES_NOK;
    1b02:	81 e0       	ldi	r24, 0x01	; 1
    1b04:	8e 83       	std	Y+6, r24	; 0x06
	u8 Local_u8Iter=0;
    1b06:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32CheckError;
	if(Copy_u8Num <10 && Copy_u8SegID<SS_Num )
    1b08:	88 85       	ldd	r24, Y+8	; 0x08
    1b0a:	8a 30       	cpi	r24, 0x0A	; 10
    1b0c:	08 f0       	brcs	.+2      	; 0x1b10 <S_Segment_enuDisplayNum+0x26>
    1b0e:	72 c4       	rjmp	.+2276   	; 0x23f4 <S_Segment_enuDisplayNum+0x90a>
    1b10:	8f 81       	ldd	r24, Y+7	; 0x07
    1b12:	82 30       	cpi	r24, 0x02	; 2
    1b14:	08 f0       	brcs	.+2      	; 0x1b18 <S_Segment_enuDisplayNum+0x2e>
    1b16:	6e c4       	rjmp	.+2268   	; 0x23f4 <S_Segment_enuDisplayNum+0x90a>
	{

		if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_CATHODE)
    1b18:	8f 81       	ldd	r24, Y+7	; 0x07
    1b1a:	48 2f       	mov	r20, r24
    1b1c:	50 e0       	ldi	r21, 0x00	; 0
    1b1e:	ca 01       	movw	r24, r20
    1b20:	88 0f       	add	r24, r24
    1b22:	99 1f       	adc	r25, r25
    1b24:	9c 01       	movw	r18, r24
    1b26:	22 0f       	add	r18, r18
    1b28:	33 1f       	adc	r19, r19
    1b2a:	22 0f       	add	r18, r18
    1b2c:	33 1f       	adc	r19, r19
    1b2e:	22 0f       	add	r18, r18
    1b30:	33 1f       	adc	r19, r19
    1b32:	82 0f       	add	r24, r18
    1b34:	93 1f       	adc	r25, r19
    1b36:	84 0f       	add	r24, r20
    1b38:	95 1f       	adc	r25, r21
    1b3a:	fc 01       	movw	r30, r24
    1b3c:	ec 57       	subi	r30, 0x7C	; 124
    1b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b40:	80 81       	ld	r24, Z
    1b42:	84 30       	cpi	r24, 0x04	; 4
    1b44:	09 f0       	breq	.+2      	; 0x1b48 <S_Segment_enuDisplayNum+0x5e>
    1b46:	00 c2       	rjmp	.+1024   	; 0x1f48 <S_Segment_enuDisplayNum+0x45e>
		{
			Local_u32CheckError= DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_APORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_APIN,((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin0)&Get_State_Num));
    1b48:	8f 81       	ldd	r24, Y+7	; 0x07
    1b4a:	48 2f       	mov	r20, r24
    1b4c:	50 e0       	ldi	r21, 0x00	; 0
    1b4e:	ca 01       	movw	r24, r20
    1b50:	88 0f       	add	r24, r24
    1b52:	99 1f       	adc	r25, r25
    1b54:	9c 01       	movw	r18, r24
    1b56:	22 0f       	add	r18, r18
    1b58:	33 1f       	adc	r19, r19
    1b5a:	22 0f       	add	r18, r18
    1b5c:	33 1f       	adc	r19, r19
    1b5e:	22 0f       	add	r18, r18
    1b60:	33 1f       	adc	r19, r19
    1b62:	82 0f       	add	r24, r18
    1b64:	93 1f       	adc	r25, r19
    1b66:	84 0f       	add	r24, r20
    1b68:	95 1f       	adc	r25, r21
    1b6a:	fc 01       	movw	r30, r24
    1b6c:	ee 58       	subi	r30, 0x8E	; 142
    1b6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b70:	60 81       	ld	r22, Z
    1b72:	8f 81       	ldd	r24, Y+7	; 0x07
    1b74:	48 2f       	mov	r20, r24
    1b76:	50 e0       	ldi	r21, 0x00	; 0
    1b78:	ca 01       	movw	r24, r20
    1b7a:	88 0f       	add	r24, r24
    1b7c:	99 1f       	adc	r25, r25
    1b7e:	9c 01       	movw	r18, r24
    1b80:	22 0f       	add	r18, r18
    1b82:	33 1f       	adc	r19, r19
    1b84:	22 0f       	add	r18, r18
    1b86:	33 1f       	adc	r19, r19
    1b88:	22 0f       	add	r18, r18
    1b8a:	33 1f       	adc	r19, r19
    1b8c:	82 0f       	add	r24, r18
    1b8e:	93 1f       	adc	r25, r19
    1b90:	84 0f       	add	r24, r20
    1b92:	95 1f       	adc	r25, r21
    1b94:	fc 01       	movw	r30, r24
    1b96:	ed 58       	subi	r30, 0x8D	; 141
    1b98:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9a:	20 81       	ld	r18, Z
    1b9c:	88 85       	ldd	r24, Y+8	; 0x08
    1b9e:	88 2f       	mov	r24, r24
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	fc 01       	movw	r30, r24
    1ba4:	e8 56       	subi	r30, 0x68	; 104
    1ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba8:	80 81       	ld	r24, Z
    1baa:	98 2f       	mov	r25, r24
    1bac:	91 70       	andi	r25, 0x01	; 1
    1bae:	86 2f       	mov	r24, r22
    1bb0:	62 2f       	mov	r22, r18
    1bb2:	49 2f       	mov	r20, r25
    1bb4:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    1bb8:	88 2f       	mov	r24, r24
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	a0 e0       	ldi	r26, 0x00	; 0
    1bbe:	b0 e0       	ldi	r27, 0x00	; 0
    1bc0:	89 83       	std	Y+1, r24	; 0x01
    1bc2:	9a 83       	std	Y+2, r25	; 0x02
    1bc4:	ab 83       	std	Y+3, r26	; 0x03
    1bc6:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_BPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_BPIN,((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin1)&Get_State_Num));
    1bc8:	8f 81       	ldd	r24, Y+7	; 0x07
    1bca:	48 2f       	mov	r20, r24
    1bcc:	50 e0       	ldi	r21, 0x00	; 0
    1bce:	ca 01       	movw	r24, r20
    1bd0:	88 0f       	add	r24, r24
    1bd2:	99 1f       	adc	r25, r25
    1bd4:	9c 01       	movw	r18, r24
    1bd6:	22 0f       	add	r18, r18
    1bd8:	33 1f       	adc	r19, r19
    1bda:	22 0f       	add	r18, r18
    1bdc:	33 1f       	adc	r19, r19
    1bde:	22 0f       	add	r18, r18
    1be0:	33 1f       	adc	r19, r19
    1be2:	82 0f       	add	r24, r18
    1be4:	93 1f       	adc	r25, r19
    1be6:	84 0f       	add	r24, r20
    1be8:	95 1f       	adc	r25, r21
    1bea:	fc 01       	movw	r30, r24
    1bec:	ec 58       	subi	r30, 0x8C	; 140
    1bee:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf0:	60 81       	ld	r22, Z
    1bf2:	8f 81       	ldd	r24, Y+7	; 0x07
    1bf4:	48 2f       	mov	r20, r24
    1bf6:	50 e0       	ldi	r21, 0x00	; 0
    1bf8:	ca 01       	movw	r24, r20
    1bfa:	88 0f       	add	r24, r24
    1bfc:	99 1f       	adc	r25, r25
    1bfe:	9c 01       	movw	r18, r24
    1c00:	22 0f       	add	r18, r18
    1c02:	33 1f       	adc	r19, r19
    1c04:	22 0f       	add	r18, r18
    1c06:	33 1f       	adc	r19, r19
    1c08:	22 0f       	add	r18, r18
    1c0a:	33 1f       	adc	r19, r19
    1c0c:	82 0f       	add	r24, r18
    1c0e:	93 1f       	adc	r25, r19
    1c10:	84 0f       	add	r24, r20
    1c12:	95 1f       	adc	r25, r21
    1c14:	fc 01       	movw	r30, r24
    1c16:	eb 58       	subi	r30, 0x8B	; 139
    1c18:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1a:	20 81       	ld	r18, Z
    1c1c:	88 85       	ldd	r24, Y+8	; 0x08
    1c1e:	88 2f       	mov	r24, r24
    1c20:	90 e0       	ldi	r25, 0x00	; 0
    1c22:	fc 01       	movw	r30, r24
    1c24:	e8 56       	subi	r30, 0x68	; 104
    1c26:	ff 4f       	sbci	r31, 0xFF	; 255
    1c28:	80 81       	ld	r24, Z
    1c2a:	86 95       	lsr	r24
    1c2c:	98 2f       	mov	r25, r24
    1c2e:	91 70       	andi	r25, 0x01	; 1
    1c30:	86 2f       	mov	r24, r22
    1c32:	62 2f       	mov	r22, r18
    1c34:	49 2f       	mov	r20, r25
    1c36:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    1c3a:	28 2f       	mov	r18, r24
    1c3c:	30 e0       	ldi	r19, 0x00	; 0
    1c3e:	40 e0       	ldi	r20, 0x00	; 0
    1c40:	50 e0       	ldi	r21, 0x00	; 0
    1c42:	89 81       	ldd	r24, Y+1	; 0x01
    1c44:	9a 81       	ldd	r25, Y+2	; 0x02
    1c46:	ab 81       	ldd	r26, Y+3	; 0x03
    1c48:	bc 81       	ldd	r27, Y+4	; 0x04
    1c4a:	82 2b       	or	r24, r18
    1c4c:	93 2b       	or	r25, r19
    1c4e:	a4 2b       	or	r26, r20
    1c50:	b5 2b       	or	r27, r21
    1c52:	89 83       	std	Y+1, r24	; 0x01
    1c54:	9a 83       	std	Y+2, r25	; 0x02
    1c56:	ab 83       	std	Y+3, r26	; 0x03
    1c58:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CPIN,((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin2)&Get_State_Num));
    1c5a:	8f 81       	ldd	r24, Y+7	; 0x07
    1c5c:	48 2f       	mov	r20, r24
    1c5e:	50 e0       	ldi	r21, 0x00	; 0
    1c60:	ca 01       	movw	r24, r20
    1c62:	88 0f       	add	r24, r24
    1c64:	99 1f       	adc	r25, r25
    1c66:	9c 01       	movw	r18, r24
    1c68:	22 0f       	add	r18, r18
    1c6a:	33 1f       	adc	r19, r19
    1c6c:	22 0f       	add	r18, r18
    1c6e:	33 1f       	adc	r19, r19
    1c70:	22 0f       	add	r18, r18
    1c72:	33 1f       	adc	r19, r19
    1c74:	82 0f       	add	r24, r18
    1c76:	93 1f       	adc	r25, r19
    1c78:	84 0f       	add	r24, r20
    1c7a:	95 1f       	adc	r25, r21
    1c7c:	fc 01       	movw	r30, r24
    1c7e:	ea 58       	subi	r30, 0x8A	; 138
    1c80:	ff 4f       	sbci	r31, 0xFF	; 255
    1c82:	60 81       	ld	r22, Z
    1c84:	8f 81       	ldd	r24, Y+7	; 0x07
    1c86:	48 2f       	mov	r20, r24
    1c88:	50 e0       	ldi	r21, 0x00	; 0
    1c8a:	ca 01       	movw	r24, r20
    1c8c:	88 0f       	add	r24, r24
    1c8e:	99 1f       	adc	r25, r25
    1c90:	9c 01       	movw	r18, r24
    1c92:	22 0f       	add	r18, r18
    1c94:	33 1f       	adc	r19, r19
    1c96:	22 0f       	add	r18, r18
    1c98:	33 1f       	adc	r19, r19
    1c9a:	22 0f       	add	r18, r18
    1c9c:	33 1f       	adc	r19, r19
    1c9e:	82 0f       	add	r24, r18
    1ca0:	93 1f       	adc	r25, r19
    1ca2:	84 0f       	add	r24, r20
    1ca4:	95 1f       	adc	r25, r21
    1ca6:	fc 01       	movw	r30, r24
    1ca8:	e9 58       	subi	r30, 0x89	; 137
    1caa:	ff 4f       	sbci	r31, 0xFF	; 255
    1cac:	20 81       	ld	r18, Z
    1cae:	88 85       	ldd	r24, Y+8	; 0x08
    1cb0:	88 2f       	mov	r24, r24
    1cb2:	90 e0       	ldi	r25, 0x00	; 0
    1cb4:	fc 01       	movw	r30, r24
    1cb6:	e8 56       	subi	r30, 0x68	; 104
    1cb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cba:	80 81       	ld	r24, Z
    1cbc:	86 95       	lsr	r24
    1cbe:	86 95       	lsr	r24
    1cc0:	98 2f       	mov	r25, r24
    1cc2:	91 70       	andi	r25, 0x01	; 1
    1cc4:	86 2f       	mov	r24, r22
    1cc6:	62 2f       	mov	r22, r18
    1cc8:	49 2f       	mov	r20, r25
    1cca:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    1cce:	28 2f       	mov	r18, r24
    1cd0:	30 e0       	ldi	r19, 0x00	; 0
    1cd2:	40 e0       	ldi	r20, 0x00	; 0
    1cd4:	50 e0       	ldi	r21, 0x00	; 0
    1cd6:	89 81       	ldd	r24, Y+1	; 0x01
    1cd8:	9a 81       	ldd	r25, Y+2	; 0x02
    1cda:	ab 81       	ldd	r26, Y+3	; 0x03
    1cdc:	bc 81       	ldd	r27, Y+4	; 0x04
    1cde:	82 2b       	or	r24, r18
    1ce0:	93 2b       	or	r25, r19
    1ce2:	a4 2b       	or	r26, r20
    1ce4:	b5 2b       	or	r27, r21
    1ce6:	89 83       	std	Y+1, r24	; 0x01
    1ce8:	9a 83       	std	Y+2, r25	; 0x02
    1cea:	ab 83       	std	Y+3, r26	; 0x03
    1cec:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DPIN,((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin3)&Get_State_Num));
    1cee:	8f 81       	ldd	r24, Y+7	; 0x07
    1cf0:	48 2f       	mov	r20, r24
    1cf2:	50 e0       	ldi	r21, 0x00	; 0
    1cf4:	ca 01       	movw	r24, r20
    1cf6:	88 0f       	add	r24, r24
    1cf8:	99 1f       	adc	r25, r25
    1cfa:	9c 01       	movw	r18, r24
    1cfc:	22 0f       	add	r18, r18
    1cfe:	33 1f       	adc	r19, r19
    1d00:	22 0f       	add	r18, r18
    1d02:	33 1f       	adc	r19, r19
    1d04:	22 0f       	add	r18, r18
    1d06:	33 1f       	adc	r19, r19
    1d08:	82 0f       	add	r24, r18
    1d0a:	93 1f       	adc	r25, r19
    1d0c:	84 0f       	add	r24, r20
    1d0e:	95 1f       	adc	r25, r21
    1d10:	fc 01       	movw	r30, r24
    1d12:	e8 58       	subi	r30, 0x88	; 136
    1d14:	ff 4f       	sbci	r31, 0xFF	; 255
    1d16:	60 81       	ld	r22, Z
    1d18:	8f 81       	ldd	r24, Y+7	; 0x07
    1d1a:	48 2f       	mov	r20, r24
    1d1c:	50 e0       	ldi	r21, 0x00	; 0
    1d1e:	ca 01       	movw	r24, r20
    1d20:	88 0f       	add	r24, r24
    1d22:	99 1f       	adc	r25, r25
    1d24:	9c 01       	movw	r18, r24
    1d26:	22 0f       	add	r18, r18
    1d28:	33 1f       	adc	r19, r19
    1d2a:	22 0f       	add	r18, r18
    1d2c:	33 1f       	adc	r19, r19
    1d2e:	22 0f       	add	r18, r18
    1d30:	33 1f       	adc	r19, r19
    1d32:	82 0f       	add	r24, r18
    1d34:	93 1f       	adc	r25, r19
    1d36:	84 0f       	add	r24, r20
    1d38:	95 1f       	adc	r25, r21
    1d3a:	fc 01       	movw	r30, r24
    1d3c:	e7 58       	subi	r30, 0x87	; 135
    1d3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d40:	20 81       	ld	r18, Z
    1d42:	88 85       	ldd	r24, Y+8	; 0x08
    1d44:	88 2f       	mov	r24, r24
    1d46:	90 e0       	ldi	r25, 0x00	; 0
    1d48:	fc 01       	movw	r30, r24
    1d4a:	e8 56       	subi	r30, 0x68	; 104
    1d4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4e:	80 81       	ld	r24, Z
    1d50:	86 95       	lsr	r24
    1d52:	86 95       	lsr	r24
    1d54:	86 95       	lsr	r24
    1d56:	98 2f       	mov	r25, r24
    1d58:	91 70       	andi	r25, 0x01	; 1
    1d5a:	86 2f       	mov	r24, r22
    1d5c:	62 2f       	mov	r22, r18
    1d5e:	49 2f       	mov	r20, r25
    1d60:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    1d64:	28 2f       	mov	r18, r24
    1d66:	30 e0       	ldi	r19, 0x00	; 0
    1d68:	40 e0       	ldi	r20, 0x00	; 0
    1d6a:	50 e0       	ldi	r21, 0x00	; 0
    1d6c:	89 81       	ldd	r24, Y+1	; 0x01
    1d6e:	9a 81       	ldd	r25, Y+2	; 0x02
    1d70:	ab 81       	ldd	r26, Y+3	; 0x03
    1d72:	bc 81       	ldd	r27, Y+4	; 0x04
    1d74:	82 2b       	or	r24, r18
    1d76:	93 2b       	or	r25, r19
    1d78:	a4 2b       	or	r26, r20
    1d7a:	b5 2b       	or	r27, r21
    1d7c:	89 83       	std	Y+1, r24	; 0x01
    1d7e:	9a 83       	std	Y+2, r25	; 0x02
    1d80:	ab 83       	std	Y+3, r26	; 0x03
    1d82:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_EPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_EPIN,((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin4)&Get_State_Num));
    1d84:	8f 81       	ldd	r24, Y+7	; 0x07
    1d86:	48 2f       	mov	r20, r24
    1d88:	50 e0       	ldi	r21, 0x00	; 0
    1d8a:	ca 01       	movw	r24, r20
    1d8c:	88 0f       	add	r24, r24
    1d8e:	99 1f       	adc	r25, r25
    1d90:	9c 01       	movw	r18, r24
    1d92:	22 0f       	add	r18, r18
    1d94:	33 1f       	adc	r19, r19
    1d96:	22 0f       	add	r18, r18
    1d98:	33 1f       	adc	r19, r19
    1d9a:	22 0f       	add	r18, r18
    1d9c:	33 1f       	adc	r19, r19
    1d9e:	82 0f       	add	r24, r18
    1da0:	93 1f       	adc	r25, r19
    1da2:	84 0f       	add	r24, r20
    1da4:	95 1f       	adc	r25, r21
    1da6:	fc 01       	movw	r30, r24
    1da8:	e6 58       	subi	r30, 0x86	; 134
    1daa:	ff 4f       	sbci	r31, 0xFF	; 255
    1dac:	60 81       	ld	r22, Z
    1dae:	8f 81       	ldd	r24, Y+7	; 0x07
    1db0:	48 2f       	mov	r20, r24
    1db2:	50 e0       	ldi	r21, 0x00	; 0
    1db4:	ca 01       	movw	r24, r20
    1db6:	88 0f       	add	r24, r24
    1db8:	99 1f       	adc	r25, r25
    1dba:	9c 01       	movw	r18, r24
    1dbc:	22 0f       	add	r18, r18
    1dbe:	33 1f       	adc	r19, r19
    1dc0:	22 0f       	add	r18, r18
    1dc2:	33 1f       	adc	r19, r19
    1dc4:	22 0f       	add	r18, r18
    1dc6:	33 1f       	adc	r19, r19
    1dc8:	82 0f       	add	r24, r18
    1dca:	93 1f       	adc	r25, r19
    1dcc:	84 0f       	add	r24, r20
    1dce:	95 1f       	adc	r25, r21
    1dd0:	fc 01       	movw	r30, r24
    1dd2:	e5 58       	subi	r30, 0x85	; 133
    1dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd6:	20 81       	ld	r18, Z
    1dd8:	88 85       	ldd	r24, Y+8	; 0x08
    1dda:	88 2f       	mov	r24, r24
    1ddc:	90 e0       	ldi	r25, 0x00	; 0
    1dde:	fc 01       	movw	r30, r24
    1de0:	e8 56       	subi	r30, 0x68	; 104
    1de2:	ff 4f       	sbci	r31, 0xFF	; 255
    1de4:	80 81       	ld	r24, Z
    1de6:	82 95       	swap	r24
    1de8:	8f 70       	andi	r24, 0x0F	; 15
    1dea:	98 2f       	mov	r25, r24
    1dec:	91 70       	andi	r25, 0x01	; 1
    1dee:	86 2f       	mov	r24, r22
    1df0:	62 2f       	mov	r22, r18
    1df2:	49 2f       	mov	r20, r25
    1df4:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    1df8:	28 2f       	mov	r18, r24
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	40 e0       	ldi	r20, 0x00	; 0
    1dfe:	50 e0       	ldi	r21, 0x00	; 0
    1e00:	89 81       	ldd	r24, Y+1	; 0x01
    1e02:	9a 81       	ldd	r25, Y+2	; 0x02
    1e04:	ab 81       	ldd	r26, Y+3	; 0x03
    1e06:	bc 81       	ldd	r27, Y+4	; 0x04
    1e08:	82 2b       	or	r24, r18
    1e0a:	93 2b       	or	r25, r19
    1e0c:	a4 2b       	or	r26, r20
    1e0e:	b5 2b       	or	r27, r21
    1e10:	89 83       	std	Y+1, r24	; 0x01
    1e12:	9a 83       	std	Y+2, r25	; 0x02
    1e14:	ab 83       	std	Y+3, r26	; 0x03
    1e16:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPIN,((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin5)&Get_State_Num));
    1e18:	8f 81       	ldd	r24, Y+7	; 0x07
    1e1a:	48 2f       	mov	r20, r24
    1e1c:	50 e0       	ldi	r21, 0x00	; 0
    1e1e:	ca 01       	movw	r24, r20
    1e20:	88 0f       	add	r24, r24
    1e22:	99 1f       	adc	r25, r25
    1e24:	9c 01       	movw	r18, r24
    1e26:	22 0f       	add	r18, r18
    1e28:	33 1f       	adc	r19, r19
    1e2a:	22 0f       	add	r18, r18
    1e2c:	33 1f       	adc	r19, r19
    1e2e:	22 0f       	add	r18, r18
    1e30:	33 1f       	adc	r19, r19
    1e32:	82 0f       	add	r24, r18
    1e34:	93 1f       	adc	r25, r19
    1e36:	84 0f       	add	r24, r20
    1e38:	95 1f       	adc	r25, r21
    1e3a:	fc 01       	movw	r30, r24
    1e3c:	e4 58       	subi	r30, 0x84	; 132
    1e3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e40:	60 81       	ld	r22, Z
    1e42:	8f 81       	ldd	r24, Y+7	; 0x07
    1e44:	48 2f       	mov	r20, r24
    1e46:	50 e0       	ldi	r21, 0x00	; 0
    1e48:	ca 01       	movw	r24, r20
    1e4a:	88 0f       	add	r24, r24
    1e4c:	99 1f       	adc	r25, r25
    1e4e:	9c 01       	movw	r18, r24
    1e50:	22 0f       	add	r18, r18
    1e52:	33 1f       	adc	r19, r19
    1e54:	22 0f       	add	r18, r18
    1e56:	33 1f       	adc	r19, r19
    1e58:	22 0f       	add	r18, r18
    1e5a:	33 1f       	adc	r19, r19
    1e5c:	82 0f       	add	r24, r18
    1e5e:	93 1f       	adc	r25, r19
    1e60:	84 0f       	add	r24, r20
    1e62:	95 1f       	adc	r25, r21
    1e64:	fc 01       	movw	r30, r24
    1e66:	e3 58       	subi	r30, 0x83	; 131
    1e68:	ff 4f       	sbci	r31, 0xFF	; 255
    1e6a:	20 81       	ld	r18, Z
    1e6c:	88 85       	ldd	r24, Y+8	; 0x08
    1e6e:	88 2f       	mov	r24, r24
    1e70:	90 e0       	ldi	r25, 0x00	; 0
    1e72:	fc 01       	movw	r30, r24
    1e74:	e8 56       	subi	r30, 0x68	; 104
    1e76:	ff 4f       	sbci	r31, 0xFF	; 255
    1e78:	80 81       	ld	r24, Z
    1e7a:	82 95       	swap	r24
    1e7c:	86 95       	lsr	r24
    1e7e:	87 70       	andi	r24, 0x07	; 7
    1e80:	98 2f       	mov	r25, r24
    1e82:	91 70       	andi	r25, 0x01	; 1
    1e84:	86 2f       	mov	r24, r22
    1e86:	62 2f       	mov	r22, r18
    1e88:	49 2f       	mov	r20, r25
    1e8a:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    1e8e:	28 2f       	mov	r18, r24
    1e90:	30 e0       	ldi	r19, 0x00	; 0
    1e92:	40 e0       	ldi	r20, 0x00	; 0
    1e94:	50 e0       	ldi	r21, 0x00	; 0
    1e96:	89 81       	ldd	r24, Y+1	; 0x01
    1e98:	9a 81       	ldd	r25, Y+2	; 0x02
    1e9a:	ab 81       	ldd	r26, Y+3	; 0x03
    1e9c:	bc 81       	ldd	r27, Y+4	; 0x04
    1e9e:	82 2b       	or	r24, r18
    1ea0:	93 2b       	or	r25, r19
    1ea2:	a4 2b       	or	r26, r20
    1ea4:	b5 2b       	or	r27, r21
    1ea6:	89 83       	std	Y+1, r24	; 0x01
    1ea8:	9a 83       	std	Y+2, r25	; 0x02
    1eaa:	ab 83       	std	Y+3, r26	; 0x03
    1eac:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPIN,((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin6)&Get_State_Num));
    1eae:	8f 81       	ldd	r24, Y+7	; 0x07
    1eb0:	48 2f       	mov	r20, r24
    1eb2:	50 e0       	ldi	r21, 0x00	; 0
    1eb4:	ca 01       	movw	r24, r20
    1eb6:	88 0f       	add	r24, r24
    1eb8:	99 1f       	adc	r25, r25
    1eba:	9c 01       	movw	r18, r24
    1ebc:	22 0f       	add	r18, r18
    1ebe:	33 1f       	adc	r19, r19
    1ec0:	22 0f       	add	r18, r18
    1ec2:	33 1f       	adc	r19, r19
    1ec4:	22 0f       	add	r18, r18
    1ec6:	33 1f       	adc	r19, r19
    1ec8:	82 0f       	add	r24, r18
    1eca:	93 1f       	adc	r25, r19
    1ecc:	84 0f       	add	r24, r20
    1ece:	95 1f       	adc	r25, r21
    1ed0:	fc 01       	movw	r30, r24
    1ed2:	e2 58       	subi	r30, 0x82	; 130
    1ed4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed6:	60 81       	ld	r22, Z
    1ed8:	8f 81       	ldd	r24, Y+7	; 0x07
    1eda:	48 2f       	mov	r20, r24
    1edc:	50 e0       	ldi	r21, 0x00	; 0
    1ede:	ca 01       	movw	r24, r20
    1ee0:	88 0f       	add	r24, r24
    1ee2:	99 1f       	adc	r25, r25
    1ee4:	9c 01       	movw	r18, r24
    1ee6:	22 0f       	add	r18, r18
    1ee8:	33 1f       	adc	r19, r19
    1eea:	22 0f       	add	r18, r18
    1eec:	33 1f       	adc	r19, r19
    1eee:	22 0f       	add	r18, r18
    1ef0:	33 1f       	adc	r19, r19
    1ef2:	82 0f       	add	r24, r18
    1ef4:	93 1f       	adc	r25, r19
    1ef6:	84 0f       	add	r24, r20
    1ef8:	95 1f       	adc	r25, r21
    1efa:	fc 01       	movw	r30, r24
    1efc:	e1 58       	subi	r30, 0x81	; 129
    1efe:	ff 4f       	sbci	r31, 0xFF	; 255
    1f00:	20 81       	ld	r18, Z
    1f02:	88 85       	ldd	r24, Y+8	; 0x08
    1f04:	88 2f       	mov	r24, r24
    1f06:	90 e0       	ldi	r25, 0x00	; 0
    1f08:	fc 01       	movw	r30, r24
    1f0a:	e8 56       	subi	r30, 0x68	; 104
    1f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0e:	80 81       	ld	r24, Z
    1f10:	82 95       	swap	r24
    1f12:	86 95       	lsr	r24
    1f14:	86 95       	lsr	r24
    1f16:	83 70       	andi	r24, 0x03	; 3
    1f18:	98 2f       	mov	r25, r24
    1f1a:	91 70       	andi	r25, 0x01	; 1
    1f1c:	86 2f       	mov	r24, r22
    1f1e:	62 2f       	mov	r22, r18
    1f20:	49 2f       	mov	r20, r25
    1f22:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    1f26:	28 2f       	mov	r18, r24
    1f28:	30 e0       	ldi	r19, 0x00	; 0
    1f2a:	40 e0       	ldi	r20, 0x00	; 0
    1f2c:	50 e0       	ldi	r21, 0x00	; 0
    1f2e:	89 81       	ldd	r24, Y+1	; 0x01
    1f30:	9a 81       	ldd	r25, Y+2	; 0x02
    1f32:	ab 81       	ldd	r26, Y+3	; 0x03
    1f34:	bc 81       	ldd	r27, Y+4	; 0x04
    1f36:	82 2b       	or	r24, r18
    1f38:	93 2b       	or	r25, r19
    1f3a:	a4 2b       	or	r26, r20
    1f3c:	b5 2b       	or	r27, r21
    1f3e:	89 83       	std	Y+1, r24	; 0x01
    1f40:	9a 83       	std	Y+2, r25	; 0x02
    1f42:	ab 83       	std	Y+3, r26	; 0x03
    1f44:	bc 83       	std	Y+4, r27	; 0x04
    1f46:	56 c2       	rjmp	.+1196   	; 0x23f4 <S_Segment_enuDisplayNum+0x90a>
		}
		else if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_ANODE)
    1f48:	8f 81       	ldd	r24, Y+7	; 0x07
    1f4a:	48 2f       	mov	r20, r24
    1f4c:	50 e0       	ldi	r21, 0x00	; 0
    1f4e:	ca 01       	movw	r24, r20
    1f50:	88 0f       	add	r24, r24
    1f52:	99 1f       	adc	r25, r25
    1f54:	9c 01       	movw	r18, r24
    1f56:	22 0f       	add	r18, r18
    1f58:	33 1f       	adc	r19, r19
    1f5a:	22 0f       	add	r18, r18
    1f5c:	33 1f       	adc	r19, r19
    1f5e:	22 0f       	add	r18, r18
    1f60:	33 1f       	adc	r19, r19
    1f62:	82 0f       	add	r24, r18
    1f64:	93 1f       	adc	r25, r19
    1f66:	84 0f       	add	r24, r20
    1f68:	95 1f       	adc	r25, r21
    1f6a:	fc 01       	movw	r30, r24
    1f6c:	ec 57       	subi	r30, 0x7C	; 124
    1f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f70:	80 81       	ld	r24, Z
    1f72:	81 30       	cpi	r24, 0x01	; 1
    1f74:	09 f0       	breq	.+2      	; 0x1f78 <S_Segment_enuDisplayNum+0x48e>
    1f76:	3e c2       	rjmp	.+1148   	; 0x23f4 <S_Segment_enuDisplayNum+0x90a>
		{
			Local_u32CheckError= DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_APORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_APIN,!((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin0)&Get_State_Num));
    1f78:	8f 81       	ldd	r24, Y+7	; 0x07
    1f7a:	48 2f       	mov	r20, r24
    1f7c:	50 e0       	ldi	r21, 0x00	; 0
    1f7e:	ca 01       	movw	r24, r20
    1f80:	88 0f       	add	r24, r24
    1f82:	99 1f       	adc	r25, r25
    1f84:	9c 01       	movw	r18, r24
    1f86:	22 0f       	add	r18, r18
    1f88:	33 1f       	adc	r19, r19
    1f8a:	22 0f       	add	r18, r18
    1f8c:	33 1f       	adc	r19, r19
    1f8e:	22 0f       	add	r18, r18
    1f90:	33 1f       	adc	r19, r19
    1f92:	82 0f       	add	r24, r18
    1f94:	93 1f       	adc	r25, r19
    1f96:	84 0f       	add	r24, r20
    1f98:	95 1f       	adc	r25, r21
    1f9a:	fc 01       	movw	r30, r24
    1f9c:	ee 58       	subi	r30, 0x8E	; 142
    1f9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa0:	80 81       	ld	r24, Z
    1fa2:	8e 8f       	std	Y+30, r24	; 0x1e
    1fa4:	8f 81       	ldd	r24, Y+7	; 0x07
    1fa6:	48 2f       	mov	r20, r24
    1fa8:	50 e0       	ldi	r21, 0x00	; 0
    1faa:	ca 01       	movw	r24, r20
    1fac:	88 0f       	add	r24, r24
    1fae:	99 1f       	adc	r25, r25
    1fb0:	9c 01       	movw	r18, r24
    1fb2:	22 0f       	add	r18, r18
    1fb4:	33 1f       	adc	r19, r19
    1fb6:	22 0f       	add	r18, r18
    1fb8:	33 1f       	adc	r19, r19
    1fba:	22 0f       	add	r18, r18
    1fbc:	33 1f       	adc	r19, r19
    1fbe:	82 0f       	add	r24, r18
    1fc0:	93 1f       	adc	r25, r19
    1fc2:	84 0f       	add	r24, r20
    1fc4:	95 1f       	adc	r25, r21
    1fc6:	fc 01       	movw	r30, r24
    1fc8:	ed 58       	subi	r30, 0x8D	; 141
    1fca:	ff 4f       	sbci	r31, 0xFF	; 255
    1fcc:	80 81       	ld	r24, Z
    1fce:	8d 8f       	std	Y+29, r24	; 0x1d
    1fd0:	88 85       	ldd	r24, Y+8	; 0x08
    1fd2:	88 2f       	mov	r24, r24
    1fd4:	90 e0       	ldi	r25, 0x00	; 0
    1fd6:	fc 01       	movw	r30, r24
    1fd8:	e8 56       	subi	r30, 0x68	; 104
    1fda:	ff 4f       	sbci	r31, 0xFF	; 255
    1fdc:	80 81       	ld	r24, Z
    1fde:	88 2f       	mov	r24, r24
    1fe0:	90 e0       	ldi	r25, 0x00	; 0
    1fe2:	81 70       	andi	r24, 0x01	; 1
    1fe4:	90 70       	andi	r25, 0x00	; 0
    1fe6:	1c 8e       	std	Y+28, r1	; 0x1c
    1fe8:	00 97       	sbiw	r24, 0x00	; 0
    1fea:	11 f4       	brne	.+4      	; 0x1ff0 <S_Segment_enuDisplayNum+0x506>
    1fec:	81 e0       	ldi	r24, 0x01	; 1
    1fee:	8c 8f       	std	Y+28, r24	; 0x1c
    1ff0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1ff2:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1ff4:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1ff6:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    1ffa:	88 2f       	mov	r24, r24
    1ffc:	90 e0       	ldi	r25, 0x00	; 0
    1ffe:	a0 e0       	ldi	r26, 0x00	; 0
    2000:	b0 e0       	ldi	r27, 0x00	; 0
    2002:	89 83       	std	Y+1, r24	; 0x01
    2004:	9a 83       	std	Y+2, r25	; 0x02
    2006:	ab 83       	std	Y+3, r26	; 0x03
    2008:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_BPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_BPIN,!((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin1)&Get_State_Num));
    200a:	8f 81       	ldd	r24, Y+7	; 0x07
    200c:	48 2f       	mov	r20, r24
    200e:	50 e0       	ldi	r21, 0x00	; 0
    2010:	ca 01       	movw	r24, r20
    2012:	88 0f       	add	r24, r24
    2014:	99 1f       	adc	r25, r25
    2016:	9c 01       	movw	r18, r24
    2018:	22 0f       	add	r18, r18
    201a:	33 1f       	adc	r19, r19
    201c:	22 0f       	add	r18, r18
    201e:	33 1f       	adc	r19, r19
    2020:	22 0f       	add	r18, r18
    2022:	33 1f       	adc	r19, r19
    2024:	82 0f       	add	r24, r18
    2026:	93 1f       	adc	r25, r19
    2028:	84 0f       	add	r24, r20
    202a:	95 1f       	adc	r25, r21
    202c:	fc 01       	movw	r30, r24
    202e:	ec 58       	subi	r30, 0x8C	; 140
    2030:	ff 4f       	sbci	r31, 0xFF	; 255
    2032:	80 81       	ld	r24, Z
    2034:	8b 8f       	std	Y+27, r24	; 0x1b
    2036:	8f 81       	ldd	r24, Y+7	; 0x07
    2038:	48 2f       	mov	r20, r24
    203a:	50 e0       	ldi	r21, 0x00	; 0
    203c:	ca 01       	movw	r24, r20
    203e:	88 0f       	add	r24, r24
    2040:	99 1f       	adc	r25, r25
    2042:	9c 01       	movw	r18, r24
    2044:	22 0f       	add	r18, r18
    2046:	33 1f       	adc	r19, r19
    2048:	22 0f       	add	r18, r18
    204a:	33 1f       	adc	r19, r19
    204c:	22 0f       	add	r18, r18
    204e:	33 1f       	adc	r19, r19
    2050:	82 0f       	add	r24, r18
    2052:	93 1f       	adc	r25, r19
    2054:	84 0f       	add	r24, r20
    2056:	95 1f       	adc	r25, r21
    2058:	fc 01       	movw	r30, r24
    205a:	eb 58       	subi	r30, 0x8B	; 139
    205c:	ff 4f       	sbci	r31, 0xFF	; 255
    205e:	80 81       	ld	r24, Z
    2060:	8a 8f       	std	Y+26, r24	; 0x1a
    2062:	88 85       	ldd	r24, Y+8	; 0x08
    2064:	88 2f       	mov	r24, r24
    2066:	90 e0       	ldi	r25, 0x00	; 0
    2068:	fc 01       	movw	r30, r24
    206a:	e8 56       	subi	r30, 0x68	; 104
    206c:	ff 4f       	sbci	r31, 0xFF	; 255
    206e:	80 81       	ld	r24, Z
    2070:	86 95       	lsr	r24
    2072:	88 2f       	mov	r24, r24
    2074:	90 e0       	ldi	r25, 0x00	; 0
    2076:	81 70       	andi	r24, 0x01	; 1
    2078:	90 70       	andi	r25, 0x00	; 0
    207a:	19 8e       	std	Y+25, r1	; 0x19
    207c:	00 97       	sbiw	r24, 0x00	; 0
    207e:	11 f4       	brne	.+4      	; 0x2084 <S_Segment_enuDisplayNum+0x59a>
    2080:	81 e0       	ldi	r24, 0x01	; 1
    2082:	89 8f       	std	Y+25, r24	; 0x19
    2084:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2086:	6a 8d       	ldd	r22, Y+26	; 0x1a
    2088:	49 8d       	ldd	r20, Y+25	; 0x19
    208a:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    208e:	28 2f       	mov	r18, r24
    2090:	30 e0       	ldi	r19, 0x00	; 0
    2092:	40 e0       	ldi	r20, 0x00	; 0
    2094:	50 e0       	ldi	r21, 0x00	; 0
    2096:	89 81       	ldd	r24, Y+1	; 0x01
    2098:	9a 81       	ldd	r25, Y+2	; 0x02
    209a:	ab 81       	ldd	r26, Y+3	; 0x03
    209c:	bc 81       	ldd	r27, Y+4	; 0x04
    209e:	82 2b       	or	r24, r18
    20a0:	93 2b       	or	r25, r19
    20a2:	a4 2b       	or	r26, r20
    20a4:	b5 2b       	or	r27, r21
    20a6:	89 83       	std	Y+1, r24	; 0x01
    20a8:	9a 83       	std	Y+2, r25	; 0x02
    20aa:	ab 83       	std	Y+3, r26	; 0x03
    20ac:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CPIN,!((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin2)&Get_State_Num));
    20ae:	8f 81       	ldd	r24, Y+7	; 0x07
    20b0:	48 2f       	mov	r20, r24
    20b2:	50 e0       	ldi	r21, 0x00	; 0
    20b4:	ca 01       	movw	r24, r20
    20b6:	88 0f       	add	r24, r24
    20b8:	99 1f       	adc	r25, r25
    20ba:	9c 01       	movw	r18, r24
    20bc:	22 0f       	add	r18, r18
    20be:	33 1f       	adc	r19, r19
    20c0:	22 0f       	add	r18, r18
    20c2:	33 1f       	adc	r19, r19
    20c4:	22 0f       	add	r18, r18
    20c6:	33 1f       	adc	r19, r19
    20c8:	82 0f       	add	r24, r18
    20ca:	93 1f       	adc	r25, r19
    20cc:	84 0f       	add	r24, r20
    20ce:	95 1f       	adc	r25, r21
    20d0:	fc 01       	movw	r30, r24
    20d2:	ea 58       	subi	r30, 0x8A	; 138
    20d4:	ff 4f       	sbci	r31, 0xFF	; 255
    20d6:	80 81       	ld	r24, Z
    20d8:	88 8f       	std	Y+24, r24	; 0x18
    20da:	8f 81       	ldd	r24, Y+7	; 0x07
    20dc:	48 2f       	mov	r20, r24
    20de:	50 e0       	ldi	r21, 0x00	; 0
    20e0:	ca 01       	movw	r24, r20
    20e2:	88 0f       	add	r24, r24
    20e4:	99 1f       	adc	r25, r25
    20e6:	9c 01       	movw	r18, r24
    20e8:	22 0f       	add	r18, r18
    20ea:	33 1f       	adc	r19, r19
    20ec:	22 0f       	add	r18, r18
    20ee:	33 1f       	adc	r19, r19
    20f0:	22 0f       	add	r18, r18
    20f2:	33 1f       	adc	r19, r19
    20f4:	82 0f       	add	r24, r18
    20f6:	93 1f       	adc	r25, r19
    20f8:	84 0f       	add	r24, r20
    20fa:	95 1f       	adc	r25, r21
    20fc:	fc 01       	movw	r30, r24
    20fe:	e9 58       	subi	r30, 0x89	; 137
    2100:	ff 4f       	sbci	r31, 0xFF	; 255
    2102:	80 81       	ld	r24, Z
    2104:	8f 8b       	std	Y+23, r24	; 0x17
    2106:	88 85       	ldd	r24, Y+8	; 0x08
    2108:	88 2f       	mov	r24, r24
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	fc 01       	movw	r30, r24
    210e:	e8 56       	subi	r30, 0x68	; 104
    2110:	ff 4f       	sbci	r31, 0xFF	; 255
    2112:	80 81       	ld	r24, Z
    2114:	86 95       	lsr	r24
    2116:	86 95       	lsr	r24
    2118:	88 2f       	mov	r24, r24
    211a:	90 e0       	ldi	r25, 0x00	; 0
    211c:	81 70       	andi	r24, 0x01	; 1
    211e:	90 70       	andi	r25, 0x00	; 0
    2120:	1e 8a       	std	Y+22, r1	; 0x16
    2122:	00 97       	sbiw	r24, 0x00	; 0
    2124:	11 f4       	brne	.+4      	; 0x212a <S_Segment_enuDisplayNum+0x640>
    2126:	81 e0       	ldi	r24, 0x01	; 1
    2128:	8e 8b       	std	Y+22, r24	; 0x16
    212a:	88 8d       	ldd	r24, Y+24	; 0x18
    212c:	6f 89       	ldd	r22, Y+23	; 0x17
    212e:	4e 89       	ldd	r20, Y+22	; 0x16
    2130:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2134:	28 2f       	mov	r18, r24
    2136:	30 e0       	ldi	r19, 0x00	; 0
    2138:	40 e0       	ldi	r20, 0x00	; 0
    213a:	50 e0       	ldi	r21, 0x00	; 0
    213c:	89 81       	ldd	r24, Y+1	; 0x01
    213e:	9a 81       	ldd	r25, Y+2	; 0x02
    2140:	ab 81       	ldd	r26, Y+3	; 0x03
    2142:	bc 81       	ldd	r27, Y+4	; 0x04
    2144:	82 2b       	or	r24, r18
    2146:	93 2b       	or	r25, r19
    2148:	a4 2b       	or	r26, r20
    214a:	b5 2b       	or	r27, r21
    214c:	89 83       	std	Y+1, r24	; 0x01
    214e:	9a 83       	std	Y+2, r25	; 0x02
    2150:	ab 83       	std	Y+3, r26	; 0x03
    2152:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DPIN,!((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin3)&Get_State_Num));
    2154:	8f 81       	ldd	r24, Y+7	; 0x07
    2156:	48 2f       	mov	r20, r24
    2158:	50 e0       	ldi	r21, 0x00	; 0
    215a:	ca 01       	movw	r24, r20
    215c:	88 0f       	add	r24, r24
    215e:	99 1f       	adc	r25, r25
    2160:	9c 01       	movw	r18, r24
    2162:	22 0f       	add	r18, r18
    2164:	33 1f       	adc	r19, r19
    2166:	22 0f       	add	r18, r18
    2168:	33 1f       	adc	r19, r19
    216a:	22 0f       	add	r18, r18
    216c:	33 1f       	adc	r19, r19
    216e:	82 0f       	add	r24, r18
    2170:	93 1f       	adc	r25, r19
    2172:	84 0f       	add	r24, r20
    2174:	95 1f       	adc	r25, r21
    2176:	fc 01       	movw	r30, r24
    2178:	e8 58       	subi	r30, 0x88	; 136
    217a:	ff 4f       	sbci	r31, 0xFF	; 255
    217c:	80 81       	ld	r24, Z
    217e:	8d 8b       	std	Y+21, r24	; 0x15
    2180:	8f 81       	ldd	r24, Y+7	; 0x07
    2182:	48 2f       	mov	r20, r24
    2184:	50 e0       	ldi	r21, 0x00	; 0
    2186:	ca 01       	movw	r24, r20
    2188:	88 0f       	add	r24, r24
    218a:	99 1f       	adc	r25, r25
    218c:	9c 01       	movw	r18, r24
    218e:	22 0f       	add	r18, r18
    2190:	33 1f       	adc	r19, r19
    2192:	22 0f       	add	r18, r18
    2194:	33 1f       	adc	r19, r19
    2196:	22 0f       	add	r18, r18
    2198:	33 1f       	adc	r19, r19
    219a:	82 0f       	add	r24, r18
    219c:	93 1f       	adc	r25, r19
    219e:	84 0f       	add	r24, r20
    21a0:	95 1f       	adc	r25, r21
    21a2:	fc 01       	movw	r30, r24
    21a4:	e7 58       	subi	r30, 0x87	; 135
    21a6:	ff 4f       	sbci	r31, 0xFF	; 255
    21a8:	80 81       	ld	r24, Z
    21aa:	8c 8b       	std	Y+20, r24	; 0x14
    21ac:	88 85       	ldd	r24, Y+8	; 0x08
    21ae:	88 2f       	mov	r24, r24
    21b0:	90 e0       	ldi	r25, 0x00	; 0
    21b2:	fc 01       	movw	r30, r24
    21b4:	e8 56       	subi	r30, 0x68	; 104
    21b6:	ff 4f       	sbci	r31, 0xFF	; 255
    21b8:	80 81       	ld	r24, Z
    21ba:	86 95       	lsr	r24
    21bc:	86 95       	lsr	r24
    21be:	86 95       	lsr	r24
    21c0:	88 2f       	mov	r24, r24
    21c2:	90 e0       	ldi	r25, 0x00	; 0
    21c4:	81 70       	andi	r24, 0x01	; 1
    21c6:	90 70       	andi	r25, 0x00	; 0
    21c8:	1b 8a       	std	Y+19, r1	; 0x13
    21ca:	00 97       	sbiw	r24, 0x00	; 0
    21cc:	11 f4       	brne	.+4      	; 0x21d2 <S_Segment_enuDisplayNum+0x6e8>
    21ce:	81 e0       	ldi	r24, 0x01	; 1
    21d0:	8b 8b       	std	Y+19, r24	; 0x13
    21d2:	8d 89       	ldd	r24, Y+21	; 0x15
    21d4:	6c 89       	ldd	r22, Y+20	; 0x14
    21d6:	4b 89       	ldd	r20, Y+19	; 0x13
    21d8:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    21dc:	28 2f       	mov	r18, r24
    21de:	30 e0       	ldi	r19, 0x00	; 0
    21e0:	40 e0       	ldi	r20, 0x00	; 0
    21e2:	50 e0       	ldi	r21, 0x00	; 0
    21e4:	89 81       	ldd	r24, Y+1	; 0x01
    21e6:	9a 81       	ldd	r25, Y+2	; 0x02
    21e8:	ab 81       	ldd	r26, Y+3	; 0x03
    21ea:	bc 81       	ldd	r27, Y+4	; 0x04
    21ec:	82 2b       	or	r24, r18
    21ee:	93 2b       	or	r25, r19
    21f0:	a4 2b       	or	r26, r20
    21f2:	b5 2b       	or	r27, r21
    21f4:	89 83       	std	Y+1, r24	; 0x01
    21f6:	9a 83       	std	Y+2, r25	; 0x02
    21f8:	ab 83       	std	Y+3, r26	; 0x03
    21fa:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_EPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_EPIN,!((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin4)&Get_State_Num));
    21fc:	8f 81       	ldd	r24, Y+7	; 0x07
    21fe:	48 2f       	mov	r20, r24
    2200:	50 e0       	ldi	r21, 0x00	; 0
    2202:	ca 01       	movw	r24, r20
    2204:	88 0f       	add	r24, r24
    2206:	99 1f       	adc	r25, r25
    2208:	9c 01       	movw	r18, r24
    220a:	22 0f       	add	r18, r18
    220c:	33 1f       	adc	r19, r19
    220e:	22 0f       	add	r18, r18
    2210:	33 1f       	adc	r19, r19
    2212:	22 0f       	add	r18, r18
    2214:	33 1f       	adc	r19, r19
    2216:	82 0f       	add	r24, r18
    2218:	93 1f       	adc	r25, r19
    221a:	84 0f       	add	r24, r20
    221c:	95 1f       	adc	r25, r21
    221e:	fc 01       	movw	r30, r24
    2220:	e6 58       	subi	r30, 0x86	; 134
    2222:	ff 4f       	sbci	r31, 0xFF	; 255
    2224:	80 81       	ld	r24, Z
    2226:	8a 8b       	std	Y+18, r24	; 0x12
    2228:	8f 81       	ldd	r24, Y+7	; 0x07
    222a:	48 2f       	mov	r20, r24
    222c:	50 e0       	ldi	r21, 0x00	; 0
    222e:	ca 01       	movw	r24, r20
    2230:	88 0f       	add	r24, r24
    2232:	99 1f       	adc	r25, r25
    2234:	9c 01       	movw	r18, r24
    2236:	22 0f       	add	r18, r18
    2238:	33 1f       	adc	r19, r19
    223a:	22 0f       	add	r18, r18
    223c:	33 1f       	adc	r19, r19
    223e:	22 0f       	add	r18, r18
    2240:	33 1f       	adc	r19, r19
    2242:	82 0f       	add	r24, r18
    2244:	93 1f       	adc	r25, r19
    2246:	84 0f       	add	r24, r20
    2248:	95 1f       	adc	r25, r21
    224a:	fc 01       	movw	r30, r24
    224c:	e5 58       	subi	r30, 0x85	; 133
    224e:	ff 4f       	sbci	r31, 0xFF	; 255
    2250:	80 81       	ld	r24, Z
    2252:	89 8b       	std	Y+17, r24	; 0x11
    2254:	88 85       	ldd	r24, Y+8	; 0x08
    2256:	88 2f       	mov	r24, r24
    2258:	90 e0       	ldi	r25, 0x00	; 0
    225a:	fc 01       	movw	r30, r24
    225c:	e8 56       	subi	r30, 0x68	; 104
    225e:	ff 4f       	sbci	r31, 0xFF	; 255
    2260:	80 81       	ld	r24, Z
    2262:	82 95       	swap	r24
    2264:	8f 70       	andi	r24, 0x0F	; 15
    2266:	88 2f       	mov	r24, r24
    2268:	90 e0       	ldi	r25, 0x00	; 0
    226a:	81 70       	andi	r24, 0x01	; 1
    226c:	90 70       	andi	r25, 0x00	; 0
    226e:	18 8a       	std	Y+16, r1	; 0x10
    2270:	00 97       	sbiw	r24, 0x00	; 0
    2272:	11 f4       	brne	.+4      	; 0x2278 <S_Segment_enuDisplayNum+0x78e>
    2274:	81 e0       	ldi	r24, 0x01	; 1
    2276:	88 8b       	std	Y+16, r24	; 0x10
    2278:	8a 89       	ldd	r24, Y+18	; 0x12
    227a:	69 89       	ldd	r22, Y+17	; 0x11
    227c:	48 89       	ldd	r20, Y+16	; 0x10
    227e:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2282:	28 2f       	mov	r18, r24
    2284:	30 e0       	ldi	r19, 0x00	; 0
    2286:	40 e0       	ldi	r20, 0x00	; 0
    2288:	50 e0       	ldi	r21, 0x00	; 0
    228a:	89 81       	ldd	r24, Y+1	; 0x01
    228c:	9a 81       	ldd	r25, Y+2	; 0x02
    228e:	ab 81       	ldd	r26, Y+3	; 0x03
    2290:	bc 81       	ldd	r27, Y+4	; 0x04
    2292:	82 2b       	or	r24, r18
    2294:	93 2b       	or	r25, r19
    2296:	a4 2b       	or	r26, r20
    2298:	b5 2b       	or	r27, r21
    229a:	89 83       	std	Y+1, r24	; 0x01
    229c:	9a 83       	std	Y+2, r25	; 0x02
    229e:	ab 83       	std	Y+3, r26	; 0x03
    22a0:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPIN,!((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin5)&Get_State_Num));
    22a2:	8f 81       	ldd	r24, Y+7	; 0x07
    22a4:	48 2f       	mov	r20, r24
    22a6:	50 e0       	ldi	r21, 0x00	; 0
    22a8:	ca 01       	movw	r24, r20
    22aa:	88 0f       	add	r24, r24
    22ac:	99 1f       	adc	r25, r25
    22ae:	9c 01       	movw	r18, r24
    22b0:	22 0f       	add	r18, r18
    22b2:	33 1f       	adc	r19, r19
    22b4:	22 0f       	add	r18, r18
    22b6:	33 1f       	adc	r19, r19
    22b8:	22 0f       	add	r18, r18
    22ba:	33 1f       	adc	r19, r19
    22bc:	82 0f       	add	r24, r18
    22be:	93 1f       	adc	r25, r19
    22c0:	84 0f       	add	r24, r20
    22c2:	95 1f       	adc	r25, r21
    22c4:	fc 01       	movw	r30, r24
    22c6:	e4 58       	subi	r30, 0x84	; 132
    22c8:	ff 4f       	sbci	r31, 0xFF	; 255
    22ca:	80 81       	ld	r24, Z
    22cc:	8f 87       	std	Y+15, r24	; 0x0f
    22ce:	8f 81       	ldd	r24, Y+7	; 0x07
    22d0:	48 2f       	mov	r20, r24
    22d2:	50 e0       	ldi	r21, 0x00	; 0
    22d4:	ca 01       	movw	r24, r20
    22d6:	88 0f       	add	r24, r24
    22d8:	99 1f       	adc	r25, r25
    22da:	9c 01       	movw	r18, r24
    22dc:	22 0f       	add	r18, r18
    22de:	33 1f       	adc	r19, r19
    22e0:	22 0f       	add	r18, r18
    22e2:	33 1f       	adc	r19, r19
    22e4:	22 0f       	add	r18, r18
    22e6:	33 1f       	adc	r19, r19
    22e8:	82 0f       	add	r24, r18
    22ea:	93 1f       	adc	r25, r19
    22ec:	84 0f       	add	r24, r20
    22ee:	95 1f       	adc	r25, r21
    22f0:	fc 01       	movw	r30, r24
    22f2:	e3 58       	subi	r30, 0x83	; 131
    22f4:	ff 4f       	sbci	r31, 0xFF	; 255
    22f6:	80 81       	ld	r24, Z
    22f8:	8e 87       	std	Y+14, r24	; 0x0e
    22fa:	88 85       	ldd	r24, Y+8	; 0x08
    22fc:	88 2f       	mov	r24, r24
    22fe:	90 e0       	ldi	r25, 0x00	; 0
    2300:	fc 01       	movw	r30, r24
    2302:	e8 56       	subi	r30, 0x68	; 104
    2304:	ff 4f       	sbci	r31, 0xFF	; 255
    2306:	80 81       	ld	r24, Z
    2308:	82 95       	swap	r24
    230a:	86 95       	lsr	r24
    230c:	87 70       	andi	r24, 0x07	; 7
    230e:	88 2f       	mov	r24, r24
    2310:	90 e0       	ldi	r25, 0x00	; 0
    2312:	81 70       	andi	r24, 0x01	; 1
    2314:	90 70       	andi	r25, 0x00	; 0
    2316:	1d 86       	std	Y+13, r1	; 0x0d
    2318:	00 97       	sbiw	r24, 0x00	; 0
    231a:	11 f4       	brne	.+4      	; 0x2320 <S_Segment_enuDisplayNum+0x836>
    231c:	81 e0       	ldi	r24, 0x01	; 1
    231e:	8d 87       	std	Y+13, r24	; 0x0d
    2320:	8f 85       	ldd	r24, Y+15	; 0x0f
    2322:	6e 85       	ldd	r22, Y+14	; 0x0e
    2324:	4d 85       	ldd	r20, Y+13	; 0x0d
    2326:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    232a:	28 2f       	mov	r18, r24
    232c:	30 e0       	ldi	r19, 0x00	; 0
    232e:	40 e0       	ldi	r20, 0x00	; 0
    2330:	50 e0       	ldi	r21, 0x00	; 0
    2332:	89 81       	ldd	r24, Y+1	; 0x01
    2334:	9a 81       	ldd	r25, Y+2	; 0x02
    2336:	ab 81       	ldd	r26, Y+3	; 0x03
    2338:	bc 81       	ldd	r27, Y+4	; 0x04
    233a:	82 2b       	or	r24, r18
    233c:	93 2b       	or	r25, r19
    233e:	a4 2b       	or	r26, r20
    2340:	b5 2b       	or	r27, r21
    2342:	89 83       	std	Y+1, r24	; 0x01
    2344:	9a 83       	std	Y+2, r25	; 0x02
    2346:	ab 83       	std	Y+3, r26	; 0x03
    2348:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPIN,!((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin6)&Get_State_Num));
    234a:	8f 81       	ldd	r24, Y+7	; 0x07
    234c:	48 2f       	mov	r20, r24
    234e:	50 e0       	ldi	r21, 0x00	; 0
    2350:	ca 01       	movw	r24, r20
    2352:	88 0f       	add	r24, r24
    2354:	99 1f       	adc	r25, r25
    2356:	9c 01       	movw	r18, r24
    2358:	22 0f       	add	r18, r18
    235a:	33 1f       	adc	r19, r19
    235c:	22 0f       	add	r18, r18
    235e:	33 1f       	adc	r19, r19
    2360:	22 0f       	add	r18, r18
    2362:	33 1f       	adc	r19, r19
    2364:	82 0f       	add	r24, r18
    2366:	93 1f       	adc	r25, r19
    2368:	84 0f       	add	r24, r20
    236a:	95 1f       	adc	r25, r21
    236c:	fc 01       	movw	r30, r24
    236e:	e2 58       	subi	r30, 0x82	; 130
    2370:	ff 4f       	sbci	r31, 0xFF	; 255
    2372:	80 81       	ld	r24, Z
    2374:	8c 87       	std	Y+12, r24	; 0x0c
    2376:	8f 81       	ldd	r24, Y+7	; 0x07
    2378:	48 2f       	mov	r20, r24
    237a:	50 e0       	ldi	r21, 0x00	; 0
    237c:	ca 01       	movw	r24, r20
    237e:	88 0f       	add	r24, r24
    2380:	99 1f       	adc	r25, r25
    2382:	9c 01       	movw	r18, r24
    2384:	22 0f       	add	r18, r18
    2386:	33 1f       	adc	r19, r19
    2388:	22 0f       	add	r18, r18
    238a:	33 1f       	adc	r19, r19
    238c:	22 0f       	add	r18, r18
    238e:	33 1f       	adc	r19, r19
    2390:	82 0f       	add	r24, r18
    2392:	93 1f       	adc	r25, r19
    2394:	84 0f       	add	r24, r20
    2396:	95 1f       	adc	r25, r21
    2398:	fc 01       	movw	r30, r24
    239a:	e1 58       	subi	r30, 0x81	; 129
    239c:	ff 4f       	sbci	r31, 0xFF	; 255
    239e:	80 81       	ld	r24, Z
    23a0:	8b 87       	std	Y+11, r24	; 0x0b
    23a2:	88 85       	ldd	r24, Y+8	; 0x08
    23a4:	88 2f       	mov	r24, r24
    23a6:	90 e0       	ldi	r25, 0x00	; 0
    23a8:	fc 01       	movw	r30, r24
    23aa:	e8 56       	subi	r30, 0x68	; 104
    23ac:	ff 4f       	sbci	r31, 0xFF	; 255
    23ae:	80 81       	ld	r24, Z
    23b0:	82 95       	swap	r24
    23b2:	86 95       	lsr	r24
    23b4:	86 95       	lsr	r24
    23b6:	83 70       	andi	r24, 0x03	; 3
    23b8:	88 2f       	mov	r24, r24
    23ba:	90 e0       	ldi	r25, 0x00	; 0
    23bc:	81 70       	andi	r24, 0x01	; 1
    23be:	90 70       	andi	r25, 0x00	; 0
    23c0:	1a 86       	std	Y+10, r1	; 0x0a
    23c2:	00 97       	sbiw	r24, 0x00	; 0
    23c4:	11 f4       	brne	.+4      	; 0x23ca <S_Segment_enuDisplayNum+0x8e0>
    23c6:	81 e0       	ldi	r24, 0x01	; 1
    23c8:	8a 87       	std	Y+10, r24	; 0x0a
    23ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    23cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    23ce:	4a 85       	ldd	r20, Y+10	; 0x0a
    23d0:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    23d4:	28 2f       	mov	r18, r24
    23d6:	30 e0       	ldi	r19, 0x00	; 0
    23d8:	40 e0       	ldi	r20, 0x00	; 0
    23da:	50 e0       	ldi	r21, 0x00	; 0
    23dc:	89 81       	ldd	r24, Y+1	; 0x01
    23de:	9a 81       	ldd	r25, Y+2	; 0x02
    23e0:	ab 81       	ldd	r26, Y+3	; 0x03
    23e2:	bc 81       	ldd	r27, Y+4	; 0x04
    23e4:	82 2b       	or	r24, r18
    23e6:	93 2b       	or	r25, r19
    23e8:	a4 2b       	or	r26, r20
    23ea:	b5 2b       	or	r27, r21
    23ec:	89 83       	std	Y+1, r24	; 0x01
    23ee:	9a 83       	std	Y+2, r25	; 0x02
    23f0:	ab 83       	std	Y+3, r26	; 0x03
    23f2:	bc 83       	std	Y+4, r27	; 0x04
		}
	}
	for(Local_u8Iter=0 ; Local_u8Iter < sizeof(Local_u8Iter)*8 ; Local_u8Iter+=3)
    23f4:	1d 82       	std	Y+5, r1	; 0x05
    23f6:	1e c0       	rjmp	.+60     	; 0x2434 <S_Segment_enuDisplayNum+0x94a>
			 {
				 if( ( ( (Local_u32CheckError)>>Local_u8Iter) &7 ) !=ES_OK )
    23f8:	8d 81       	ldd	r24, Y+5	; 0x05
    23fa:	28 2f       	mov	r18, r24
    23fc:	30 e0       	ldi	r19, 0x00	; 0
    23fe:	89 81       	ldd	r24, Y+1	; 0x01
    2400:	9a 81       	ldd	r25, Y+2	; 0x02
    2402:	ab 81       	ldd	r26, Y+3	; 0x03
    2404:	bc 81       	ldd	r27, Y+4	; 0x04
    2406:	02 2e       	mov	r0, r18
    2408:	04 c0       	rjmp	.+8      	; 0x2412 <S_Segment_enuDisplayNum+0x928>
    240a:	b6 95       	lsr	r27
    240c:	a7 95       	ror	r26
    240e:	97 95       	ror	r25
    2410:	87 95       	ror	r24
    2412:	0a 94       	dec	r0
    2414:	d2 f7       	brpl	.-12     	; 0x240a <S_Segment_enuDisplayNum+0x920>
    2416:	87 70       	andi	r24, 0x07	; 7
    2418:	90 70       	andi	r25, 0x00	; 0
    241a:	a0 70       	andi	r26, 0x00	; 0
    241c:	b0 70       	andi	r27, 0x00	; 0
    241e:	00 97       	sbiw	r24, 0x00	; 0
    2420:	a1 05       	cpc	r26, r1
    2422:	b1 05       	cpc	r27, r1
    2424:	19 f0       	breq	.+6      	; 0x242c <S_Segment_enuDisplayNum+0x942>
				 {
					 return Local_enuErrorState;
    2426:	8e 81       	ldd	r24, Y+6	; 0x06
    2428:	89 87       	std	Y+9, r24	; 0x09
    242a:	09 c0       	rjmp	.+18     	; 0x243e <S_Segment_enuDisplayNum+0x954>
				 }
				 else
				 {
					 Local_enuErrorState=ES_OK;
    242c:	1e 82       	std	Y+6, r1	; 0x06
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_EPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_EPIN,!((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin4)&Get_State_Num));
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPIN,!((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin5)&Get_State_Num));
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPIN,!((SEG_Au8DiaplayNum[Copy_u8Num]>>Pin6)&Get_State_Num));
		}
	}
	for(Local_u8Iter=0 ; Local_u8Iter < sizeof(Local_u8Iter)*8 ; Local_u8Iter+=3)
    242e:	8d 81       	ldd	r24, Y+5	; 0x05
    2430:	8d 5f       	subi	r24, 0xFD	; 253
    2432:	8d 83       	std	Y+5, r24	; 0x05
    2434:	8d 81       	ldd	r24, Y+5	; 0x05
    2436:	88 30       	cpi	r24, 0x08	; 8
    2438:	f8 f2       	brcs	.-66     	; 0x23f8 <S_Segment_enuDisplayNum+0x90e>
				 else
				 {
					 Local_enuErrorState=ES_OK;
				 }
			 }
	return Local_enuErrorState;
    243a:	8e 81       	ldd	r24, Y+6	; 0x06
    243c:	89 87       	std	Y+9, r24	; 0x09
    243e:	89 85       	ldd	r24, Y+9	; 0x09
}
    2440:	6e 96       	adiw	r28, 0x1e	; 30
    2442:	0f b6       	in	r0, 0x3f	; 63
    2444:	f8 94       	cli
    2446:	de bf       	out	0x3e, r29	; 62
    2448:	0f be       	out	0x3f, r0	; 63
    244a:	cd bf       	out	0x3d, r28	; 61
    244c:	cf 91       	pop	r28
    244e:	df 91       	pop	r29
    2450:	08 95       	ret

00002452 <S_Segment_enuEnableCommon>:

ES_t S_Segment_enuEnableCommon(u8 Copy_u8SegID)
{
    2452:	df 93       	push	r29
    2454:	cf 93       	push	r28
    2456:	00 d0       	rcall	.+0      	; 0x2458 <S_Segment_enuEnableCommon+0x6>
    2458:	cd b7       	in	r28, 0x3d	; 61
    245a:	de b7       	in	r29, 0x3e	; 62
    245c:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState=ES_NOK;
    245e:	81 e0       	ldi	r24, 0x01	; 1
    2460:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8SegID<SS_Num)
    2462:	8a 81       	ldd	r24, Y+2	; 0x02
    2464:	82 30       	cpi	r24, 0x02	; 2
    2466:	08 f0       	brcs	.+2      	; 0x246a <S_Segment_enuEnableCommon+0x18>
    2468:	bf c0       	rjmp	.+382    	; 0x25e8 <S_Segment_enuEnableCommon+0x196>
	{
		if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPIN != NOT_CONNECTED && S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPORT != NOT_CONNECTED )
    246a:	8a 81       	ldd	r24, Y+2	; 0x02
    246c:	48 2f       	mov	r20, r24
    246e:	50 e0       	ldi	r21, 0x00	; 0
    2470:	ca 01       	movw	r24, r20
    2472:	88 0f       	add	r24, r24
    2474:	99 1f       	adc	r25, r25
    2476:	9c 01       	movw	r18, r24
    2478:	22 0f       	add	r18, r18
    247a:	33 1f       	adc	r19, r19
    247c:	22 0f       	add	r18, r18
    247e:	33 1f       	adc	r19, r19
    2480:	22 0f       	add	r18, r18
    2482:	33 1f       	adc	r19, r19
    2484:	82 0f       	add	r24, r18
    2486:	93 1f       	adc	r25, r19
    2488:	84 0f       	add	r24, r20
    248a:	95 1f       	adc	r25, r21
    248c:	fc 01       	movw	r30, r24
    248e:	ef 57       	subi	r30, 0x7F	; 127
    2490:	ff 4f       	sbci	r31, 0xFF	; 255
    2492:	80 81       	ld	r24, Z
    2494:	8b 30       	cpi	r24, 0x0B	; 11
    2496:	09 f4       	brne	.+2      	; 0x249a <S_Segment_enuEnableCommon+0x48>
    2498:	a7 c0       	rjmp	.+334    	; 0x25e8 <S_Segment_enuEnableCommon+0x196>
    249a:	8a 81       	ldd	r24, Y+2	; 0x02
    249c:	48 2f       	mov	r20, r24
    249e:	50 e0       	ldi	r21, 0x00	; 0
    24a0:	ca 01       	movw	r24, r20
    24a2:	88 0f       	add	r24, r24
    24a4:	99 1f       	adc	r25, r25
    24a6:	9c 01       	movw	r18, r24
    24a8:	22 0f       	add	r18, r18
    24aa:	33 1f       	adc	r19, r19
    24ac:	22 0f       	add	r18, r18
    24ae:	33 1f       	adc	r19, r19
    24b0:	22 0f       	add	r18, r18
    24b2:	33 1f       	adc	r19, r19
    24b4:	82 0f       	add	r24, r18
    24b6:	93 1f       	adc	r25, r19
    24b8:	84 0f       	add	r24, r20
    24ba:	95 1f       	adc	r25, r21
    24bc:	fc 01       	movw	r30, r24
    24be:	e0 58       	subi	r30, 0x80	; 128
    24c0:	ff 4f       	sbci	r31, 0xFF	; 255
    24c2:	80 81       	ld	r24, Z
    24c4:	8b 30       	cpi	r24, 0x0B	; 11
    24c6:	09 f4       	brne	.+2      	; 0x24ca <S_Segment_enuEnableCommon+0x78>
    24c8:	8f c0       	rjmp	.+286    	; 0x25e8 <S_Segment_enuEnableCommon+0x196>
		{
			if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_CATHODE)
    24ca:	8a 81       	ldd	r24, Y+2	; 0x02
    24cc:	48 2f       	mov	r20, r24
    24ce:	50 e0       	ldi	r21, 0x00	; 0
    24d0:	ca 01       	movw	r24, r20
    24d2:	88 0f       	add	r24, r24
    24d4:	99 1f       	adc	r25, r25
    24d6:	9c 01       	movw	r18, r24
    24d8:	22 0f       	add	r18, r18
    24da:	33 1f       	adc	r19, r19
    24dc:	22 0f       	add	r18, r18
    24de:	33 1f       	adc	r19, r19
    24e0:	22 0f       	add	r18, r18
    24e2:	33 1f       	adc	r19, r19
    24e4:	82 0f       	add	r24, r18
    24e6:	93 1f       	adc	r25, r19
    24e8:	84 0f       	add	r24, r20
    24ea:	95 1f       	adc	r25, r21
    24ec:	fc 01       	movw	r30, r24
    24ee:	ec 57       	subi	r30, 0x7C	; 124
    24f0:	ff 4f       	sbci	r31, 0xFF	; 255
    24f2:	80 81       	ld	r24, Z
    24f4:	84 30       	cpi	r24, 0x04	; 4
    24f6:	89 f5       	brne	.+98     	; 0x255a <S_Segment_enuEnableCommon+0x108>
			{
				Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPIN , DIO_u8LOW);
    24f8:	8a 81       	ldd	r24, Y+2	; 0x02
    24fa:	48 2f       	mov	r20, r24
    24fc:	50 e0       	ldi	r21, 0x00	; 0
    24fe:	ca 01       	movw	r24, r20
    2500:	88 0f       	add	r24, r24
    2502:	99 1f       	adc	r25, r25
    2504:	9c 01       	movw	r18, r24
    2506:	22 0f       	add	r18, r18
    2508:	33 1f       	adc	r19, r19
    250a:	22 0f       	add	r18, r18
    250c:	33 1f       	adc	r19, r19
    250e:	22 0f       	add	r18, r18
    2510:	33 1f       	adc	r19, r19
    2512:	82 0f       	add	r24, r18
    2514:	93 1f       	adc	r25, r19
    2516:	84 0f       	add	r24, r20
    2518:	95 1f       	adc	r25, r21
    251a:	fc 01       	movw	r30, r24
    251c:	e0 58       	subi	r30, 0x80	; 128
    251e:	ff 4f       	sbci	r31, 0xFF	; 255
    2520:	60 81       	ld	r22, Z
    2522:	8a 81       	ldd	r24, Y+2	; 0x02
    2524:	48 2f       	mov	r20, r24
    2526:	50 e0       	ldi	r21, 0x00	; 0
    2528:	ca 01       	movw	r24, r20
    252a:	88 0f       	add	r24, r24
    252c:	99 1f       	adc	r25, r25
    252e:	9c 01       	movw	r18, r24
    2530:	22 0f       	add	r18, r18
    2532:	33 1f       	adc	r19, r19
    2534:	22 0f       	add	r18, r18
    2536:	33 1f       	adc	r19, r19
    2538:	22 0f       	add	r18, r18
    253a:	33 1f       	adc	r19, r19
    253c:	82 0f       	add	r24, r18
    253e:	93 1f       	adc	r25, r19
    2540:	84 0f       	add	r24, r20
    2542:	95 1f       	adc	r25, r21
    2544:	fc 01       	movw	r30, r24
    2546:	ef 57       	subi	r30, 0x7F	; 127
    2548:	ff 4f       	sbci	r31, 0xFF	; 255
    254a:	90 81       	ld	r25, Z
    254c:	86 2f       	mov	r24, r22
    254e:	69 2f       	mov	r22, r25
    2550:	40 e0       	ldi	r20, 0x00	; 0
    2552:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2556:	89 83       	std	Y+1, r24	; 0x01
    2558:	47 c0       	rjmp	.+142    	; 0x25e8 <S_Segment_enuEnableCommon+0x196>
			}
			else if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_ANODE)
    255a:	8a 81       	ldd	r24, Y+2	; 0x02
    255c:	48 2f       	mov	r20, r24
    255e:	50 e0       	ldi	r21, 0x00	; 0
    2560:	ca 01       	movw	r24, r20
    2562:	88 0f       	add	r24, r24
    2564:	99 1f       	adc	r25, r25
    2566:	9c 01       	movw	r18, r24
    2568:	22 0f       	add	r18, r18
    256a:	33 1f       	adc	r19, r19
    256c:	22 0f       	add	r18, r18
    256e:	33 1f       	adc	r19, r19
    2570:	22 0f       	add	r18, r18
    2572:	33 1f       	adc	r19, r19
    2574:	82 0f       	add	r24, r18
    2576:	93 1f       	adc	r25, r19
    2578:	84 0f       	add	r24, r20
    257a:	95 1f       	adc	r25, r21
    257c:	fc 01       	movw	r30, r24
    257e:	ec 57       	subi	r30, 0x7C	; 124
    2580:	ff 4f       	sbci	r31, 0xFF	; 255
    2582:	80 81       	ld	r24, Z
    2584:	81 30       	cpi	r24, 0x01	; 1
    2586:	81 f5       	brne	.+96     	; 0x25e8 <S_Segment_enuEnableCommon+0x196>
			{
				Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPIN , DIO_u8HIGH);
    2588:	8a 81       	ldd	r24, Y+2	; 0x02
    258a:	48 2f       	mov	r20, r24
    258c:	50 e0       	ldi	r21, 0x00	; 0
    258e:	ca 01       	movw	r24, r20
    2590:	88 0f       	add	r24, r24
    2592:	99 1f       	adc	r25, r25
    2594:	9c 01       	movw	r18, r24
    2596:	22 0f       	add	r18, r18
    2598:	33 1f       	adc	r19, r19
    259a:	22 0f       	add	r18, r18
    259c:	33 1f       	adc	r19, r19
    259e:	22 0f       	add	r18, r18
    25a0:	33 1f       	adc	r19, r19
    25a2:	82 0f       	add	r24, r18
    25a4:	93 1f       	adc	r25, r19
    25a6:	84 0f       	add	r24, r20
    25a8:	95 1f       	adc	r25, r21
    25aa:	fc 01       	movw	r30, r24
    25ac:	e0 58       	subi	r30, 0x80	; 128
    25ae:	ff 4f       	sbci	r31, 0xFF	; 255
    25b0:	60 81       	ld	r22, Z
    25b2:	8a 81       	ldd	r24, Y+2	; 0x02
    25b4:	48 2f       	mov	r20, r24
    25b6:	50 e0       	ldi	r21, 0x00	; 0
    25b8:	ca 01       	movw	r24, r20
    25ba:	88 0f       	add	r24, r24
    25bc:	99 1f       	adc	r25, r25
    25be:	9c 01       	movw	r18, r24
    25c0:	22 0f       	add	r18, r18
    25c2:	33 1f       	adc	r19, r19
    25c4:	22 0f       	add	r18, r18
    25c6:	33 1f       	adc	r19, r19
    25c8:	22 0f       	add	r18, r18
    25ca:	33 1f       	adc	r19, r19
    25cc:	82 0f       	add	r24, r18
    25ce:	93 1f       	adc	r25, r19
    25d0:	84 0f       	add	r24, r20
    25d2:	95 1f       	adc	r25, r21
    25d4:	fc 01       	movw	r30, r24
    25d6:	ef 57       	subi	r30, 0x7F	; 127
    25d8:	ff 4f       	sbci	r31, 0xFF	; 255
    25da:	90 81       	ld	r25, Z
    25dc:	86 2f       	mov	r24, r22
    25de:	69 2f       	mov	r22, r25
    25e0:	41 e0       	ldi	r20, 0x01	; 1
    25e2:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    25e6:	89 83       	std	Y+1, r24	; 0x01
			}
		}
	}
	return Local_enuErrorState;
    25e8:	89 81       	ldd	r24, Y+1	; 0x01
}
    25ea:	0f 90       	pop	r0
    25ec:	0f 90       	pop	r0
    25ee:	cf 91       	pop	r28
    25f0:	df 91       	pop	r29
    25f2:	08 95       	ret

000025f4 <S_Segment_enuEnableCathod>:

ES_t S_Segment_enuEnableCathod(u8 Copy_u8SegID)
{
    25f4:	df 93       	push	r29
    25f6:	cf 93       	push	r28
    25f8:	00 d0       	rcall	.+0      	; 0x25fa <S_Segment_enuEnableCathod+0x6>
    25fa:	cd b7       	in	r28, 0x3d	; 61
    25fc:	de b7       	in	r29, 0x3e	; 62
    25fe:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState=ES_NOK;
    2600:	81 e0       	ldi	r24, 0x01	; 1
    2602:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8SegID<SS_Num)
    2604:	8a 81       	ldd	r24, Y+2	; 0x02
    2606:	82 30       	cpi	r24, 0x02	; 2
    2608:	08 f0       	brcs	.+2      	; 0x260c <S_Segment_enuEnableCathod+0x18>
    260a:	bf c0       	rjmp	.+382    	; 0x278a <S_Segment_enuEnableCathod+0x196>
	{
		if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPIN != NOT_CONNECTED && S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPORT != NOT_CONNECTED )
    260c:	8a 81       	ldd	r24, Y+2	; 0x02
    260e:	48 2f       	mov	r20, r24
    2610:	50 e0       	ldi	r21, 0x00	; 0
    2612:	ca 01       	movw	r24, r20
    2614:	88 0f       	add	r24, r24
    2616:	99 1f       	adc	r25, r25
    2618:	9c 01       	movw	r18, r24
    261a:	22 0f       	add	r18, r18
    261c:	33 1f       	adc	r19, r19
    261e:	22 0f       	add	r18, r18
    2620:	33 1f       	adc	r19, r19
    2622:	22 0f       	add	r18, r18
    2624:	33 1f       	adc	r19, r19
    2626:	82 0f       	add	r24, r18
    2628:	93 1f       	adc	r25, r19
    262a:	84 0f       	add	r24, r20
    262c:	95 1f       	adc	r25, r21
    262e:	fc 01       	movw	r30, r24
    2630:	ef 57       	subi	r30, 0x7F	; 127
    2632:	ff 4f       	sbci	r31, 0xFF	; 255
    2634:	80 81       	ld	r24, Z
    2636:	8b 30       	cpi	r24, 0x0B	; 11
    2638:	09 f4       	brne	.+2      	; 0x263c <S_Segment_enuEnableCathod+0x48>
    263a:	a7 c0       	rjmp	.+334    	; 0x278a <S_Segment_enuEnableCathod+0x196>
    263c:	8a 81       	ldd	r24, Y+2	; 0x02
    263e:	48 2f       	mov	r20, r24
    2640:	50 e0       	ldi	r21, 0x00	; 0
    2642:	ca 01       	movw	r24, r20
    2644:	88 0f       	add	r24, r24
    2646:	99 1f       	adc	r25, r25
    2648:	9c 01       	movw	r18, r24
    264a:	22 0f       	add	r18, r18
    264c:	33 1f       	adc	r19, r19
    264e:	22 0f       	add	r18, r18
    2650:	33 1f       	adc	r19, r19
    2652:	22 0f       	add	r18, r18
    2654:	33 1f       	adc	r19, r19
    2656:	82 0f       	add	r24, r18
    2658:	93 1f       	adc	r25, r19
    265a:	84 0f       	add	r24, r20
    265c:	95 1f       	adc	r25, r21
    265e:	fc 01       	movw	r30, r24
    2660:	e0 58       	subi	r30, 0x80	; 128
    2662:	ff 4f       	sbci	r31, 0xFF	; 255
    2664:	80 81       	ld	r24, Z
    2666:	8b 30       	cpi	r24, 0x0B	; 11
    2668:	09 f4       	brne	.+2      	; 0x266c <S_Segment_enuEnableCathod+0x78>
    266a:	8f c0       	rjmp	.+286    	; 0x278a <S_Segment_enuEnableCathod+0x196>
		{
			if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_CATHODE)
    266c:	8a 81       	ldd	r24, Y+2	; 0x02
    266e:	48 2f       	mov	r20, r24
    2670:	50 e0       	ldi	r21, 0x00	; 0
    2672:	ca 01       	movw	r24, r20
    2674:	88 0f       	add	r24, r24
    2676:	99 1f       	adc	r25, r25
    2678:	9c 01       	movw	r18, r24
    267a:	22 0f       	add	r18, r18
    267c:	33 1f       	adc	r19, r19
    267e:	22 0f       	add	r18, r18
    2680:	33 1f       	adc	r19, r19
    2682:	22 0f       	add	r18, r18
    2684:	33 1f       	adc	r19, r19
    2686:	82 0f       	add	r24, r18
    2688:	93 1f       	adc	r25, r19
    268a:	84 0f       	add	r24, r20
    268c:	95 1f       	adc	r25, r21
    268e:	fc 01       	movw	r30, r24
    2690:	ec 57       	subi	r30, 0x7C	; 124
    2692:	ff 4f       	sbci	r31, 0xFF	; 255
    2694:	80 81       	ld	r24, Z
    2696:	84 30       	cpi	r24, 0x04	; 4
    2698:	89 f5       	brne	.+98     	; 0x26fc <S_Segment_enuEnableCathod+0x108>
			{
				Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPIN , DIO_u8HIGH);
    269a:	8a 81       	ldd	r24, Y+2	; 0x02
    269c:	48 2f       	mov	r20, r24
    269e:	50 e0       	ldi	r21, 0x00	; 0
    26a0:	ca 01       	movw	r24, r20
    26a2:	88 0f       	add	r24, r24
    26a4:	99 1f       	adc	r25, r25
    26a6:	9c 01       	movw	r18, r24
    26a8:	22 0f       	add	r18, r18
    26aa:	33 1f       	adc	r19, r19
    26ac:	22 0f       	add	r18, r18
    26ae:	33 1f       	adc	r19, r19
    26b0:	22 0f       	add	r18, r18
    26b2:	33 1f       	adc	r19, r19
    26b4:	82 0f       	add	r24, r18
    26b6:	93 1f       	adc	r25, r19
    26b8:	84 0f       	add	r24, r20
    26ba:	95 1f       	adc	r25, r21
    26bc:	fc 01       	movw	r30, r24
    26be:	e0 58       	subi	r30, 0x80	; 128
    26c0:	ff 4f       	sbci	r31, 0xFF	; 255
    26c2:	60 81       	ld	r22, Z
    26c4:	8a 81       	ldd	r24, Y+2	; 0x02
    26c6:	48 2f       	mov	r20, r24
    26c8:	50 e0       	ldi	r21, 0x00	; 0
    26ca:	ca 01       	movw	r24, r20
    26cc:	88 0f       	add	r24, r24
    26ce:	99 1f       	adc	r25, r25
    26d0:	9c 01       	movw	r18, r24
    26d2:	22 0f       	add	r18, r18
    26d4:	33 1f       	adc	r19, r19
    26d6:	22 0f       	add	r18, r18
    26d8:	33 1f       	adc	r19, r19
    26da:	22 0f       	add	r18, r18
    26dc:	33 1f       	adc	r19, r19
    26de:	82 0f       	add	r24, r18
    26e0:	93 1f       	adc	r25, r19
    26e2:	84 0f       	add	r24, r20
    26e4:	95 1f       	adc	r25, r21
    26e6:	fc 01       	movw	r30, r24
    26e8:	ef 57       	subi	r30, 0x7F	; 127
    26ea:	ff 4f       	sbci	r31, 0xFF	; 255
    26ec:	90 81       	ld	r25, Z
    26ee:	86 2f       	mov	r24, r22
    26f0:	69 2f       	mov	r22, r25
    26f2:	41 e0       	ldi	r20, 0x01	; 1
    26f4:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    26f8:	89 83       	std	Y+1, r24	; 0x01
    26fa:	47 c0       	rjmp	.+142    	; 0x278a <S_Segment_enuEnableCathod+0x196>
			}
			else if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_ANODE)
    26fc:	8a 81       	ldd	r24, Y+2	; 0x02
    26fe:	48 2f       	mov	r20, r24
    2700:	50 e0       	ldi	r21, 0x00	; 0
    2702:	ca 01       	movw	r24, r20
    2704:	88 0f       	add	r24, r24
    2706:	99 1f       	adc	r25, r25
    2708:	9c 01       	movw	r18, r24
    270a:	22 0f       	add	r18, r18
    270c:	33 1f       	adc	r19, r19
    270e:	22 0f       	add	r18, r18
    2710:	33 1f       	adc	r19, r19
    2712:	22 0f       	add	r18, r18
    2714:	33 1f       	adc	r19, r19
    2716:	82 0f       	add	r24, r18
    2718:	93 1f       	adc	r25, r19
    271a:	84 0f       	add	r24, r20
    271c:	95 1f       	adc	r25, r21
    271e:	fc 01       	movw	r30, r24
    2720:	ec 57       	subi	r30, 0x7C	; 124
    2722:	ff 4f       	sbci	r31, 0xFF	; 255
    2724:	80 81       	ld	r24, Z
    2726:	81 30       	cpi	r24, 0x01	; 1
    2728:	81 f5       	brne	.+96     	; 0x278a <S_Segment_enuEnableCathod+0x196>
			{
				Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CMNPIN , DIO_u8LOW);
    272a:	8a 81       	ldd	r24, Y+2	; 0x02
    272c:	48 2f       	mov	r20, r24
    272e:	50 e0       	ldi	r21, 0x00	; 0
    2730:	ca 01       	movw	r24, r20
    2732:	88 0f       	add	r24, r24
    2734:	99 1f       	adc	r25, r25
    2736:	9c 01       	movw	r18, r24
    2738:	22 0f       	add	r18, r18
    273a:	33 1f       	adc	r19, r19
    273c:	22 0f       	add	r18, r18
    273e:	33 1f       	adc	r19, r19
    2740:	22 0f       	add	r18, r18
    2742:	33 1f       	adc	r19, r19
    2744:	82 0f       	add	r24, r18
    2746:	93 1f       	adc	r25, r19
    2748:	84 0f       	add	r24, r20
    274a:	95 1f       	adc	r25, r21
    274c:	fc 01       	movw	r30, r24
    274e:	e0 58       	subi	r30, 0x80	; 128
    2750:	ff 4f       	sbci	r31, 0xFF	; 255
    2752:	60 81       	ld	r22, Z
    2754:	8a 81       	ldd	r24, Y+2	; 0x02
    2756:	48 2f       	mov	r20, r24
    2758:	50 e0       	ldi	r21, 0x00	; 0
    275a:	ca 01       	movw	r24, r20
    275c:	88 0f       	add	r24, r24
    275e:	99 1f       	adc	r25, r25
    2760:	9c 01       	movw	r18, r24
    2762:	22 0f       	add	r18, r18
    2764:	33 1f       	adc	r19, r19
    2766:	22 0f       	add	r18, r18
    2768:	33 1f       	adc	r19, r19
    276a:	22 0f       	add	r18, r18
    276c:	33 1f       	adc	r19, r19
    276e:	82 0f       	add	r24, r18
    2770:	93 1f       	adc	r25, r19
    2772:	84 0f       	add	r24, r20
    2774:	95 1f       	adc	r25, r21
    2776:	fc 01       	movw	r30, r24
    2778:	ef 57       	subi	r30, 0x7F	; 127
    277a:	ff 4f       	sbci	r31, 0xFF	; 255
    277c:	90 81       	ld	r25, Z
    277e:	86 2f       	mov	r24, r22
    2780:	69 2f       	mov	r22, r25
    2782:	40 e0       	ldi	r20, 0x00	; 0
    2784:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2788:	89 83       	std	Y+1, r24	; 0x01
			}
		}
	}
	return Local_enuErrorState;
    278a:	89 81       	ldd	r24, Y+1	; 0x01
}
    278c:	0f 90       	pop	r0
    278e:	0f 90       	pop	r0
    2790:	cf 91       	pop	r28
    2792:	df 91       	pop	r29
    2794:	08 95       	ret

00002796 <S_Segment_enuEnableDot>:

ES_t S_Segment_enuEnableDot(u8 Copy_u8SegID)
{
    2796:	df 93       	push	r29
    2798:	cf 93       	push	r28
    279a:	00 d0       	rcall	.+0      	; 0x279c <S_Segment_enuEnableDot+0x6>
    279c:	cd b7       	in	r28, 0x3d	; 61
    279e:	de b7       	in	r29, 0x3e	; 62
    27a0:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState=ES_NOK;
    27a2:	81 e0       	ldi	r24, 0x01	; 1
    27a4:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8SegID<SS_Num)
    27a6:	8a 81       	ldd	r24, Y+2	; 0x02
    27a8:	82 30       	cpi	r24, 0x02	; 2
    27aa:	08 f0       	brcs	.+2      	; 0x27ae <S_Segment_enuEnableDot+0x18>
    27ac:	bf c0       	rjmp	.+382    	; 0x292c <S_Segment_enuEnableDot+0x196>
		{
		if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPIN != NOT_CONNECTED && S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPORT != NOT_CONNECTED )
    27ae:	8a 81       	ldd	r24, Y+2	; 0x02
    27b0:	48 2f       	mov	r20, r24
    27b2:	50 e0       	ldi	r21, 0x00	; 0
    27b4:	ca 01       	movw	r24, r20
    27b6:	88 0f       	add	r24, r24
    27b8:	99 1f       	adc	r25, r25
    27ba:	9c 01       	movw	r18, r24
    27bc:	22 0f       	add	r18, r18
    27be:	33 1f       	adc	r19, r19
    27c0:	22 0f       	add	r18, r18
    27c2:	33 1f       	adc	r19, r19
    27c4:	22 0f       	add	r18, r18
    27c6:	33 1f       	adc	r19, r19
    27c8:	82 0f       	add	r24, r18
    27ca:	93 1f       	adc	r25, r19
    27cc:	84 0f       	add	r24, r20
    27ce:	95 1f       	adc	r25, r21
    27d0:	fc 01       	movw	r30, r24
    27d2:	ed 57       	subi	r30, 0x7D	; 125
    27d4:	ff 4f       	sbci	r31, 0xFF	; 255
    27d6:	80 81       	ld	r24, Z
    27d8:	8b 30       	cpi	r24, 0x0B	; 11
    27da:	09 f4       	brne	.+2      	; 0x27de <S_Segment_enuEnableDot+0x48>
    27dc:	a7 c0       	rjmp	.+334    	; 0x292c <S_Segment_enuEnableDot+0x196>
    27de:	8a 81       	ldd	r24, Y+2	; 0x02
    27e0:	48 2f       	mov	r20, r24
    27e2:	50 e0       	ldi	r21, 0x00	; 0
    27e4:	ca 01       	movw	r24, r20
    27e6:	88 0f       	add	r24, r24
    27e8:	99 1f       	adc	r25, r25
    27ea:	9c 01       	movw	r18, r24
    27ec:	22 0f       	add	r18, r18
    27ee:	33 1f       	adc	r19, r19
    27f0:	22 0f       	add	r18, r18
    27f2:	33 1f       	adc	r19, r19
    27f4:	22 0f       	add	r18, r18
    27f6:	33 1f       	adc	r19, r19
    27f8:	82 0f       	add	r24, r18
    27fa:	93 1f       	adc	r25, r19
    27fc:	84 0f       	add	r24, r20
    27fe:	95 1f       	adc	r25, r21
    2800:	fc 01       	movw	r30, r24
    2802:	ee 57       	subi	r30, 0x7E	; 126
    2804:	ff 4f       	sbci	r31, 0xFF	; 255
    2806:	80 81       	ld	r24, Z
    2808:	8b 30       	cpi	r24, 0x0B	; 11
    280a:	09 f4       	brne	.+2      	; 0x280e <S_Segment_enuEnableDot+0x78>
    280c:	8f c0       	rjmp	.+286    	; 0x292c <S_Segment_enuEnableDot+0x196>
		{
			if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_CATHODE)
    280e:	8a 81       	ldd	r24, Y+2	; 0x02
    2810:	48 2f       	mov	r20, r24
    2812:	50 e0       	ldi	r21, 0x00	; 0
    2814:	ca 01       	movw	r24, r20
    2816:	88 0f       	add	r24, r24
    2818:	99 1f       	adc	r25, r25
    281a:	9c 01       	movw	r18, r24
    281c:	22 0f       	add	r18, r18
    281e:	33 1f       	adc	r19, r19
    2820:	22 0f       	add	r18, r18
    2822:	33 1f       	adc	r19, r19
    2824:	22 0f       	add	r18, r18
    2826:	33 1f       	adc	r19, r19
    2828:	82 0f       	add	r24, r18
    282a:	93 1f       	adc	r25, r19
    282c:	84 0f       	add	r24, r20
    282e:	95 1f       	adc	r25, r21
    2830:	fc 01       	movw	r30, r24
    2832:	ec 57       	subi	r30, 0x7C	; 124
    2834:	ff 4f       	sbci	r31, 0xFF	; 255
    2836:	80 81       	ld	r24, Z
    2838:	84 30       	cpi	r24, 0x04	; 4
    283a:	89 f5       	brne	.+98     	; 0x289e <S_Segment_enuEnableDot+0x108>
			{
				Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPIN , DIO_u8HIGH);
    283c:	8a 81       	ldd	r24, Y+2	; 0x02
    283e:	48 2f       	mov	r20, r24
    2840:	50 e0       	ldi	r21, 0x00	; 0
    2842:	ca 01       	movw	r24, r20
    2844:	88 0f       	add	r24, r24
    2846:	99 1f       	adc	r25, r25
    2848:	9c 01       	movw	r18, r24
    284a:	22 0f       	add	r18, r18
    284c:	33 1f       	adc	r19, r19
    284e:	22 0f       	add	r18, r18
    2850:	33 1f       	adc	r19, r19
    2852:	22 0f       	add	r18, r18
    2854:	33 1f       	adc	r19, r19
    2856:	82 0f       	add	r24, r18
    2858:	93 1f       	adc	r25, r19
    285a:	84 0f       	add	r24, r20
    285c:	95 1f       	adc	r25, r21
    285e:	fc 01       	movw	r30, r24
    2860:	ee 57       	subi	r30, 0x7E	; 126
    2862:	ff 4f       	sbci	r31, 0xFF	; 255
    2864:	60 81       	ld	r22, Z
    2866:	8a 81       	ldd	r24, Y+2	; 0x02
    2868:	48 2f       	mov	r20, r24
    286a:	50 e0       	ldi	r21, 0x00	; 0
    286c:	ca 01       	movw	r24, r20
    286e:	88 0f       	add	r24, r24
    2870:	99 1f       	adc	r25, r25
    2872:	9c 01       	movw	r18, r24
    2874:	22 0f       	add	r18, r18
    2876:	33 1f       	adc	r19, r19
    2878:	22 0f       	add	r18, r18
    287a:	33 1f       	adc	r19, r19
    287c:	22 0f       	add	r18, r18
    287e:	33 1f       	adc	r19, r19
    2880:	82 0f       	add	r24, r18
    2882:	93 1f       	adc	r25, r19
    2884:	84 0f       	add	r24, r20
    2886:	95 1f       	adc	r25, r21
    2888:	fc 01       	movw	r30, r24
    288a:	ed 57       	subi	r30, 0x7D	; 125
    288c:	ff 4f       	sbci	r31, 0xFF	; 255
    288e:	90 81       	ld	r25, Z
    2890:	86 2f       	mov	r24, r22
    2892:	69 2f       	mov	r22, r25
    2894:	41 e0       	ldi	r20, 0x01	; 1
    2896:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    289a:	89 83       	std	Y+1, r24	; 0x01
    289c:	47 c0       	rjmp	.+142    	; 0x292c <S_Segment_enuEnableDot+0x196>
			}
			else if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_ANODE)
    289e:	8a 81       	ldd	r24, Y+2	; 0x02
    28a0:	48 2f       	mov	r20, r24
    28a2:	50 e0       	ldi	r21, 0x00	; 0
    28a4:	ca 01       	movw	r24, r20
    28a6:	88 0f       	add	r24, r24
    28a8:	99 1f       	adc	r25, r25
    28aa:	9c 01       	movw	r18, r24
    28ac:	22 0f       	add	r18, r18
    28ae:	33 1f       	adc	r19, r19
    28b0:	22 0f       	add	r18, r18
    28b2:	33 1f       	adc	r19, r19
    28b4:	22 0f       	add	r18, r18
    28b6:	33 1f       	adc	r19, r19
    28b8:	82 0f       	add	r24, r18
    28ba:	93 1f       	adc	r25, r19
    28bc:	84 0f       	add	r24, r20
    28be:	95 1f       	adc	r25, r21
    28c0:	fc 01       	movw	r30, r24
    28c2:	ec 57       	subi	r30, 0x7C	; 124
    28c4:	ff 4f       	sbci	r31, 0xFF	; 255
    28c6:	80 81       	ld	r24, Z
    28c8:	81 30       	cpi	r24, 0x01	; 1
    28ca:	81 f5       	brne	.+96     	; 0x292c <S_Segment_enuEnableDot+0x196>
			{
				Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPIN , DIO_u8LOW);
    28cc:	8a 81       	ldd	r24, Y+2	; 0x02
    28ce:	48 2f       	mov	r20, r24
    28d0:	50 e0       	ldi	r21, 0x00	; 0
    28d2:	ca 01       	movw	r24, r20
    28d4:	88 0f       	add	r24, r24
    28d6:	99 1f       	adc	r25, r25
    28d8:	9c 01       	movw	r18, r24
    28da:	22 0f       	add	r18, r18
    28dc:	33 1f       	adc	r19, r19
    28de:	22 0f       	add	r18, r18
    28e0:	33 1f       	adc	r19, r19
    28e2:	22 0f       	add	r18, r18
    28e4:	33 1f       	adc	r19, r19
    28e6:	82 0f       	add	r24, r18
    28e8:	93 1f       	adc	r25, r19
    28ea:	84 0f       	add	r24, r20
    28ec:	95 1f       	adc	r25, r21
    28ee:	fc 01       	movw	r30, r24
    28f0:	ee 57       	subi	r30, 0x7E	; 126
    28f2:	ff 4f       	sbci	r31, 0xFF	; 255
    28f4:	60 81       	ld	r22, Z
    28f6:	8a 81       	ldd	r24, Y+2	; 0x02
    28f8:	48 2f       	mov	r20, r24
    28fa:	50 e0       	ldi	r21, 0x00	; 0
    28fc:	ca 01       	movw	r24, r20
    28fe:	88 0f       	add	r24, r24
    2900:	99 1f       	adc	r25, r25
    2902:	9c 01       	movw	r18, r24
    2904:	22 0f       	add	r18, r18
    2906:	33 1f       	adc	r19, r19
    2908:	22 0f       	add	r18, r18
    290a:	33 1f       	adc	r19, r19
    290c:	22 0f       	add	r18, r18
    290e:	33 1f       	adc	r19, r19
    2910:	82 0f       	add	r24, r18
    2912:	93 1f       	adc	r25, r19
    2914:	84 0f       	add	r24, r20
    2916:	95 1f       	adc	r25, r21
    2918:	fc 01       	movw	r30, r24
    291a:	ed 57       	subi	r30, 0x7D	; 125
    291c:	ff 4f       	sbci	r31, 0xFF	; 255
    291e:	90 81       	ld	r25, Z
    2920:	86 2f       	mov	r24, r22
    2922:	69 2f       	mov	r22, r25
    2924:	40 e0       	ldi	r20, 0x00	; 0
    2926:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    292a:	89 83       	std	Y+1, r24	; 0x01
			}
		}
	}
	return Local_enuErrorState;
    292c:	89 81       	ldd	r24, Y+1	; 0x01

}
    292e:	0f 90       	pop	r0
    2930:	0f 90       	pop	r0
    2932:	cf 91       	pop	r28
    2934:	df 91       	pop	r29
    2936:	08 95       	ret

00002938 <S_Segment_enuDisableDot>:

ES_t S_Segment_enuDisableDot(u8 Copy_u8SegID)
{
    2938:	df 93       	push	r29
    293a:	cf 93       	push	r28
    293c:	00 d0       	rcall	.+0      	; 0x293e <S_Segment_enuDisableDot+0x6>
    293e:	cd b7       	in	r28, 0x3d	; 61
    2940:	de b7       	in	r29, 0x3e	; 62
    2942:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState=ES_NOK;
    2944:	81 e0       	ldi	r24, 0x01	; 1
    2946:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8SegID<SS_Num)
    2948:	8a 81       	ldd	r24, Y+2	; 0x02
    294a:	82 30       	cpi	r24, 0x02	; 2
    294c:	08 f0       	brcs	.+2      	; 0x2950 <S_Segment_enuDisableDot+0x18>
    294e:	bf c0       	rjmp	.+382    	; 0x2ace <S_Segment_enuDisableDot+0x196>
		{
		if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPIN != NOT_CONNECTED && S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPORT != NOT_CONNECTED )
    2950:	8a 81       	ldd	r24, Y+2	; 0x02
    2952:	48 2f       	mov	r20, r24
    2954:	50 e0       	ldi	r21, 0x00	; 0
    2956:	ca 01       	movw	r24, r20
    2958:	88 0f       	add	r24, r24
    295a:	99 1f       	adc	r25, r25
    295c:	9c 01       	movw	r18, r24
    295e:	22 0f       	add	r18, r18
    2960:	33 1f       	adc	r19, r19
    2962:	22 0f       	add	r18, r18
    2964:	33 1f       	adc	r19, r19
    2966:	22 0f       	add	r18, r18
    2968:	33 1f       	adc	r19, r19
    296a:	82 0f       	add	r24, r18
    296c:	93 1f       	adc	r25, r19
    296e:	84 0f       	add	r24, r20
    2970:	95 1f       	adc	r25, r21
    2972:	fc 01       	movw	r30, r24
    2974:	ed 57       	subi	r30, 0x7D	; 125
    2976:	ff 4f       	sbci	r31, 0xFF	; 255
    2978:	80 81       	ld	r24, Z
    297a:	8b 30       	cpi	r24, 0x0B	; 11
    297c:	09 f4       	brne	.+2      	; 0x2980 <S_Segment_enuDisableDot+0x48>
    297e:	a7 c0       	rjmp	.+334    	; 0x2ace <S_Segment_enuDisableDot+0x196>
    2980:	8a 81       	ldd	r24, Y+2	; 0x02
    2982:	48 2f       	mov	r20, r24
    2984:	50 e0       	ldi	r21, 0x00	; 0
    2986:	ca 01       	movw	r24, r20
    2988:	88 0f       	add	r24, r24
    298a:	99 1f       	adc	r25, r25
    298c:	9c 01       	movw	r18, r24
    298e:	22 0f       	add	r18, r18
    2990:	33 1f       	adc	r19, r19
    2992:	22 0f       	add	r18, r18
    2994:	33 1f       	adc	r19, r19
    2996:	22 0f       	add	r18, r18
    2998:	33 1f       	adc	r19, r19
    299a:	82 0f       	add	r24, r18
    299c:	93 1f       	adc	r25, r19
    299e:	84 0f       	add	r24, r20
    29a0:	95 1f       	adc	r25, r21
    29a2:	fc 01       	movw	r30, r24
    29a4:	ee 57       	subi	r30, 0x7E	; 126
    29a6:	ff 4f       	sbci	r31, 0xFF	; 255
    29a8:	80 81       	ld	r24, Z
    29aa:	8b 30       	cpi	r24, 0x0B	; 11
    29ac:	09 f4       	brne	.+2      	; 0x29b0 <S_Segment_enuDisableDot+0x78>
    29ae:	8f c0       	rjmp	.+286    	; 0x2ace <S_Segment_enuDisableDot+0x196>
		{
			if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_CATHODE)
    29b0:	8a 81       	ldd	r24, Y+2	; 0x02
    29b2:	48 2f       	mov	r20, r24
    29b4:	50 e0       	ldi	r21, 0x00	; 0
    29b6:	ca 01       	movw	r24, r20
    29b8:	88 0f       	add	r24, r24
    29ba:	99 1f       	adc	r25, r25
    29bc:	9c 01       	movw	r18, r24
    29be:	22 0f       	add	r18, r18
    29c0:	33 1f       	adc	r19, r19
    29c2:	22 0f       	add	r18, r18
    29c4:	33 1f       	adc	r19, r19
    29c6:	22 0f       	add	r18, r18
    29c8:	33 1f       	adc	r19, r19
    29ca:	82 0f       	add	r24, r18
    29cc:	93 1f       	adc	r25, r19
    29ce:	84 0f       	add	r24, r20
    29d0:	95 1f       	adc	r25, r21
    29d2:	fc 01       	movw	r30, r24
    29d4:	ec 57       	subi	r30, 0x7C	; 124
    29d6:	ff 4f       	sbci	r31, 0xFF	; 255
    29d8:	80 81       	ld	r24, Z
    29da:	84 30       	cpi	r24, 0x04	; 4
    29dc:	89 f5       	brne	.+98     	; 0x2a40 <S_Segment_enuDisableDot+0x108>
			{
				Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPIN , DIO_u8LOW);
    29de:	8a 81       	ldd	r24, Y+2	; 0x02
    29e0:	48 2f       	mov	r20, r24
    29e2:	50 e0       	ldi	r21, 0x00	; 0
    29e4:	ca 01       	movw	r24, r20
    29e6:	88 0f       	add	r24, r24
    29e8:	99 1f       	adc	r25, r25
    29ea:	9c 01       	movw	r18, r24
    29ec:	22 0f       	add	r18, r18
    29ee:	33 1f       	adc	r19, r19
    29f0:	22 0f       	add	r18, r18
    29f2:	33 1f       	adc	r19, r19
    29f4:	22 0f       	add	r18, r18
    29f6:	33 1f       	adc	r19, r19
    29f8:	82 0f       	add	r24, r18
    29fa:	93 1f       	adc	r25, r19
    29fc:	84 0f       	add	r24, r20
    29fe:	95 1f       	adc	r25, r21
    2a00:	fc 01       	movw	r30, r24
    2a02:	ee 57       	subi	r30, 0x7E	; 126
    2a04:	ff 4f       	sbci	r31, 0xFF	; 255
    2a06:	60 81       	ld	r22, Z
    2a08:	8a 81       	ldd	r24, Y+2	; 0x02
    2a0a:	48 2f       	mov	r20, r24
    2a0c:	50 e0       	ldi	r21, 0x00	; 0
    2a0e:	ca 01       	movw	r24, r20
    2a10:	88 0f       	add	r24, r24
    2a12:	99 1f       	adc	r25, r25
    2a14:	9c 01       	movw	r18, r24
    2a16:	22 0f       	add	r18, r18
    2a18:	33 1f       	adc	r19, r19
    2a1a:	22 0f       	add	r18, r18
    2a1c:	33 1f       	adc	r19, r19
    2a1e:	22 0f       	add	r18, r18
    2a20:	33 1f       	adc	r19, r19
    2a22:	82 0f       	add	r24, r18
    2a24:	93 1f       	adc	r25, r19
    2a26:	84 0f       	add	r24, r20
    2a28:	95 1f       	adc	r25, r21
    2a2a:	fc 01       	movw	r30, r24
    2a2c:	ed 57       	subi	r30, 0x7D	; 125
    2a2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a30:	90 81       	ld	r25, Z
    2a32:	86 2f       	mov	r24, r22
    2a34:	69 2f       	mov	r22, r25
    2a36:	40 e0       	ldi	r20, 0x00	; 0
    2a38:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2a3c:	89 83       	std	Y+1, r24	; 0x01
    2a3e:	47 c0       	rjmp	.+142    	; 0x2ace <S_Segment_enuDisableDot+0x196>
			}
			else if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_ANODE)
    2a40:	8a 81       	ldd	r24, Y+2	; 0x02
    2a42:	48 2f       	mov	r20, r24
    2a44:	50 e0       	ldi	r21, 0x00	; 0
    2a46:	ca 01       	movw	r24, r20
    2a48:	88 0f       	add	r24, r24
    2a4a:	99 1f       	adc	r25, r25
    2a4c:	9c 01       	movw	r18, r24
    2a4e:	22 0f       	add	r18, r18
    2a50:	33 1f       	adc	r19, r19
    2a52:	22 0f       	add	r18, r18
    2a54:	33 1f       	adc	r19, r19
    2a56:	22 0f       	add	r18, r18
    2a58:	33 1f       	adc	r19, r19
    2a5a:	82 0f       	add	r24, r18
    2a5c:	93 1f       	adc	r25, r19
    2a5e:	84 0f       	add	r24, r20
    2a60:	95 1f       	adc	r25, r21
    2a62:	fc 01       	movw	r30, r24
    2a64:	ec 57       	subi	r30, 0x7C	; 124
    2a66:	ff 4f       	sbci	r31, 0xFF	; 255
    2a68:	80 81       	ld	r24, Z
    2a6a:	81 30       	cpi	r24, 0x01	; 1
    2a6c:	81 f5       	brne	.+96     	; 0x2ace <S_Segment_enuDisableDot+0x196>
			{
				Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPIN , DIO_u8HIGH);
    2a6e:	8a 81       	ldd	r24, Y+2	; 0x02
    2a70:	48 2f       	mov	r20, r24
    2a72:	50 e0       	ldi	r21, 0x00	; 0
    2a74:	ca 01       	movw	r24, r20
    2a76:	88 0f       	add	r24, r24
    2a78:	99 1f       	adc	r25, r25
    2a7a:	9c 01       	movw	r18, r24
    2a7c:	22 0f       	add	r18, r18
    2a7e:	33 1f       	adc	r19, r19
    2a80:	22 0f       	add	r18, r18
    2a82:	33 1f       	adc	r19, r19
    2a84:	22 0f       	add	r18, r18
    2a86:	33 1f       	adc	r19, r19
    2a88:	82 0f       	add	r24, r18
    2a8a:	93 1f       	adc	r25, r19
    2a8c:	84 0f       	add	r24, r20
    2a8e:	95 1f       	adc	r25, r21
    2a90:	fc 01       	movw	r30, r24
    2a92:	ee 57       	subi	r30, 0x7E	; 126
    2a94:	ff 4f       	sbci	r31, 0xFF	; 255
    2a96:	60 81       	ld	r22, Z
    2a98:	8a 81       	ldd	r24, Y+2	; 0x02
    2a9a:	48 2f       	mov	r20, r24
    2a9c:	50 e0       	ldi	r21, 0x00	; 0
    2a9e:	ca 01       	movw	r24, r20
    2aa0:	88 0f       	add	r24, r24
    2aa2:	99 1f       	adc	r25, r25
    2aa4:	9c 01       	movw	r18, r24
    2aa6:	22 0f       	add	r18, r18
    2aa8:	33 1f       	adc	r19, r19
    2aaa:	22 0f       	add	r18, r18
    2aac:	33 1f       	adc	r19, r19
    2aae:	22 0f       	add	r18, r18
    2ab0:	33 1f       	adc	r19, r19
    2ab2:	82 0f       	add	r24, r18
    2ab4:	93 1f       	adc	r25, r19
    2ab6:	84 0f       	add	r24, r20
    2ab8:	95 1f       	adc	r25, r21
    2aba:	fc 01       	movw	r30, r24
    2abc:	ed 57       	subi	r30, 0x7D	; 125
    2abe:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac0:	90 81       	ld	r25, Z
    2ac2:	86 2f       	mov	r24, r22
    2ac4:	69 2f       	mov	r22, r25
    2ac6:	41 e0       	ldi	r20, 0x01	; 1
    2ac8:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2acc:	89 83       	std	Y+1, r24	; 0x01
			}
		}
	}
	return Local_enuErrorState;
    2ace:	89 81       	ldd	r24, Y+1	; 0x01
}
    2ad0:	0f 90       	pop	r0
    2ad2:	0f 90       	pop	r0
    2ad4:	cf 91       	pop	r28
    2ad6:	df 91       	pop	r29
    2ad8:	08 95       	ret

00002ada <S_Segmet_enuClearDisplay>:
ES_t S_Segmet_enuClearDisplay(u8 Copy_u8SegID)
{
    2ada:	df 93       	push	r29
    2adc:	cf 93       	push	r28
    2ade:	cd b7       	in	r28, 0x3d	; 61
    2ae0:	de b7       	in	r29, 0x3e	; 62
    2ae2:	28 97       	sbiw	r28, 0x08	; 8
    2ae4:	0f b6       	in	r0, 0x3f	; 63
    2ae6:	f8 94       	cli
    2ae8:	de bf       	out	0x3e, r29	; 62
    2aea:	0f be       	out	0x3f, r0	; 63
    2aec:	cd bf       	out	0x3d, r28	; 61
    2aee:	8f 83       	std	Y+7, r24	; 0x07
	ES_t Local_enuErrorState=ES_NOK;
    2af0:	81 e0       	ldi	r24, 0x01	; 1
    2af2:	8e 83       	std	Y+6, r24	; 0x06

	u8 Local_u8Iter=0;
    2af4:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32CheckError;
	if( Copy_u8SegID<SS_Num )
    2af6:	8f 81       	ldd	r24, Y+7	; 0x07
    2af8:	82 30       	cpi	r24, 0x02	; 2
    2afa:	08 f0       	brcs	.+2      	; 0x2afe <S_Segmet_enuClearDisplay+0x24>
    2afc:	f3 c3       	rjmp	.+2022   	; 0x32e4 <S_Segmet_enuClearDisplay+0x80a>
	{

		if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_CATHODE)
    2afe:	8f 81       	ldd	r24, Y+7	; 0x07
    2b00:	48 2f       	mov	r20, r24
    2b02:	50 e0       	ldi	r21, 0x00	; 0
    2b04:	ca 01       	movw	r24, r20
    2b06:	88 0f       	add	r24, r24
    2b08:	99 1f       	adc	r25, r25
    2b0a:	9c 01       	movw	r18, r24
    2b0c:	22 0f       	add	r18, r18
    2b0e:	33 1f       	adc	r19, r19
    2b10:	22 0f       	add	r18, r18
    2b12:	33 1f       	adc	r19, r19
    2b14:	22 0f       	add	r18, r18
    2b16:	33 1f       	adc	r19, r19
    2b18:	82 0f       	add	r24, r18
    2b1a:	93 1f       	adc	r25, r19
    2b1c:	84 0f       	add	r24, r20
    2b1e:	95 1f       	adc	r25, r21
    2b20:	fc 01       	movw	r30, r24
    2b22:	ec 57       	subi	r30, 0x7C	; 124
    2b24:	ff 4f       	sbci	r31, 0xFF	; 255
    2b26:	80 81       	ld	r24, Z
    2b28:	84 30       	cpi	r24, 0x04	; 4
    2b2a:	09 f0       	breq	.+2      	; 0x2b2e <S_Segmet_enuClearDisplay+0x54>
    2b2c:	e2 c1       	rjmp	.+964    	; 0x2ef2 <S_Segmet_enuClearDisplay+0x418>
		{
			Local_u32CheckError=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_APORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_APIN, DIO_u8LOW);
    2b2e:	8f 81       	ldd	r24, Y+7	; 0x07
    2b30:	48 2f       	mov	r20, r24
    2b32:	50 e0       	ldi	r21, 0x00	; 0
    2b34:	ca 01       	movw	r24, r20
    2b36:	88 0f       	add	r24, r24
    2b38:	99 1f       	adc	r25, r25
    2b3a:	9c 01       	movw	r18, r24
    2b3c:	22 0f       	add	r18, r18
    2b3e:	33 1f       	adc	r19, r19
    2b40:	22 0f       	add	r18, r18
    2b42:	33 1f       	adc	r19, r19
    2b44:	22 0f       	add	r18, r18
    2b46:	33 1f       	adc	r19, r19
    2b48:	82 0f       	add	r24, r18
    2b4a:	93 1f       	adc	r25, r19
    2b4c:	84 0f       	add	r24, r20
    2b4e:	95 1f       	adc	r25, r21
    2b50:	fc 01       	movw	r30, r24
    2b52:	ee 58       	subi	r30, 0x8E	; 142
    2b54:	ff 4f       	sbci	r31, 0xFF	; 255
    2b56:	60 81       	ld	r22, Z
    2b58:	8f 81       	ldd	r24, Y+7	; 0x07
    2b5a:	48 2f       	mov	r20, r24
    2b5c:	50 e0       	ldi	r21, 0x00	; 0
    2b5e:	ca 01       	movw	r24, r20
    2b60:	88 0f       	add	r24, r24
    2b62:	99 1f       	adc	r25, r25
    2b64:	9c 01       	movw	r18, r24
    2b66:	22 0f       	add	r18, r18
    2b68:	33 1f       	adc	r19, r19
    2b6a:	22 0f       	add	r18, r18
    2b6c:	33 1f       	adc	r19, r19
    2b6e:	22 0f       	add	r18, r18
    2b70:	33 1f       	adc	r19, r19
    2b72:	82 0f       	add	r24, r18
    2b74:	93 1f       	adc	r25, r19
    2b76:	84 0f       	add	r24, r20
    2b78:	95 1f       	adc	r25, r21
    2b7a:	fc 01       	movw	r30, r24
    2b7c:	ed 58       	subi	r30, 0x8D	; 141
    2b7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b80:	90 81       	ld	r25, Z
    2b82:	86 2f       	mov	r24, r22
    2b84:	69 2f       	mov	r22, r25
    2b86:	40 e0       	ldi	r20, 0x00	; 0
    2b88:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2b8c:	88 2f       	mov	r24, r24
    2b8e:	90 e0       	ldi	r25, 0x00	; 0
    2b90:	a0 e0       	ldi	r26, 0x00	; 0
    2b92:	b0 e0       	ldi	r27, 0x00	; 0
    2b94:	89 83       	std	Y+1, r24	; 0x01
    2b96:	9a 83       	std	Y+2, r25	; 0x02
    2b98:	ab 83       	std	Y+3, r26	; 0x03
    2b9a:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_BPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_BPIN,DIO_u8LOW);
    2b9c:	8f 81       	ldd	r24, Y+7	; 0x07
    2b9e:	48 2f       	mov	r20, r24
    2ba0:	50 e0       	ldi	r21, 0x00	; 0
    2ba2:	ca 01       	movw	r24, r20
    2ba4:	88 0f       	add	r24, r24
    2ba6:	99 1f       	adc	r25, r25
    2ba8:	9c 01       	movw	r18, r24
    2baa:	22 0f       	add	r18, r18
    2bac:	33 1f       	adc	r19, r19
    2bae:	22 0f       	add	r18, r18
    2bb0:	33 1f       	adc	r19, r19
    2bb2:	22 0f       	add	r18, r18
    2bb4:	33 1f       	adc	r19, r19
    2bb6:	82 0f       	add	r24, r18
    2bb8:	93 1f       	adc	r25, r19
    2bba:	84 0f       	add	r24, r20
    2bbc:	95 1f       	adc	r25, r21
    2bbe:	fc 01       	movw	r30, r24
    2bc0:	ec 58       	subi	r30, 0x8C	; 140
    2bc2:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc4:	60 81       	ld	r22, Z
    2bc6:	8f 81       	ldd	r24, Y+7	; 0x07
    2bc8:	48 2f       	mov	r20, r24
    2bca:	50 e0       	ldi	r21, 0x00	; 0
    2bcc:	ca 01       	movw	r24, r20
    2bce:	88 0f       	add	r24, r24
    2bd0:	99 1f       	adc	r25, r25
    2bd2:	9c 01       	movw	r18, r24
    2bd4:	22 0f       	add	r18, r18
    2bd6:	33 1f       	adc	r19, r19
    2bd8:	22 0f       	add	r18, r18
    2bda:	33 1f       	adc	r19, r19
    2bdc:	22 0f       	add	r18, r18
    2bde:	33 1f       	adc	r19, r19
    2be0:	82 0f       	add	r24, r18
    2be2:	93 1f       	adc	r25, r19
    2be4:	84 0f       	add	r24, r20
    2be6:	95 1f       	adc	r25, r21
    2be8:	fc 01       	movw	r30, r24
    2bea:	eb 58       	subi	r30, 0x8B	; 139
    2bec:	ff 4f       	sbci	r31, 0xFF	; 255
    2bee:	90 81       	ld	r25, Z
    2bf0:	86 2f       	mov	r24, r22
    2bf2:	69 2f       	mov	r22, r25
    2bf4:	40 e0       	ldi	r20, 0x00	; 0
    2bf6:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2bfa:	28 2f       	mov	r18, r24
    2bfc:	30 e0       	ldi	r19, 0x00	; 0
    2bfe:	40 e0       	ldi	r20, 0x00	; 0
    2c00:	50 e0       	ldi	r21, 0x00	; 0
    2c02:	89 81       	ldd	r24, Y+1	; 0x01
    2c04:	9a 81       	ldd	r25, Y+2	; 0x02
    2c06:	ab 81       	ldd	r26, Y+3	; 0x03
    2c08:	bc 81       	ldd	r27, Y+4	; 0x04
    2c0a:	82 2b       	or	r24, r18
    2c0c:	93 2b       	or	r25, r19
    2c0e:	a4 2b       	or	r26, r20
    2c10:	b5 2b       	or	r27, r21
    2c12:	89 83       	std	Y+1, r24	; 0x01
    2c14:	9a 83       	std	Y+2, r25	; 0x02
    2c16:	ab 83       	std	Y+3, r26	; 0x03
    2c18:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CPIN,DIO_u8LOW);
    2c1a:	8f 81       	ldd	r24, Y+7	; 0x07
    2c1c:	48 2f       	mov	r20, r24
    2c1e:	50 e0       	ldi	r21, 0x00	; 0
    2c20:	ca 01       	movw	r24, r20
    2c22:	88 0f       	add	r24, r24
    2c24:	99 1f       	adc	r25, r25
    2c26:	9c 01       	movw	r18, r24
    2c28:	22 0f       	add	r18, r18
    2c2a:	33 1f       	adc	r19, r19
    2c2c:	22 0f       	add	r18, r18
    2c2e:	33 1f       	adc	r19, r19
    2c30:	22 0f       	add	r18, r18
    2c32:	33 1f       	adc	r19, r19
    2c34:	82 0f       	add	r24, r18
    2c36:	93 1f       	adc	r25, r19
    2c38:	84 0f       	add	r24, r20
    2c3a:	95 1f       	adc	r25, r21
    2c3c:	fc 01       	movw	r30, r24
    2c3e:	ea 58       	subi	r30, 0x8A	; 138
    2c40:	ff 4f       	sbci	r31, 0xFF	; 255
    2c42:	60 81       	ld	r22, Z
    2c44:	8f 81       	ldd	r24, Y+7	; 0x07
    2c46:	48 2f       	mov	r20, r24
    2c48:	50 e0       	ldi	r21, 0x00	; 0
    2c4a:	ca 01       	movw	r24, r20
    2c4c:	88 0f       	add	r24, r24
    2c4e:	99 1f       	adc	r25, r25
    2c50:	9c 01       	movw	r18, r24
    2c52:	22 0f       	add	r18, r18
    2c54:	33 1f       	adc	r19, r19
    2c56:	22 0f       	add	r18, r18
    2c58:	33 1f       	adc	r19, r19
    2c5a:	22 0f       	add	r18, r18
    2c5c:	33 1f       	adc	r19, r19
    2c5e:	82 0f       	add	r24, r18
    2c60:	93 1f       	adc	r25, r19
    2c62:	84 0f       	add	r24, r20
    2c64:	95 1f       	adc	r25, r21
    2c66:	fc 01       	movw	r30, r24
    2c68:	e9 58       	subi	r30, 0x89	; 137
    2c6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6c:	90 81       	ld	r25, Z
    2c6e:	86 2f       	mov	r24, r22
    2c70:	69 2f       	mov	r22, r25
    2c72:	40 e0       	ldi	r20, 0x00	; 0
    2c74:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2c78:	28 2f       	mov	r18, r24
    2c7a:	30 e0       	ldi	r19, 0x00	; 0
    2c7c:	40 e0       	ldi	r20, 0x00	; 0
    2c7e:	50 e0       	ldi	r21, 0x00	; 0
    2c80:	89 81       	ldd	r24, Y+1	; 0x01
    2c82:	9a 81       	ldd	r25, Y+2	; 0x02
    2c84:	ab 81       	ldd	r26, Y+3	; 0x03
    2c86:	bc 81       	ldd	r27, Y+4	; 0x04
    2c88:	82 2b       	or	r24, r18
    2c8a:	93 2b       	or	r25, r19
    2c8c:	a4 2b       	or	r26, r20
    2c8e:	b5 2b       	or	r27, r21
    2c90:	89 83       	std	Y+1, r24	; 0x01
    2c92:	9a 83       	std	Y+2, r25	; 0x02
    2c94:	ab 83       	std	Y+3, r26	; 0x03
    2c96:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DPIN,DIO_u8LOW);
    2c98:	8f 81       	ldd	r24, Y+7	; 0x07
    2c9a:	48 2f       	mov	r20, r24
    2c9c:	50 e0       	ldi	r21, 0x00	; 0
    2c9e:	ca 01       	movw	r24, r20
    2ca0:	88 0f       	add	r24, r24
    2ca2:	99 1f       	adc	r25, r25
    2ca4:	9c 01       	movw	r18, r24
    2ca6:	22 0f       	add	r18, r18
    2ca8:	33 1f       	adc	r19, r19
    2caa:	22 0f       	add	r18, r18
    2cac:	33 1f       	adc	r19, r19
    2cae:	22 0f       	add	r18, r18
    2cb0:	33 1f       	adc	r19, r19
    2cb2:	82 0f       	add	r24, r18
    2cb4:	93 1f       	adc	r25, r19
    2cb6:	84 0f       	add	r24, r20
    2cb8:	95 1f       	adc	r25, r21
    2cba:	fc 01       	movw	r30, r24
    2cbc:	e8 58       	subi	r30, 0x88	; 136
    2cbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2cc0:	60 81       	ld	r22, Z
    2cc2:	8f 81       	ldd	r24, Y+7	; 0x07
    2cc4:	48 2f       	mov	r20, r24
    2cc6:	50 e0       	ldi	r21, 0x00	; 0
    2cc8:	ca 01       	movw	r24, r20
    2cca:	88 0f       	add	r24, r24
    2ccc:	99 1f       	adc	r25, r25
    2cce:	9c 01       	movw	r18, r24
    2cd0:	22 0f       	add	r18, r18
    2cd2:	33 1f       	adc	r19, r19
    2cd4:	22 0f       	add	r18, r18
    2cd6:	33 1f       	adc	r19, r19
    2cd8:	22 0f       	add	r18, r18
    2cda:	33 1f       	adc	r19, r19
    2cdc:	82 0f       	add	r24, r18
    2cde:	93 1f       	adc	r25, r19
    2ce0:	84 0f       	add	r24, r20
    2ce2:	95 1f       	adc	r25, r21
    2ce4:	fc 01       	movw	r30, r24
    2ce6:	e7 58       	subi	r30, 0x87	; 135
    2ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cea:	90 81       	ld	r25, Z
    2cec:	86 2f       	mov	r24, r22
    2cee:	69 2f       	mov	r22, r25
    2cf0:	40 e0       	ldi	r20, 0x00	; 0
    2cf2:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2cf6:	28 2f       	mov	r18, r24
    2cf8:	30 e0       	ldi	r19, 0x00	; 0
    2cfa:	40 e0       	ldi	r20, 0x00	; 0
    2cfc:	50 e0       	ldi	r21, 0x00	; 0
    2cfe:	89 81       	ldd	r24, Y+1	; 0x01
    2d00:	9a 81       	ldd	r25, Y+2	; 0x02
    2d02:	ab 81       	ldd	r26, Y+3	; 0x03
    2d04:	bc 81       	ldd	r27, Y+4	; 0x04
    2d06:	82 2b       	or	r24, r18
    2d08:	93 2b       	or	r25, r19
    2d0a:	a4 2b       	or	r26, r20
    2d0c:	b5 2b       	or	r27, r21
    2d0e:	89 83       	std	Y+1, r24	; 0x01
    2d10:	9a 83       	std	Y+2, r25	; 0x02
    2d12:	ab 83       	std	Y+3, r26	; 0x03
    2d14:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_EPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_EPIN,DIO_u8LOW);
    2d16:	8f 81       	ldd	r24, Y+7	; 0x07
    2d18:	48 2f       	mov	r20, r24
    2d1a:	50 e0       	ldi	r21, 0x00	; 0
    2d1c:	ca 01       	movw	r24, r20
    2d1e:	88 0f       	add	r24, r24
    2d20:	99 1f       	adc	r25, r25
    2d22:	9c 01       	movw	r18, r24
    2d24:	22 0f       	add	r18, r18
    2d26:	33 1f       	adc	r19, r19
    2d28:	22 0f       	add	r18, r18
    2d2a:	33 1f       	adc	r19, r19
    2d2c:	22 0f       	add	r18, r18
    2d2e:	33 1f       	adc	r19, r19
    2d30:	82 0f       	add	r24, r18
    2d32:	93 1f       	adc	r25, r19
    2d34:	84 0f       	add	r24, r20
    2d36:	95 1f       	adc	r25, r21
    2d38:	fc 01       	movw	r30, r24
    2d3a:	e6 58       	subi	r30, 0x86	; 134
    2d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d3e:	60 81       	ld	r22, Z
    2d40:	8f 81       	ldd	r24, Y+7	; 0x07
    2d42:	48 2f       	mov	r20, r24
    2d44:	50 e0       	ldi	r21, 0x00	; 0
    2d46:	ca 01       	movw	r24, r20
    2d48:	88 0f       	add	r24, r24
    2d4a:	99 1f       	adc	r25, r25
    2d4c:	9c 01       	movw	r18, r24
    2d4e:	22 0f       	add	r18, r18
    2d50:	33 1f       	adc	r19, r19
    2d52:	22 0f       	add	r18, r18
    2d54:	33 1f       	adc	r19, r19
    2d56:	22 0f       	add	r18, r18
    2d58:	33 1f       	adc	r19, r19
    2d5a:	82 0f       	add	r24, r18
    2d5c:	93 1f       	adc	r25, r19
    2d5e:	84 0f       	add	r24, r20
    2d60:	95 1f       	adc	r25, r21
    2d62:	fc 01       	movw	r30, r24
    2d64:	e5 58       	subi	r30, 0x85	; 133
    2d66:	ff 4f       	sbci	r31, 0xFF	; 255
    2d68:	90 81       	ld	r25, Z
    2d6a:	86 2f       	mov	r24, r22
    2d6c:	69 2f       	mov	r22, r25
    2d6e:	40 e0       	ldi	r20, 0x00	; 0
    2d70:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2d74:	28 2f       	mov	r18, r24
    2d76:	30 e0       	ldi	r19, 0x00	; 0
    2d78:	40 e0       	ldi	r20, 0x00	; 0
    2d7a:	50 e0       	ldi	r21, 0x00	; 0
    2d7c:	89 81       	ldd	r24, Y+1	; 0x01
    2d7e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d80:	ab 81       	ldd	r26, Y+3	; 0x03
    2d82:	bc 81       	ldd	r27, Y+4	; 0x04
    2d84:	82 2b       	or	r24, r18
    2d86:	93 2b       	or	r25, r19
    2d88:	a4 2b       	or	r26, r20
    2d8a:	b5 2b       	or	r27, r21
    2d8c:	89 83       	std	Y+1, r24	; 0x01
    2d8e:	9a 83       	std	Y+2, r25	; 0x02
    2d90:	ab 83       	std	Y+3, r26	; 0x03
    2d92:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPIN,DIO_u8LOW);
    2d94:	8f 81       	ldd	r24, Y+7	; 0x07
    2d96:	48 2f       	mov	r20, r24
    2d98:	50 e0       	ldi	r21, 0x00	; 0
    2d9a:	ca 01       	movw	r24, r20
    2d9c:	88 0f       	add	r24, r24
    2d9e:	99 1f       	adc	r25, r25
    2da0:	9c 01       	movw	r18, r24
    2da2:	22 0f       	add	r18, r18
    2da4:	33 1f       	adc	r19, r19
    2da6:	22 0f       	add	r18, r18
    2da8:	33 1f       	adc	r19, r19
    2daa:	22 0f       	add	r18, r18
    2dac:	33 1f       	adc	r19, r19
    2dae:	82 0f       	add	r24, r18
    2db0:	93 1f       	adc	r25, r19
    2db2:	84 0f       	add	r24, r20
    2db4:	95 1f       	adc	r25, r21
    2db6:	fc 01       	movw	r30, r24
    2db8:	e4 58       	subi	r30, 0x84	; 132
    2dba:	ff 4f       	sbci	r31, 0xFF	; 255
    2dbc:	60 81       	ld	r22, Z
    2dbe:	8f 81       	ldd	r24, Y+7	; 0x07
    2dc0:	48 2f       	mov	r20, r24
    2dc2:	50 e0       	ldi	r21, 0x00	; 0
    2dc4:	ca 01       	movw	r24, r20
    2dc6:	88 0f       	add	r24, r24
    2dc8:	99 1f       	adc	r25, r25
    2dca:	9c 01       	movw	r18, r24
    2dcc:	22 0f       	add	r18, r18
    2dce:	33 1f       	adc	r19, r19
    2dd0:	22 0f       	add	r18, r18
    2dd2:	33 1f       	adc	r19, r19
    2dd4:	22 0f       	add	r18, r18
    2dd6:	33 1f       	adc	r19, r19
    2dd8:	82 0f       	add	r24, r18
    2dda:	93 1f       	adc	r25, r19
    2ddc:	84 0f       	add	r24, r20
    2dde:	95 1f       	adc	r25, r21
    2de0:	fc 01       	movw	r30, r24
    2de2:	e3 58       	subi	r30, 0x83	; 131
    2de4:	ff 4f       	sbci	r31, 0xFF	; 255
    2de6:	90 81       	ld	r25, Z
    2de8:	86 2f       	mov	r24, r22
    2dea:	69 2f       	mov	r22, r25
    2dec:	40 e0       	ldi	r20, 0x00	; 0
    2dee:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2df2:	28 2f       	mov	r18, r24
    2df4:	30 e0       	ldi	r19, 0x00	; 0
    2df6:	40 e0       	ldi	r20, 0x00	; 0
    2df8:	50 e0       	ldi	r21, 0x00	; 0
    2dfa:	89 81       	ldd	r24, Y+1	; 0x01
    2dfc:	9a 81       	ldd	r25, Y+2	; 0x02
    2dfe:	ab 81       	ldd	r26, Y+3	; 0x03
    2e00:	bc 81       	ldd	r27, Y+4	; 0x04
    2e02:	82 2b       	or	r24, r18
    2e04:	93 2b       	or	r25, r19
    2e06:	a4 2b       	or	r26, r20
    2e08:	b5 2b       	or	r27, r21
    2e0a:	89 83       	std	Y+1, r24	; 0x01
    2e0c:	9a 83       	std	Y+2, r25	; 0x02
    2e0e:	ab 83       	std	Y+3, r26	; 0x03
    2e10:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPIN,DIO_u8LOW);
    2e12:	8f 81       	ldd	r24, Y+7	; 0x07
    2e14:	48 2f       	mov	r20, r24
    2e16:	50 e0       	ldi	r21, 0x00	; 0
    2e18:	ca 01       	movw	r24, r20
    2e1a:	88 0f       	add	r24, r24
    2e1c:	99 1f       	adc	r25, r25
    2e1e:	9c 01       	movw	r18, r24
    2e20:	22 0f       	add	r18, r18
    2e22:	33 1f       	adc	r19, r19
    2e24:	22 0f       	add	r18, r18
    2e26:	33 1f       	adc	r19, r19
    2e28:	22 0f       	add	r18, r18
    2e2a:	33 1f       	adc	r19, r19
    2e2c:	82 0f       	add	r24, r18
    2e2e:	93 1f       	adc	r25, r19
    2e30:	84 0f       	add	r24, r20
    2e32:	95 1f       	adc	r25, r21
    2e34:	fc 01       	movw	r30, r24
    2e36:	e2 58       	subi	r30, 0x82	; 130
    2e38:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3a:	60 81       	ld	r22, Z
    2e3c:	8f 81       	ldd	r24, Y+7	; 0x07
    2e3e:	48 2f       	mov	r20, r24
    2e40:	50 e0       	ldi	r21, 0x00	; 0
    2e42:	ca 01       	movw	r24, r20
    2e44:	88 0f       	add	r24, r24
    2e46:	99 1f       	adc	r25, r25
    2e48:	9c 01       	movw	r18, r24
    2e4a:	22 0f       	add	r18, r18
    2e4c:	33 1f       	adc	r19, r19
    2e4e:	22 0f       	add	r18, r18
    2e50:	33 1f       	adc	r19, r19
    2e52:	22 0f       	add	r18, r18
    2e54:	33 1f       	adc	r19, r19
    2e56:	82 0f       	add	r24, r18
    2e58:	93 1f       	adc	r25, r19
    2e5a:	84 0f       	add	r24, r20
    2e5c:	95 1f       	adc	r25, r21
    2e5e:	fc 01       	movw	r30, r24
    2e60:	e1 58       	subi	r30, 0x81	; 129
    2e62:	ff 4f       	sbci	r31, 0xFF	; 255
    2e64:	90 81       	ld	r25, Z
    2e66:	86 2f       	mov	r24, r22
    2e68:	69 2f       	mov	r22, r25
    2e6a:	40 e0       	ldi	r20, 0x00	; 0
    2e6c:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2e70:	28 2f       	mov	r18, r24
    2e72:	30 e0       	ldi	r19, 0x00	; 0
    2e74:	40 e0       	ldi	r20, 0x00	; 0
    2e76:	50 e0       	ldi	r21, 0x00	; 0
    2e78:	89 81       	ldd	r24, Y+1	; 0x01
    2e7a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e7c:	ab 81       	ldd	r26, Y+3	; 0x03
    2e7e:	bc 81       	ldd	r27, Y+4	; 0x04
    2e80:	82 2b       	or	r24, r18
    2e82:	93 2b       	or	r25, r19
    2e84:	a4 2b       	or	r26, r20
    2e86:	b5 2b       	or	r27, r21
    2e88:	89 83       	std	Y+1, r24	; 0x01
    2e8a:	9a 83       	std	Y+2, r25	; 0x02
    2e8c:	ab 83       	std	Y+3, r26	; 0x03
    2e8e:	bc 83       	std	Y+4, r27	; 0x04
			Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPIN , DIO_u8LOW);
    2e90:	8f 81       	ldd	r24, Y+7	; 0x07
    2e92:	48 2f       	mov	r20, r24
    2e94:	50 e0       	ldi	r21, 0x00	; 0
    2e96:	ca 01       	movw	r24, r20
    2e98:	88 0f       	add	r24, r24
    2e9a:	99 1f       	adc	r25, r25
    2e9c:	9c 01       	movw	r18, r24
    2e9e:	22 0f       	add	r18, r18
    2ea0:	33 1f       	adc	r19, r19
    2ea2:	22 0f       	add	r18, r18
    2ea4:	33 1f       	adc	r19, r19
    2ea6:	22 0f       	add	r18, r18
    2ea8:	33 1f       	adc	r19, r19
    2eaa:	82 0f       	add	r24, r18
    2eac:	93 1f       	adc	r25, r19
    2eae:	84 0f       	add	r24, r20
    2eb0:	95 1f       	adc	r25, r21
    2eb2:	fc 01       	movw	r30, r24
    2eb4:	ee 57       	subi	r30, 0x7E	; 126
    2eb6:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb8:	60 81       	ld	r22, Z
    2eba:	8f 81       	ldd	r24, Y+7	; 0x07
    2ebc:	48 2f       	mov	r20, r24
    2ebe:	50 e0       	ldi	r21, 0x00	; 0
    2ec0:	ca 01       	movw	r24, r20
    2ec2:	88 0f       	add	r24, r24
    2ec4:	99 1f       	adc	r25, r25
    2ec6:	9c 01       	movw	r18, r24
    2ec8:	22 0f       	add	r18, r18
    2eca:	33 1f       	adc	r19, r19
    2ecc:	22 0f       	add	r18, r18
    2ece:	33 1f       	adc	r19, r19
    2ed0:	22 0f       	add	r18, r18
    2ed2:	33 1f       	adc	r19, r19
    2ed4:	82 0f       	add	r24, r18
    2ed6:	93 1f       	adc	r25, r19
    2ed8:	84 0f       	add	r24, r20
    2eda:	95 1f       	adc	r25, r21
    2edc:	fc 01       	movw	r30, r24
    2ede:	ed 57       	subi	r30, 0x7D	; 125
    2ee0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee2:	90 81       	ld	r25, Z
    2ee4:	86 2f       	mov	r24, r22
    2ee6:	69 2f       	mov	r22, r25
    2ee8:	40 e0       	ldi	r20, 0x00	; 0
    2eea:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2eee:	8e 83       	std	Y+6, r24	; 0x06
    2ef0:	f9 c1       	rjmp	.+1010   	; 0x32e4 <S_Segmet_enuClearDisplay+0x80a>
		}
		else if(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_TYPE == COMMON_ANODE)
    2ef2:	8f 81       	ldd	r24, Y+7	; 0x07
    2ef4:	48 2f       	mov	r20, r24
    2ef6:	50 e0       	ldi	r21, 0x00	; 0
    2ef8:	ca 01       	movw	r24, r20
    2efa:	88 0f       	add	r24, r24
    2efc:	99 1f       	adc	r25, r25
    2efe:	9c 01       	movw	r18, r24
    2f00:	22 0f       	add	r18, r18
    2f02:	33 1f       	adc	r19, r19
    2f04:	22 0f       	add	r18, r18
    2f06:	33 1f       	adc	r19, r19
    2f08:	22 0f       	add	r18, r18
    2f0a:	33 1f       	adc	r19, r19
    2f0c:	82 0f       	add	r24, r18
    2f0e:	93 1f       	adc	r25, r19
    2f10:	84 0f       	add	r24, r20
    2f12:	95 1f       	adc	r25, r21
    2f14:	fc 01       	movw	r30, r24
    2f16:	ec 57       	subi	r30, 0x7C	; 124
    2f18:	ff 4f       	sbci	r31, 0xFF	; 255
    2f1a:	80 81       	ld	r24, Z
    2f1c:	81 30       	cpi	r24, 0x01	; 1
    2f1e:	09 f0       	breq	.+2      	; 0x2f22 <S_Segmet_enuClearDisplay+0x448>
    2f20:	e1 c1       	rjmp	.+962    	; 0x32e4 <S_Segmet_enuClearDisplay+0x80a>
		{
			Local_u32CheckError=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_APORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_APIN, DIO_u8HIGH);
    2f22:	8f 81       	ldd	r24, Y+7	; 0x07
    2f24:	48 2f       	mov	r20, r24
    2f26:	50 e0       	ldi	r21, 0x00	; 0
    2f28:	ca 01       	movw	r24, r20
    2f2a:	88 0f       	add	r24, r24
    2f2c:	99 1f       	adc	r25, r25
    2f2e:	9c 01       	movw	r18, r24
    2f30:	22 0f       	add	r18, r18
    2f32:	33 1f       	adc	r19, r19
    2f34:	22 0f       	add	r18, r18
    2f36:	33 1f       	adc	r19, r19
    2f38:	22 0f       	add	r18, r18
    2f3a:	33 1f       	adc	r19, r19
    2f3c:	82 0f       	add	r24, r18
    2f3e:	93 1f       	adc	r25, r19
    2f40:	84 0f       	add	r24, r20
    2f42:	95 1f       	adc	r25, r21
    2f44:	fc 01       	movw	r30, r24
    2f46:	ee 58       	subi	r30, 0x8E	; 142
    2f48:	ff 4f       	sbci	r31, 0xFF	; 255
    2f4a:	60 81       	ld	r22, Z
    2f4c:	8f 81       	ldd	r24, Y+7	; 0x07
    2f4e:	48 2f       	mov	r20, r24
    2f50:	50 e0       	ldi	r21, 0x00	; 0
    2f52:	ca 01       	movw	r24, r20
    2f54:	88 0f       	add	r24, r24
    2f56:	99 1f       	adc	r25, r25
    2f58:	9c 01       	movw	r18, r24
    2f5a:	22 0f       	add	r18, r18
    2f5c:	33 1f       	adc	r19, r19
    2f5e:	22 0f       	add	r18, r18
    2f60:	33 1f       	adc	r19, r19
    2f62:	22 0f       	add	r18, r18
    2f64:	33 1f       	adc	r19, r19
    2f66:	82 0f       	add	r24, r18
    2f68:	93 1f       	adc	r25, r19
    2f6a:	84 0f       	add	r24, r20
    2f6c:	95 1f       	adc	r25, r21
    2f6e:	fc 01       	movw	r30, r24
    2f70:	ed 58       	subi	r30, 0x8D	; 141
    2f72:	ff 4f       	sbci	r31, 0xFF	; 255
    2f74:	90 81       	ld	r25, Z
    2f76:	86 2f       	mov	r24, r22
    2f78:	69 2f       	mov	r22, r25
    2f7a:	41 e0       	ldi	r20, 0x01	; 1
    2f7c:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2f80:	88 2f       	mov	r24, r24
    2f82:	90 e0       	ldi	r25, 0x00	; 0
    2f84:	a0 e0       	ldi	r26, 0x00	; 0
    2f86:	b0 e0       	ldi	r27, 0x00	; 0
    2f88:	89 83       	std	Y+1, r24	; 0x01
    2f8a:	9a 83       	std	Y+2, r25	; 0x02
    2f8c:	ab 83       	std	Y+3, r26	; 0x03
    2f8e:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_BPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_BPIN,DIO_u8HIGH);
    2f90:	8f 81       	ldd	r24, Y+7	; 0x07
    2f92:	48 2f       	mov	r20, r24
    2f94:	50 e0       	ldi	r21, 0x00	; 0
    2f96:	ca 01       	movw	r24, r20
    2f98:	88 0f       	add	r24, r24
    2f9a:	99 1f       	adc	r25, r25
    2f9c:	9c 01       	movw	r18, r24
    2f9e:	22 0f       	add	r18, r18
    2fa0:	33 1f       	adc	r19, r19
    2fa2:	22 0f       	add	r18, r18
    2fa4:	33 1f       	adc	r19, r19
    2fa6:	22 0f       	add	r18, r18
    2fa8:	33 1f       	adc	r19, r19
    2faa:	82 0f       	add	r24, r18
    2fac:	93 1f       	adc	r25, r19
    2fae:	84 0f       	add	r24, r20
    2fb0:	95 1f       	adc	r25, r21
    2fb2:	fc 01       	movw	r30, r24
    2fb4:	ec 58       	subi	r30, 0x8C	; 140
    2fb6:	ff 4f       	sbci	r31, 0xFF	; 255
    2fb8:	60 81       	ld	r22, Z
    2fba:	8f 81       	ldd	r24, Y+7	; 0x07
    2fbc:	48 2f       	mov	r20, r24
    2fbe:	50 e0       	ldi	r21, 0x00	; 0
    2fc0:	ca 01       	movw	r24, r20
    2fc2:	88 0f       	add	r24, r24
    2fc4:	99 1f       	adc	r25, r25
    2fc6:	9c 01       	movw	r18, r24
    2fc8:	22 0f       	add	r18, r18
    2fca:	33 1f       	adc	r19, r19
    2fcc:	22 0f       	add	r18, r18
    2fce:	33 1f       	adc	r19, r19
    2fd0:	22 0f       	add	r18, r18
    2fd2:	33 1f       	adc	r19, r19
    2fd4:	82 0f       	add	r24, r18
    2fd6:	93 1f       	adc	r25, r19
    2fd8:	84 0f       	add	r24, r20
    2fda:	95 1f       	adc	r25, r21
    2fdc:	fc 01       	movw	r30, r24
    2fde:	eb 58       	subi	r30, 0x8B	; 139
    2fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe2:	90 81       	ld	r25, Z
    2fe4:	86 2f       	mov	r24, r22
    2fe6:	69 2f       	mov	r22, r25
    2fe8:	41 e0       	ldi	r20, 0x01	; 1
    2fea:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    2fee:	28 2f       	mov	r18, r24
    2ff0:	30 e0       	ldi	r19, 0x00	; 0
    2ff2:	40 e0       	ldi	r20, 0x00	; 0
    2ff4:	50 e0       	ldi	r21, 0x00	; 0
    2ff6:	89 81       	ldd	r24, Y+1	; 0x01
    2ff8:	9a 81       	ldd	r25, Y+2	; 0x02
    2ffa:	ab 81       	ldd	r26, Y+3	; 0x03
    2ffc:	bc 81       	ldd	r27, Y+4	; 0x04
    2ffe:	82 2b       	or	r24, r18
    3000:	93 2b       	or	r25, r19
    3002:	a4 2b       	or	r26, r20
    3004:	b5 2b       	or	r27, r21
    3006:	89 83       	std	Y+1, r24	; 0x01
    3008:	9a 83       	std	Y+2, r25	; 0x02
    300a:	ab 83       	std	Y+3, r26	; 0x03
    300c:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_CPIN,DIO_u8HIGH);
    300e:	8f 81       	ldd	r24, Y+7	; 0x07
    3010:	48 2f       	mov	r20, r24
    3012:	50 e0       	ldi	r21, 0x00	; 0
    3014:	ca 01       	movw	r24, r20
    3016:	88 0f       	add	r24, r24
    3018:	99 1f       	adc	r25, r25
    301a:	9c 01       	movw	r18, r24
    301c:	22 0f       	add	r18, r18
    301e:	33 1f       	adc	r19, r19
    3020:	22 0f       	add	r18, r18
    3022:	33 1f       	adc	r19, r19
    3024:	22 0f       	add	r18, r18
    3026:	33 1f       	adc	r19, r19
    3028:	82 0f       	add	r24, r18
    302a:	93 1f       	adc	r25, r19
    302c:	84 0f       	add	r24, r20
    302e:	95 1f       	adc	r25, r21
    3030:	fc 01       	movw	r30, r24
    3032:	ea 58       	subi	r30, 0x8A	; 138
    3034:	ff 4f       	sbci	r31, 0xFF	; 255
    3036:	60 81       	ld	r22, Z
    3038:	8f 81       	ldd	r24, Y+7	; 0x07
    303a:	48 2f       	mov	r20, r24
    303c:	50 e0       	ldi	r21, 0x00	; 0
    303e:	ca 01       	movw	r24, r20
    3040:	88 0f       	add	r24, r24
    3042:	99 1f       	adc	r25, r25
    3044:	9c 01       	movw	r18, r24
    3046:	22 0f       	add	r18, r18
    3048:	33 1f       	adc	r19, r19
    304a:	22 0f       	add	r18, r18
    304c:	33 1f       	adc	r19, r19
    304e:	22 0f       	add	r18, r18
    3050:	33 1f       	adc	r19, r19
    3052:	82 0f       	add	r24, r18
    3054:	93 1f       	adc	r25, r19
    3056:	84 0f       	add	r24, r20
    3058:	95 1f       	adc	r25, r21
    305a:	fc 01       	movw	r30, r24
    305c:	e9 58       	subi	r30, 0x89	; 137
    305e:	ff 4f       	sbci	r31, 0xFF	; 255
    3060:	90 81       	ld	r25, Z
    3062:	86 2f       	mov	r24, r22
    3064:	69 2f       	mov	r22, r25
    3066:	41 e0       	ldi	r20, 0x01	; 1
    3068:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    306c:	28 2f       	mov	r18, r24
    306e:	30 e0       	ldi	r19, 0x00	; 0
    3070:	40 e0       	ldi	r20, 0x00	; 0
    3072:	50 e0       	ldi	r21, 0x00	; 0
    3074:	89 81       	ldd	r24, Y+1	; 0x01
    3076:	9a 81       	ldd	r25, Y+2	; 0x02
    3078:	ab 81       	ldd	r26, Y+3	; 0x03
    307a:	bc 81       	ldd	r27, Y+4	; 0x04
    307c:	82 2b       	or	r24, r18
    307e:	93 2b       	or	r25, r19
    3080:	a4 2b       	or	r26, r20
    3082:	b5 2b       	or	r27, r21
    3084:	89 83       	std	Y+1, r24	; 0x01
    3086:	9a 83       	std	Y+2, r25	; 0x02
    3088:	ab 83       	std	Y+3, r26	; 0x03
    308a:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DPIN,DIO_u8HIGH);
    308c:	8f 81       	ldd	r24, Y+7	; 0x07
    308e:	48 2f       	mov	r20, r24
    3090:	50 e0       	ldi	r21, 0x00	; 0
    3092:	ca 01       	movw	r24, r20
    3094:	88 0f       	add	r24, r24
    3096:	99 1f       	adc	r25, r25
    3098:	9c 01       	movw	r18, r24
    309a:	22 0f       	add	r18, r18
    309c:	33 1f       	adc	r19, r19
    309e:	22 0f       	add	r18, r18
    30a0:	33 1f       	adc	r19, r19
    30a2:	22 0f       	add	r18, r18
    30a4:	33 1f       	adc	r19, r19
    30a6:	82 0f       	add	r24, r18
    30a8:	93 1f       	adc	r25, r19
    30aa:	84 0f       	add	r24, r20
    30ac:	95 1f       	adc	r25, r21
    30ae:	fc 01       	movw	r30, r24
    30b0:	e8 58       	subi	r30, 0x88	; 136
    30b2:	ff 4f       	sbci	r31, 0xFF	; 255
    30b4:	60 81       	ld	r22, Z
    30b6:	8f 81       	ldd	r24, Y+7	; 0x07
    30b8:	48 2f       	mov	r20, r24
    30ba:	50 e0       	ldi	r21, 0x00	; 0
    30bc:	ca 01       	movw	r24, r20
    30be:	88 0f       	add	r24, r24
    30c0:	99 1f       	adc	r25, r25
    30c2:	9c 01       	movw	r18, r24
    30c4:	22 0f       	add	r18, r18
    30c6:	33 1f       	adc	r19, r19
    30c8:	22 0f       	add	r18, r18
    30ca:	33 1f       	adc	r19, r19
    30cc:	22 0f       	add	r18, r18
    30ce:	33 1f       	adc	r19, r19
    30d0:	82 0f       	add	r24, r18
    30d2:	93 1f       	adc	r25, r19
    30d4:	84 0f       	add	r24, r20
    30d6:	95 1f       	adc	r25, r21
    30d8:	fc 01       	movw	r30, r24
    30da:	e7 58       	subi	r30, 0x87	; 135
    30dc:	ff 4f       	sbci	r31, 0xFF	; 255
    30de:	90 81       	ld	r25, Z
    30e0:	86 2f       	mov	r24, r22
    30e2:	69 2f       	mov	r22, r25
    30e4:	41 e0       	ldi	r20, 0x01	; 1
    30e6:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    30ea:	28 2f       	mov	r18, r24
    30ec:	30 e0       	ldi	r19, 0x00	; 0
    30ee:	40 e0       	ldi	r20, 0x00	; 0
    30f0:	50 e0       	ldi	r21, 0x00	; 0
    30f2:	89 81       	ldd	r24, Y+1	; 0x01
    30f4:	9a 81       	ldd	r25, Y+2	; 0x02
    30f6:	ab 81       	ldd	r26, Y+3	; 0x03
    30f8:	bc 81       	ldd	r27, Y+4	; 0x04
    30fa:	82 2b       	or	r24, r18
    30fc:	93 2b       	or	r25, r19
    30fe:	a4 2b       	or	r26, r20
    3100:	b5 2b       	or	r27, r21
    3102:	89 83       	std	Y+1, r24	; 0x01
    3104:	9a 83       	std	Y+2, r25	; 0x02
    3106:	ab 83       	std	Y+3, r26	; 0x03
    3108:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_EPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_EPIN,DIO_u8HIGH);
    310a:	8f 81       	ldd	r24, Y+7	; 0x07
    310c:	48 2f       	mov	r20, r24
    310e:	50 e0       	ldi	r21, 0x00	; 0
    3110:	ca 01       	movw	r24, r20
    3112:	88 0f       	add	r24, r24
    3114:	99 1f       	adc	r25, r25
    3116:	9c 01       	movw	r18, r24
    3118:	22 0f       	add	r18, r18
    311a:	33 1f       	adc	r19, r19
    311c:	22 0f       	add	r18, r18
    311e:	33 1f       	adc	r19, r19
    3120:	22 0f       	add	r18, r18
    3122:	33 1f       	adc	r19, r19
    3124:	82 0f       	add	r24, r18
    3126:	93 1f       	adc	r25, r19
    3128:	84 0f       	add	r24, r20
    312a:	95 1f       	adc	r25, r21
    312c:	fc 01       	movw	r30, r24
    312e:	e6 58       	subi	r30, 0x86	; 134
    3130:	ff 4f       	sbci	r31, 0xFF	; 255
    3132:	60 81       	ld	r22, Z
    3134:	8f 81       	ldd	r24, Y+7	; 0x07
    3136:	48 2f       	mov	r20, r24
    3138:	50 e0       	ldi	r21, 0x00	; 0
    313a:	ca 01       	movw	r24, r20
    313c:	88 0f       	add	r24, r24
    313e:	99 1f       	adc	r25, r25
    3140:	9c 01       	movw	r18, r24
    3142:	22 0f       	add	r18, r18
    3144:	33 1f       	adc	r19, r19
    3146:	22 0f       	add	r18, r18
    3148:	33 1f       	adc	r19, r19
    314a:	22 0f       	add	r18, r18
    314c:	33 1f       	adc	r19, r19
    314e:	82 0f       	add	r24, r18
    3150:	93 1f       	adc	r25, r19
    3152:	84 0f       	add	r24, r20
    3154:	95 1f       	adc	r25, r21
    3156:	fc 01       	movw	r30, r24
    3158:	e5 58       	subi	r30, 0x85	; 133
    315a:	ff 4f       	sbci	r31, 0xFF	; 255
    315c:	90 81       	ld	r25, Z
    315e:	86 2f       	mov	r24, r22
    3160:	69 2f       	mov	r22, r25
    3162:	41 e0       	ldi	r20, 0x01	; 1
    3164:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    3168:	28 2f       	mov	r18, r24
    316a:	30 e0       	ldi	r19, 0x00	; 0
    316c:	40 e0       	ldi	r20, 0x00	; 0
    316e:	50 e0       	ldi	r21, 0x00	; 0
    3170:	89 81       	ldd	r24, Y+1	; 0x01
    3172:	9a 81       	ldd	r25, Y+2	; 0x02
    3174:	ab 81       	ldd	r26, Y+3	; 0x03
    3176:	bc 81       	ldd	r27, Y+4	; 0x04
    3178:	82 2b       	or	r24, r18
    317a:	93 2b       	or	r25, r19
    317c:	a4 2b       	or	r26, r20
    317e:	b5 2b       	or	r27, r21
    3180:	89 83       	std	Y+1, r24	; 0x01
    3182:	9a 83       	std	Y+2, r25	; 0x02
    3184:	ab 83       	std	Y+3, r26	; 0x03
    3186:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPIN,DIO_u8HIGH);
    3188:	8f 81       	ldd	r24, Y+7	; 0x07
    318a:	48 2f       	mov	r20, r24
    318c:	50 e0       	ldi	r21, 0x00	; 0
    318e:	ca 01       	movw	r24, r20
    3190:	88 0f       	add	r24, r24
    3192:	99 1f       	adc	r25, r25
    3194:	9c 01       	movw	r18, r24
    3196:	22 0f       	add	r18, r18
    3198:	33 1f       	adc	r19, r19
    319a:	22 0f       	add	r18, r18
    319c:	33 1f       	adc	r19, r19
    319e:	22 0f       	add	r18, r18
    31a0:	33 1f       	adc	r19, r19
    31a2:	82 0f       	add	r24, r18
    31a4:	93 1f       	adc	r25, r19
    31a6:	84 0f       	add	r24, r20
    31a8:	95 1f       	adc	r25, r21
    31aa:	fc 01       	movw	r30, r24
    31ac:	e4 58       	subi	r30, 0x84	; 132
    31ae:	ff 4f       	sbci	r31, 0xFF	; 255
    31b0:	60 81       	ld	r22, Z
    31b2:	8f 81       	ldd	r24, Y+7	; 0x07
    31b4:	48 2f       	mov	r20, r24
    31b6:	50 e0       	ldi	r21, 0x00	; 0
    31b8:	ca 01       	movw	r24, r20
    31ba:	88 0f       	add	r24, r24
    31bc:	99 1f       	adc	r25, r25
    31be:	9c 01       	movw	r18, r24
    31c0:	22 0f       	add	r18, r18
    31c2:	33 1f       	adc	r19, r19
    31c4:	22 0f       	add	r18, r18
    31c6:	33 1f       	adc	r19, r19
    31c8:	22 0f       	add	r18, r18
    31ca:	33 1f       	adc	r19, r19
    31cc:	82 0f       	add	r24, r18
    31ce:	93 1f       	adc	r25, r19
    31d0:	84 0f       	add	r24, r20
    31d2:	95 1f       	adc	r25, r21
    31d4:	fc 01       	movw	r30, r24
    31d6:	e3 58       	subi	r30, 0x83	; 131
    31d8:	ff 4f       	sbci	r31, 0xFF	; 255
    31da:	90 81       	ld	r25, Z
    31dc:	86 2f       	mov	r24, r22
    31de:	69 2f       	mov	r22, r25
    31e0:	41 e0       	ldi	r20, 0x01	; 1
    31e2:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    31e6:	28 2f       	mov	r18, r24
    31e8:	30 e0       	ldi	r19, 0x00	; 0
    31ea:	40 e0       	ldi	r20, 0x00	; 0
    31ec:	50 e0       	ldi	r21, 0x00	; 0
    31ee:	89 81       	ldd	r24, Y+1	; 0x01
    31f0:	9a 81       	ldd	r25, Y+2	; 0x02
    31f2:	ab 81       	ldd	r26, Y+3	; 0x03
    31f4:	bc 81       	ldd	r27, Y+4	; 0x04
    31f6:	82 2b       	or	r24, r18
    31f8:	93 2b       	or	r25, r19
    31fa:	a4 2b       	or	r26, r20
    31fc:	b5 2b       	or	r27, r21
    31fe:	89 83       	std	Y+1, r24	; 0x01
    3200:	9a 83       	std	Y+2, r25	; 0x02
    3202:	ab 83       	std	Y+3, r26	; 0x03
    3204:	bc 83       	std	Y+4, r27	; 0x04
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPIN,DIO_u8HIGH);
    3206:	8f 81       	ldd	r24, Y+7	; 0x07
    3208:	48 2f       	mov	r20, r24
    320a:	50 e0       	ldi	r21, 0x00	; 0
    320c:	ca 01       	movw	r24, r20
    320e:	88 0f       	add	r24, r24
    3210:	99 1f       	adc	r25, r25
    3212:	9c 01       	movw	r18, r24
    3214:	22 0f       	add	r18, r18
    3216:	33 1f       	adc	r19, r19
    3218:	22 0f       	add	r18, r18
    321a:	33 1f       	adc	r19, r19
    321c:	22 0f       	add	r18, r18
    321e:	33 1f       	adc	r19, r19
    3220:	82 0f       	add	r24, r18
    3222:	93 1f       	adc	r25, r19
    3224:	84 0f       	add	r24, r20
    3226:	95 1f       	adc	r25, r21
    3228:	fc 01       	movw	r30, r24
    322a:	e2 58       	subi	r30, 0x82	; 130
    322c:	ff 4f       	sbci	r31, 0xFF	; 255
    322e:	60 81       	ld	r22, Z
    3230:	8f 81       	ldd	r24, Y+7	; 0x07
    3232:	48 2f       	mov	r20, r24
    3234:	50 e0       	ldi	r21, 0x00	; 0
    3236:	ca 01       	movw	r24, r20
    3238:	88 0f       	add	r24, r24
    323a:	99 1f       	adc	r25, r25
    323c:	9c 01       	movw	r18, r24
    323e:	22 0f       	add	r18, r18
    3240:	33 1f       	adc	r19, r19
    3242:	22 0f       	add	r18, r18
    3244:	33 1f       	adc	r19, r19
    3246:	22 0f       	add	r18, r18
    3248:	33 1f       	adc	r19, r19
    324a:	82 0f       	add	r24, r18
    324c:	93 1f       	adc	r25, r19
    324e:	84 0f       	add	r24, r20
    3250:	95 1f       	adc	r25, r21
    3252:	fc 01       	movw	r30, r24
    3254:	e1 58       	subi	r30, 0x81	; 129
    3256:	ff 4f       	sbci	r31, 0xFF	; 255
    3258:	90 81       	ld	r25, Z
    325a:	86 2f       	mov	r24, r22
    325c:	69 2f       	mov	r22, r25
    325e:	41 e0       	ldi	r20, 0x01	; 1
    3260:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    3264:	28 2f       	mov	r18, r24
    3266:	30 e0       	ldi	r19, 0x00	; 0
    3268:	40 e0       	ldi	r20, 0x00	; 0
    326a:	50 e0       	ldi	r21, 0x00	; 0
    326c:	89 81       	ldd	r24, Y+1	; 0x01
    326e:	9a 81       	ldd	r25, Y+2	; 0x02
    3270:	ab 81       	ldd	r26, Y+3	; 0x03
    3272:	bc 81       	ldd	r27, Y+4	; 0x04
    3274:	82 2b       	or	r24, r18
    3276:	93 2b       	or	r25, r19
    3278:	a4 2b       	or	r26, r20
    327a:	b5 2b       	or	r27, r21
    327c:	89 83       	std	Y+1, r24	; 0x01
    327e:	9a 83       	std	Y+2, r25	; 0x02
    3280:	ab 83       	std	Y+3, r26	; 0x03
    3282:	bc 83       	std	Y+4, r27	; 0x04
			Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPIN , DIO_u8HIGH);
    3284:	8f 81       	ldd	r24, Y+7	; 0x07
    3286:	48 2f       	mov	r20, r24
    3288:	50 e0       	ldi	r21, 0x00	; 0
    328a:	ca 01       	movw	r24, r20
    328c:	88 0f       	add	r24, r24
    328e:	99 1f       	adc	r25, r25
    3290:	9c 01       	movw	r18, r24
    3292:	22 0f       	add	r18, r18
    3294:	33 1f       	adc	r19, r19
    3296:	22 0f       	add	r18, r18
    3298:	33 1f       	adc	r19, r19
    329a:	22 0f       	add	r18, r18
    329c:	33 1f       	adc	r19, r19
    329e:	82 0f       	add	r24, r18
    32a0:	93 1f       	adc	r25, r19
    32a2:	84 0f       	add	r24, r20
    32a4:	95 1f       	adc	r25, r21
    32a6:	fc 01       	movw	r30, r24
    32a8:	ee 57       	subi	r30, 0x7E	; 126
    32aa:	ff 4f       	sbci	r31, 0xFF	; 255
    32ac:	60 81       	ld	r22, Z
    32ae:	8f 81       	ldd	r24, Y+7	; 0x07
    32b0:	48 2f       	mov	r20, r24
    32b2:	50 e0       	ldi	r21, 0x00	; 0
    32b4:	ca 01       	movw	r24, r20
    32b6:	88 0f       	add	r24, r24
    32b8:	99 1f       	adc	r25, r25
    32ba:	9c 01       	movw	r18, r24
    32bc:	22 0f       	add	r18, r18
    32be:	33 1f       	adc	r19, r19
    32c0:	22 0f       	add	r18, r18
    32c2:	33 1f       	adc	r19, r19
    32c4:	22 0f       	add	r18, r18
    32c6:	33 1f       	adc	r19, r19
    32c8:	82 0f       	add	r24, r18
    32ca:	93 1f       	adc	r25, r19
    32cc:	84 0f       	add	r24, r20
    32ce:	95 1f       	adc	r25, r21
    32d0:	fc 01       	movw	r30, r24
    32d2:	ed 57       	subi	r30, 0x7D	; 125
    32d4:	ff 4f       	sbci	r31, 0xFF	; 255
    32d6:	90 81       	ld	r25, Z
    32d8:	86 2f       	mov	r24, r22
    32da:	69 2f       	mov	r22, r25
    32dc:	41 e0       	ldi	r20, 0x01	; 1
    32de:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuSet_PinValue>
    32e2:	8e 83       	std	Y+6, r24	; 0x06
		}
	}
	for(Local_u8Iter=0 ; Local_u8Iter < sizeof(Local_u8Iter)*8 ; Local_u8Iter+=3)
    32e4:	1d 82       	std	Y+5, r1	; 0x05
    32e6:	1e c0       	rjmp	.+60     	; 0x3324 <S_Segmet_enuClearDisplay+0x84a>
			 {
				 if( ( ( (Local_u32CheckError)>>Local_u8Iter) &7 ) !=ES_OK )
    32e8:	8d 81       	ldd	r24, Y+5	; 0x05
    32ea:	28 2f       	mov	r18, r24
    32ec:	30 e0       	ldi	r19, 0x00	; 0
    32ee:	89 81       	ldd	r24, Y+1	; 0x01
    32f0:	9a 81       	ldd	r25, Y+2	; 0x02
    32f2:	ab 81       	ldd	r26, Y+3	; 0x03
    32f4:	bc 81       	ldd	r27, Y+4	; 0x04
    32f6:	02 2e       	mov	r0, r18
    32f8:	04 c0       	rjmp	.+8      	; 0x3302 <S_Segmet_enuClearDisplay+0x828>
    32fa:	b6 95       	lsr	r27
    32fc:	a7 95       	ror	r26
    32fe:	97 95       	ror	r25
    3300:	87 95       	ror	r24
    3302:	0a 94       	dec	r0
    3304:	d2 f7       	brpl	.-12     	; 0x32fa <S_Segmet_enuClearDisplay+0x820>
    3306:	87 70       	andi	r24, 0x07	; 7
    3308:	90 70       	andi	r25, 0x00	; 0
    330a:	a0 70       	andi	r26, 0x00	; 0
    330c:	b0 70       	andi	r27, 0x00	; 0
    330e:	00 97       	sbiw	r24, 0x00	; 0
    3310:	a1 05       	cpc	r26, r1
    3312:	b1 05       	cpc	r27, r1
    3314:	19 f0       	breq	.+6      	; 0x331c <S_Segmet_enuClearDisplay+0x842>
				 {
					 return Local_enuErrorState;
    3316:	8e 81       	ldd	r24, Y+6	; 0x06
    3318:	88 87       	std	Y+8, r24	; 0x08
    331a:	09 c0       	rjmp	.+18     	; 0x332e <S_Segmet_enuClearDisplay+0x854>
				 }
				 else
				 {
					 Local_enuErrorState=ES_OK;
    331c:	1e 82       	std	Y+6, r1	; 0x06
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_FPIN,DIO_u8HIGH);
			Local_u32CheckError|=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPORT,S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_GPIN,DIO_u8HIGH);
			Local_enuErrorState=DIO_enuSet_PinValue(S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPORT , S_SEGMENT_AstrSegconfig[Copy_u8SegID].SEG_DOTPIN , DIO_u8HIGH);
		}
	}
	for(Local_u8Iter=0 ; Local_u8Iter < sizeof(Local_u8Iter)*8 ; Local_u8Iter+=3)
    331e:	8d 81       	ldd	r24, Y+5	; 0x05
    3320:	8d 5f       	subi	r24, 0xFD	; 253
    3322:	8d 83       	std	Y+5, r24	; 0x05
    3324:	8d 81       	ldd	r24, Y+5	; 0x05
    3326:	88 30       	cpi	r24, 0x08	; 8
    3328:	f8 f2       	brcs	.-66     	; 0x32e8 <S_Segmet_enuClearDisplay+0x80e>
				 else
				 {
					 Local_enuErrorState=ES_OK;
				 }
			 }
	return Local_enuErrorState;
    332a:	8e 81       	ldd	r24, Y+6	; 0x06
    332c:	88 87       	std	Y+8, r24	; 0x08
    332e:	88 85       	ldd	r24, Y+8	; 0x08
}
    3330:	28 96       	adiw	r28, 0x08	; 8
    3332:	0f b6       	in	r0, 0x3f	; 63
    3334:	f8 94       	cli
    3336:	de bf       	out	0x3e, r29	; 62
    3338:	0f be       	out	0x3f, r0	; 63
    333a:	cd bf       	out	0x3d, r28	; 61
    333c:	cf 91       	pop	r28
    333e:	df 91       	pop	r29
    3340:	08 95       	ret

00003342 <main>:
#include "S_Segment_config.h"
#include "S_Segment_int.h"
#include <util/delay.h>
extern SS_t S_SEGMENT_AstrSegconfig[SS_Num];
int main()
{
    3342:	df 93       	push	r29
    3344:	cf 93       	push	r28
    3346:	cd b7       	in	r28, 0x3d	; 61
    3348:	de b7       	in	r29, 0x3e	; 62
    334a:	60 97       	sbiw	r28, 0x10	; 16
    334c:	0f b6       	in	r0, 0x3f	; 63
    334e:	f8 94       	cli
    3350:	de bf       	out	0x3e, r29	; 62
    3352:	0f be       	out	0x3f, r0	; 63
    3354:	cd bf       	out	0x3d, r28	; 61
	DIO_enuInit();
    3356:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_enuInit>
	S_Segment_enuInit(S_SEGMENT_AstrSegconfig);
    335a:	82 e7       	ldi	r24, 0x72	; 114
    335c:	90 e0       	ldi	r25, 0x00	; 0
    335e:	0e 94 1c 0a 	call	0x1438	; 0x1438 <S_Segment_enuInit>

	while(1)
	{
		for(u8 i =0,j =9 ;i<10; i++,j--)
    3362:	18 8a       	std	Y+16, r1	; 0x10
    3364:	89 e0       	ldi	r24, 0x09	; 9
    3366:	8f 87       	std	Y+15, r24	; 0x0f
    3368:	80 c0       	rjmp	.+256    	; 0x346a <main+0x128>
		{
			S_Segment_enuDisplayNum(0,i);
    336a:	80 e0       	ldi	r24, 0x00	; 0
    336c:	68 89       	ldd	r22, Y+16	; 0x10
    336e:	0e 94 75 0d 	call	0x1aea	; 0x1aea <S_Segment_enuDisplayNum>
			S_Segment_enuDisplayNum(1,j);
    3372:	81 e0       	ldi	r24, 0x01	; 1
    3374:	6f 85       	ldd	r22, Y+15	; 0x0f
    3376:	0e 94 75 0d 	call	0x1aea	; 0x1aea <S_Segment_enuDisplayNum>
    337a:	80 e0       	ldi	r24, 0x00	; 0
    337c:	90 e0       	ldi	r25, 0x00	; 0
    337e:	aa ef       	ldi	r26, 0xFA	; 250
    3380:	b3 e4       	ldi	r27, 0x43	; 67
    3382:	8b 87       	std	Y+11, r24	; 0x0b
    3384:	9c 87       	std	Y+12, r25	; 0x0c
    3386:	ad 87       	std	Y+13, r26	; 0x0d
    3388:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    338a:	6b 85       	ldd	r22, Y+11	; 0x0b
    338c:	7c 85       	ldd	r23, Y+12	; 0x0c
    338e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3390:	9e 85       	ldd	r25, Y+14	; 0x0e
    3392:	20 e0       	ldi	r18, 0x00	; 0
    3394:	30 e0       	ldi	r19, 0x00	; 0
    3396:	4a e7       	ldi	r20, 0x7A	; 122
    3398:	53 e4       	ldi	r21, 0x43	; 67
    339a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    339e:	dc 01       	movw	r26, r24
    33a0:	cb 01       	movw	r24, r22
    33a2:	8f 83       	std	Y+7, r24	; 0x07
    33a4:	98 87       	std	Y+8, r25	; 0x08
    33a6:	a9 87       	std	Y+9, r26	; 0x09
    33a8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    33aa:	6f 81       	ldd	r22, Y+7	; 0x07
    33ac:	78 85       	ldd	r23, Y+8	; 0x08
    33ae:	89 85       	ldd	r24, Y+9	; 0x09
    33b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    33b2:	20 e0       	ldi	r18, 0x00	; 0
    33b4:	30 e0       	ldi	r19, 0x00	; 0
    33b6:	40 e8       	ldi	r20, 0x80	; 128
    33b8:	5f e3       	ldi	r21, 0x3F	; 63
    33ba:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    33be:	88 23       	and	r24, r24
    33c0:	2c f4       	brge	.+10     	; 0x33cc <main+0x8a>
		__ticks = 1;
    33c2:	81 e0       	ldi	r24, 0x01	; 1
    33c4:	90 e0       	ldi	r25, 0x00	; 0
    33c6:	9e 83       	std	Y+6, r25	; 0x06
    33c8:	8d 83       	std	Y+5, r24	; 0x05
    33ca:	3f c0       	rjmp	.+126    	; 0x344a <main+0x108>
	else if (__tmp > 65535)
    33cc:	6f 81       	ldd	r22, Y+7	; 0x07
    33ce:	78 85       	ldd	r23, Y+8	; 0x08
    33d0:	89 85       	ldd	r24, Y+9	; 0x09
    33d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    33d4:	20 e0       	ldi	r18, 0x00	; 0
    33d6:	3f ef       	ldi	r19, 0xFF	; 255
    33d8:	4f e7       	ldi	r20, 0x7F	; 127
    33da:	57 e4       	ldi	r21, 0x47	; 71
    33dc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    33e0:	18 16       	cp	r1, r24
    33e2:	4c f5       	brge	.+82     	; 0x3436 <main+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    33e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    33e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    33ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    33ec:	20 e0       	ldi	r18, 0x00	; 0
    33ee:	30 e0       	ldi	r19, 0x00	; 0
    33f0:	40 e2       	ldi	r20, 0x20	; 32
    33f2:	51 e4       	ldi	r21, 0x41	; 65
    33f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33f8:	dc 01       	movw	r26, r24
    33fa:	cb 01       	movw	r24, r22
    33fc:	bc 01       	movw	r22, r24
    33fe:	cd 01       	movw	r24, r26
    3400:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3404:	dc 01       	movw	r26, r24
    3406:	cb 01       	movw	r24, r22
    3408:	9e 83       	std	Y+6, r25	; 0x06
    340a:	8d 83       	std	Y+5, r24	; 0x05
    340c:	0f c0       	rjmp	.+30     	; 0x342c <main+0xea>
    340e:	89 e1       	ldi	r24, 0x19	; 25
    3410:	90 e0       	ldi	r25, 0x00	; 0
    3412:	9c 83       	std	Y+4, r25	; 0x04
    3414:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3416:	8b 81       	ldd	r24, Y+3	; 0x03
    3418:	9c 81       	ldd	r25, Y+4	; 0x04
    341a:	01 97       	sbiw	r24, 0x01	; 1
    341c:	f1 f7       	brne	.-4      	; 0x341a <main+0xd8>
    341e:	9c 83       	std	Y+4, r25	; 0x04
    3420:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3422:	8d 81       	ldd	r24, Y+5	; 0x05
    3424:	9e 81       	ldd	r25, Y+6	; 0x06
    3426:	01 97       	sbiw	r24, 0x01	; 1
    3428:	9e 83       	std	Y+6, r25	; 0x06
    342a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    342c:	8d 81       	ldd	r24, Y+5	; 0x05
    342e:	9e 81       	ldd	r25, Y+6	; 0x06
    3430:	00 97       	sbiw	r24, 0x00	; 0
    3432:	69 f7       	brne	.-38     	; 0x340e <main+0xcc>
    3434:	14 c0       	rjmp	.+40     	; 0x345e <main+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3436:	6f 81       	ldd	r22, Y+7	; 0x07
    3438:	78 85       	ldd	r23, Y+8	; 0x08
    343a:	89 85       	ldd	r24, Y+9	; 0x09
    343c:	9a 85       	ldd	r25, Y+10	; 0x0a
    343e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3442:	dc 01       	movw	r26, r24
    3444:	cb 01       	movw	r24, r22
    3446:	9e 83       	std	Y+6, r25	; 0x06
    3448:	8d 83       	std	Y+5, r24	; 0x05
    344a:	8d 81       	ldd	r24, Y+5	; 0x05
    344c:	9e 81       	ldd	r25, Y+6	; 0x06
    344e:	9a 83       	std	Y+2, r25	; 0x02
    3450:	89 83       	std	Y+1, r24	; 0x01
    3452:	89 81       	ldd	r24, Y+1	; 0x01
    3454:	9a 81       	ldd	r25, Y+2	; 0x02
    3456:	01 97       	sbiw	r24, 0x01	; 1
    3458:	f1 f7       	brne	.-4      	; 0x3456 <main+0x114>
    345a:	9a 83       	std	Y+2, r25	; 0x02
    345c:	89 83       	std	Y+1, r24	; 0x01
	DIO_enuInit();
	S_Segment_enuInit(S_SEGMENT_AstrSegconfig);

	while(1)
	{
		for(u8 i =0,j =9 ;i<10; i++,j--)
    345e:	88 89       	ldd	r24, Y+16	; 0x10
    3460:	8f 5f       	subi	r24, 0xFF	; 255
    3462:	88 8b       	std	Y+16, r24	; 0x10
    3464:	8f 85       	ldd	r24, Y+15	; 0x0f
    3466:	81 50       	subi	r24, 0x01	; 1
    3468:	8f 87       	std	Y+15, r24	; 0x0f
    346a:	88 89       	ldd	r24, Y+16	; 0x10
    346c:	8a 30       	cpi	r24, 0x0A	; 10
    346e:	08 f4       	brcc	.+2      	; 0x3472 <main+0x130>
    3470:	7c cf       	rjmp	.-264    	; 0x336a <main+0x28>
    3472:	77 cf       	rjmp	.-274    	; 0x3362 <main+0x20>

00003474 <__prologue_saves__>:
    3474:	2f 92       	push	r2
    3476:	3f 92       	push	r3
    3478:	4f 92       	push	r4
    347a:	5f 92       	push	r5
    347c:	6f 92       	push	r6
    347e:	7f 92       	push	r7
    3480:	8f 92       	push	r8
    3482:	9f 92       	push	r9
    3484:	af 92       	push	r10
    3486:	bf 92       	push	r11
    3488:	cf 92       	push	r12
    348a:	df 92       	push	r13
    348c:	ef 92       	push	r14
    348e:	ff 92       	push	r15
    3490:	0f 93       	push	r16
    3492:	1f 93       	push	r17
    3494:	cf 93       	push	r28
    3496:	df 93       	push	r29
    3498:	cd b7       	in	r28, 0x3d	; 61
    349a:	de b7       	in	r29, 0x3e	; 62
    349c:	ca 1b       	sub	r28, r26
    349e:	db 0b       	sbc	r29, r27
    34a0:	0f b6       	in	r0, 0x3f	; 63
    34a2:	f8 94       	cli
    34a4:	de bf       	out	0x3e, r29	; 62
    34a6:	0f be       	out	0x3f, r0	; 63
    34a8:	cd bf       	out	0x3d, r28	; 61
    34aa:	09 94       	ijmp

000034ac <__epilogue_restores__>:
    34ac:	2a 88       	ldd	r2, Y+18	; 0x12
    34ae:	39 88       	ldd	r3, Y+17	; 0x11
    34b0:	48 88       	ldd	r4, Y+16	; 0x10
    34b2:	5f 84       	ldd	r5, Y+15	; 0x0f
    34b4:	6e 84       	ldd	r6, Y+14	; 0x0e
    34b6:	7d 84       	ldd	r7, Y+13	; 0x0d
    34b8:	8c 84       	ldd	r8, Y+12	; 0x0c
    34ba:	9b 84       	ldd	r9, Y+11	; 0x0b
    34bc:	aa 84       	ldd	r10, Y+10	; 0x0a
    34be:	b9 84       	ldd	r11, Y+9	; 0x09
    34c0:	c8 84       	ldd	r12, Y+8	; 0x08
    34c2:	df 80       	ldd	r13, Y+7	; 0x07
    34c4:	ee 80       	ldd	r14, Y+6	; 0x06
    34c6:	fd 80       	ldd	r15, Y+5	; 0x05
    34c8:	0c 81       	ldd	r16, Y+4	; 0x04
    34ca:	1b 81       	ldd	r17, Y+3	; 0x03
    34cc:	aa 81       	ldd	r26, Y+2	; 0x02
    34ce:	b9 81       	ldd	r27, Y+1	; 0x01
    34d0:	ce 0f       	add	r28, r30
    34d2:	d1 1d       	adc	r29, r1
    34d4:	0f b6       	in	r0, 0x3f	; 63
    34d6:	f8 94       	cli
    34d8:	de bf       	out	0x3e, r29	; 62
    34da:	0f be       	out	0x3f, r0	; 63
    34dc:	cd bf       	out	0x3d, r28	; 61
    34de:	ed 01       	movw	r28, r26
    34e0:	08 95       	ret

000034e2 <_exit>:
    34e2:	f8 94       	cli

000034e4 <__stop_program>:
    34e4:	ff cf       	rjmp	.-2      	; 0x34e4 <__stop_program>
